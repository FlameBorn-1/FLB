{"id":"0c0d9e07d480558d835736ff76b8e791","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC4906.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Metadata} from \"./IERC721Metadata.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {IERC4906-MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/HealthIDNFT.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\n/**\r\n * @title HealthIDNFT\r\n * @dev Soulbound NFT contract for health identity tokens\r\n * @notice This contract creates non-transferable NFTs that represent health identities\r\n */\r\ncontract HealthIDNFT is ERC721URIStorage, AccessControl {\r\n    // Role definitions\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n    bytes32 public constant MULTISIG_ROLE = keccak256(\"MULTISIG_ROLE\");\r\n\r\n    // Token counter for auto-incrementing token IDs\r\n    uint256 private _tokenIdCounter;\r\n\r\n    // Custom errors\r\n    error AdminRequired();\r\n    error SoulboundTransferNotAllowed();\r\n    error SoulboundApprovalNotAllowed();\r\n    error SoulboundSetApprovalForAllNotAllowed();\r\n    error InvalidTokenId();\r\n    error ZeroAddress();\r\n\r\n    // Events\r\n    event HealthIDMinted(\r\n        address indexed to,\r\n        uint256 indexed tokenId,\r\n        string metadataURI\r\n    );\r\n    event HealthIDMetadataUpdated(\r\n        uint256 indexed tokenId,\r\n        string newMetadataURI\r\n    );\r\n\r\n    /**\r\n     * @dev Constructor sets up the NFT with name, symbol, and initial roles\r\n     * @param admin Address that will have admin privileges\r\n     */\r\n    constructor(address admin) ERC721(\"HealthIDNFT\", \"HEALTH\") {\r\n        if (admin == address(0)) revert AdminRequired();\r\n\r\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\r\n        _grantRole(MINTER_ROLE, admin);\r\n        _grantRole(MULTISIG_ROLE, msg.sender);\r\n\r\n        // Start token IDs from 1\r\n        _tokenIdCounter = 1;\r\n    }\r\n\r\n    /**\r\n     * @dev Override _update to enforce soulbound property\r\n     */\r\n    function _update(\r\n        address to,\r\n        uint256 tokenId,\r\n        address auth\r\n    ) internal override returns (address) {\r\n        address from = _ownerOf(tokenId);\r\n\r\n        // Allow minting (from == address(0)) but block all transfers\r\n        if (from != address(0) && to != address(0)) {\r\n            revert SoulboundTransferNotAllowed();\r\n        }\r\n\r\n        return super._update(to, tokenId, auth);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}\r\n     */\r\n    function supportsInterface(\r\n        bytes4 interfaceId\r\n    ) public view override(ERC721URIStorage, AccessControl) returns (bool) {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev Mint a new HealthID NFT with auto-incrementing token ID\r\n     * @param to Address to mint the token to\r\n     * @return tokenId The ID of the newly minted token\r\n     */\r\n    function mint(address to) external onlyRole(MINTER_ROLE) returns (uint256) {\r\n        if (to == address(0)) revert ZeroAddress();\r\n\r\n        uint256 tokenId = _tokenIdCounter;\r\n        _tokenIdCounter++;\r\n\r\n        _mint(to, tokenId);\r\n\r\n        emit HealthIDMinted(to, tokenId, \"\");\r\n        return tokenId;\r\n    }\r\n\r\n    /**\r\n     * @dev Mint a new HealthID NFT with metadata URI\r\n     * @param to Address to mint the token to\r\n     * @param metadataURI URI pointing to the token metadata\r\n     * @return tokenId The ID of the newly minted token\r\n     */\r\n    function mintWithMetadata(\r\n        address to,\r\n        string memory metadataURI\r\n    ) external onlyRole(MINTER_ROLE) returns (uint256) {\r\n        if (to == address(0)) revert ZeroAddress();\r\n\r\n        uint256 tokenId = _tokenIdCounter;\r\n        _tokenIdCounter++;\r\n\r\n        _mint(to, tokenId);\r\n        _setTokenURI(tokenId, metadataURI);\r\n\r\n        emit HealthIDMinted(to, tokenId, metadataURI);\r\n        return tokenId;\r\n    }\r\n\r\n    /**\r\n     * @dev Update metadata URI for an existing token\r\n     * @param tokenId Token ID to update\r\n     * @param metadataURI New metadata URI\r\n     */\r\n    function updateMetadata(\r\n        uint256 tokenId,\r\n        string memory metadataURI\r\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        if (_ownerOf(tokenId) == address(0)) revert InvalidTokenId();\r\n\r\n        _setTokenURI(tokenId, metadataURI);\r\n        emit HealthIDMetadataUpdated(tokenId, metadataURI);\r\n    }\r\n\r\n    /**\r\n     * @dev Get the current token ID counter value\r\n     * @return Current token ID that will be used for next mint\r\n     */\r\n    function getCurrentTokenId() external view returns (uint256) {\r\n        return _tokenIdCounter;\r\n    }\r\n\r\n    /**\r\n     * @dev Get total number of tokens minted\r\n     * @return Total supply of tokens\r\n     */\r\n    function totalSupply() external view returns (uint256) {\r\n        return _tokenIdCounter - 1;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[296],"Context":[1903],"ERC165":[3381],"IAccessControl":[379],"IERC165":[3393]},"id":297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":380,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":1904,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":3382,"src":"233:66:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"241:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":7,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"250:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":10,"name":"Context","nameLocations":["1997:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1903,"src":"1997:7:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1997:7:0"},{"baseName":{"id":12,"name":"IAccessControl","nameLocations":["2006:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"2006:14:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"2006:14:0"},{"baseName":{"id":14,"name":"ERC165","nameLocations":["2022:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3381,"src":"2022:6:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"2022:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"301:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":296,"linearizedBaseContracts":[296,3381,3393,379,1903],"name":"AccessControl","nameLocation":"1980:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":22,"members":[{"constant":false,"id":19,"mutability":"mutable","name":"hasRole","nameLocation":"2094:7:0","nodeType":"VariableDeclaration","scope":22,"src":"2061:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":18,"keyName":"account","keyNameLocation":"2077:7:0","keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2061:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"2088:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"adminRole","nameLocation":"2119:9:0","nodeType":"VariableDeclaration","scope":22,"src":"2111:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2042:8:0","nodeType":"StructDefinition","scope":296,"src":"2035:100:0","visibility":"public"},{"constant":false,"id":27,"mutability":"mutable","name":"_roles","nameLocation":"2183:6:0","nodeType":"VariableDeclaration","scope":296,"src":"2141:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":26,"keyName":"role","keyNameLocation":"2157:4:0","keyType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2141:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"RoleData","nameLocations":["2165:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"2165:8:0"},"referencedDeclaration":22,"src":"2165:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":30,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2220:18:0","nodeType":"VariableDeclaration","scope":296,"src":"2196:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2196:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":40,"nodeType":"Block","src":"2463:44:0","statements":[{"expression":{"arguments":[{"id":36,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":35,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":94,"src":"2473:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2473:16:0"},{"id":39,"nodeType":"PlaceholderStatement","src":"2499:1:0"}]},"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"2252:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":41,"name":"onlyRole","nameLocation":"2440:8:0","nodeType":"ModifierDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"role","nameLocation":"2457:4:0","nodeType":"VariableDeclaration","scope":41,"src":"2449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:14:0"},"src":"2431:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3380],"body":{"id":62,"nodeType":"Block","src":"2632:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":50,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2649:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":52,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2669:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}],"id":51,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2664:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$379","typeString":"type(contract IAccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2685:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2664:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2649:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":58,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2724:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":56,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2700:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$296_$","typeString":"type(contract super AccessControl)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2706:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3380,"src":"2700:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2700:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2649:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49,"id":61,"nodeType":"Return","src":"2642:94:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2513:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":63,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2550:17:0","nodeType":"FunctionDefinition","overrides":{"id":46,"nodeType":"OverrideSpecifier","overrides":[],"src":"2608:8:0"},"parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"interfaceId","nameLocation":"2575:11:0","nodeType":"VariableDeclaration","scope":63,"src":"2568:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":43,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2568:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2567:20:0"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"2626:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47,"name":"bool","nodeType":"ElementaryTypeName","src":"2626:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2625:6:0"},"scope":296,"src":"2541:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[346],"body":{"id":80,"nodeType":"Block","src":"2913:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":73,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2930:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":75,"indexExpression":{"id":74,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"2937:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":76,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2943:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"2930:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":78,"indexExpression":{"id":77,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2951:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":72,"id":79,"nodeType":"Return","src":"2923:36:0"}]},"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"2749:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":81,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2839:7:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"role","nameLocation":"2855:4:0","nodeType":"VariableDeclaration","scope":81,"src":"2847:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2847:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"account","nameLocation":"2869:7:0","nodeType":"VariableDeclaration","scope":81,"src":"2861:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"2861:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2846:31:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":81,"src":"2907:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":70,"name":"bool","nodeType":"ElementaryTypeName","src":"2907:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2906:6:0"},"scope":296,"src":"2830:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":93,"nodeType":"Block","src":"3231:47:0","statements":[{"expression":{"arguments":[{"id":88,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3252:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":89,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"3258:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":87,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":115,"src":"3241:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3241:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":92,"nodeType":"ExpressionStatement","src":"3241:30:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2972:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":94,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3184:10:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"role","nameLocation":"3203:4:0","nodeType":"VariableDeclaration","scope":94,"src":"3195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3194:14:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"3231:0:0"},"scope":296,"src":"3175:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"3481:124:0","statements":[{"condition":{"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3495:23:0","subExpression":{"arguments":[{"id":103,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3504:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":104,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3510:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":102,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"3496:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3496:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":113,"nodeType":"IfStatement","src":"3491:108:0","trueBody":{"id":112,"nodeType":"Block","src":"3520:79:0","statements":[{"errorCall":{"arguments":[{"id":108,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3574:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3583:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":107,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3541:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":111,"nodeType":"RevertStatement","src":"3534:54:0"}]}}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3284:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3417:10:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"role","nameLocation":"3436:4:0","nodeType":"VariableDeclaration","scope":115,"src":"3428:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3428:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"account","nameLocation":"3450:7:0","nodeType":"VariableDeclaration","scope":115,"src":"3442:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"3442:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:31:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[],"src":"3481:0:0"},"scope":296,"src":"3408:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[354],"body":{"id":128,"nodeType":"Block","src":"3860:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":123,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3877:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":125,"indexExpression":{"id":124,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"3884:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3877:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3890:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"3877:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":122,"id":127,"nodeType":"Return","src":"3870:29:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3611:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":129,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3795:12:0","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"role","nameLocation":"3816:4:0","nodeType":"VariableDeclaration","scope":129,"src":"3808:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3808:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3807:14:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":129,"src":"3851:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3850:9:0"},"scope":296,"src":"3786:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[362],"body":{"id":147,"nodeType":"Block","src":"4296:42:0","statements":[{"expression":{"arguments":[{"id":143,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4317:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":144,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4323:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":142,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4306:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":146,"nodeType":"ExpressionStatement","src":"4306:25:0"}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"3912:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":148,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4289:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":137,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4276:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":140,"kind":"modifierInvocation","modifierName":{"id":136,"name":"onlyRole","nameLocations":["4267:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4267:8:0"},"nodeType":"ModifierInvocation","src":"4267:28:0"}],"name":"grantRole","nameLocation":"4211:9:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4229:4:0","nodeType":"VariableDeclaration","scope":148,"src":"4221:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4221:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4243:7:0","nodeType":"VariableDeclaration","scope":148,"src":"4235:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4235:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4220:31:0"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"4296:0:0"},"scope":296,"src":"4202:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[370],"body":{"id":166,"nodeType":"Block","src":"4713:43:0","statements":[{"expression":{"arguments":[{"id":162,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4735:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":163,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4741:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":161,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4723:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":165,"nodeType":"ExpressionStatement","src":"4723:26:0"}]},"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"4344:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":167,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":157,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4706:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":156,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4693:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4693:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":159,"kind":"modifierInvocation","modifierName":{"id":155,"name":"onlyRole","nameLocations":["4684:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4684:8:0"},"nodeType":"ModifierInvocation","src":"4684:28:0"}],"name":"revokeRole","nameLocation":"4627:10:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"role","nameLocation":"4646:4:0","nodeType":"VariableDeclaration","scope":167,"src":"4638:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4638:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"account","nameLocation":"4660:7:0","nodeType":"VariableDeclaration","scope":167,"src":"4652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4637:31:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"4713:0:0"},"scope":296,"src":"4618:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[378],"body":{"id":189,"nodeType":"Block","src":"5383:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":175,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5397:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":176,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"5419:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5419:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5397:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":183,"nodeType":"IfStatement","src":"5393:102:0","trueBody":{"id":182,"nodeType":"Block","src":"5433:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":179,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5454:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5454:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":181,"nodeType":"RevertStatement","src":"5447:37:0"}]}},{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"5517:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5523:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5505:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5505:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5505:37:0"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"4762:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":190,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5313:12:0","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"role","nameLocation":"5334:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5326:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5348:18:0","nodeType":"VariableDeclaration","scope":190,"src":"5340:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"5340:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5325:42:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5383:0:0"},"scope":296,"src":"5304:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":217,"nodeType":"Block","src":"5747:174:0","statements":[{"assignments":[199],"declarations":[{"constant":false,"id":199,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5765:17:0","nodeType":"VariableDeclaration","scope":217,"src":"5757:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5757:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":203,"initialValue":{"arguments":[{"id":201,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5785:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5757:46:0"},{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":204,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5813:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":206,"indexExpression":{"id":205,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5820:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5813:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"5813:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":208,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5838:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5813:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":210,"nodeType":"ExpressionStatement","src":"5813:34:0"},{"eventCall":{"arguments":[{"id":212,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5879:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"5885:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":214,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5904:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":211,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5862:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"EmitStatement","src":"5857:57:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5555:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":218,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5683:13:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5705:4:0","nodeType":"VariableDeclaration","scope":218,"src":"5697:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5697:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"adminRole","nameLocation":"5719:9:0","nodeType":"VariableDeclaration","scope":218,"src":"5711:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5711:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5696:33:0"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"5747:0:0"},"scope":296,"src":"5674:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":256,"nodeType":"Block","src":"6238:233:0","statements":[{"condition":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6252:23:0","subExpression":{"arguments":[{"id":229,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6261:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":230,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6267:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6253:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6253:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":254,"nodeType":"Block","src":"6428:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6449:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":227,"id":253,"nodeType":"Return","src":"6442:12:0"}]},"id":255,"nodeType":"IfStatement","src":"6248:217:0","trueBody":{"id":251,"nodeType":"Block","src":"6277:145:0","statements":[{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":233,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6291:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":235,"indexExpression":{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6298:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6291:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6304:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6291:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":238,"indexExpression":{"id":237,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6312:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6291:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6323:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6291:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":241,"nodeType":"ExpressionStatement","src":"6291:36:0"},{"eventCall":{"arguments":[{"id":243,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6358:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":244,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6364:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"6373:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":242,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6346:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"EmitStatement","src":"6341:45:0"},{"expression":{"hexValue":"74727565","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6407:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":227,"id":250,"nodeType":"Return","src":"6400:11:0"}]}}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"5927:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":257,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6164:10:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"role","nameLocation":"6183:4:0","nodeType":"VariableDeclaration","scope":257,"src":"6175:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6175:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"account","nameLocation":"6197:7:0","nodeType":"VariableDeclaration","scope":257,"src":"6189:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"6189:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6174:31:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"6232:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"6232:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6231:6:0"},"scope":296,"src":"6155:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"6792:233:0","statements":[{"condition":{"arguments":[{"id":268,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":269,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":267,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":292,"nodeType":"Block","src":"6982:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7003:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":266,"id":291,"nodeType":"Return","src":"6996:12:0"}]},"id":293,"nodeType":"IfStatement","src":"6802:217:0","trueBody":{"id":289,"nodeType":"Block","src":"6830:146:0","statements":[{"expression":{"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":271,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6844:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":273,"indexExpression":{"id":272,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6851:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6844:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6857:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6844:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":276,"indexExpression":{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6865:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6844:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6876:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6844:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":279,"nodeType":"ExpressionStatement","src":"6844:37:0"},{"eventCall":{"arguments":[{"id":281,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6912:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":282,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6918:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"6927:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6927:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":280,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"6900:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6900:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"EmitStatement","src":"6895:45:0"},{"expression":{"hexValue":"74727565","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6961:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":266,"id":288,"nodeType":"Return","src":"6954:11:0"}]}}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"6477:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6717:11:0","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"role","nameLocation":"6737:4:0","nodeType":"VariableDeclaration","scope":295,"src":"6729:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6729:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"account","nameLocation":"6751:7:0","nodeType":"VariableDeclaration","scope":295,"src":"6743:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"6743:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6728:31:0"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"6786:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":264,"name":"bool","nodeType":"ElementaryTypeName","src":"6786:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6785:6:0"},"scope":296,"src":"6708:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":297,"src":"1962:5065:0","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"108:6920:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[379]},"id":380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":298,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":379,"linearizedBaseContracts":[379],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":306,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":306,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":306,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":309,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":318,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":318,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":318,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":318,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":327,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":327,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":327,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":327,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":336,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":336,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":336,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":336,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":346,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":346,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":346,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":379,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":354,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":354,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":379,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":362,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":362,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":362,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":379,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":370,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":370,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":370,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":379,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":378,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":378,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":379,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":380,"src":"226:3116:1","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3393]},"id":384,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":381,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":383,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":384,"sourceUnit":3394,"src":"133:59:2","symbolAliases":[{"foreign":{"id":382,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[3393],"IERC4906":[407],"IERC721":[1622]},"id":408,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":385,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:3"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":387,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":408,"sourceUnit":384,"src":"133:38:3","symbolAliases":[{"foreign":{"id":386,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":389,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":408,"sourceUnit":412,"src":"172:38:3","symbolAliases":[{"foreign":{"id":388,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"180:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":391,"name":"IERC165","nameLocations":["279:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3393,"src":"279:7:3"},"id":392,"nodeType":"InheritanceSpecifier","src":"279:7:3"},{"baseName":{"id":393,"name":"IERC721","nameLocations":["288:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1622,"src":"288:7:3"},"id":394,"nodeType":"InheritanceSpecifier","src":"288:7:3"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"212:45:3","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":407,"linearizedBaseContracts":[407,1622,3393],"name":"IERC4906","nameLocation":"267:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"302:201:3","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":399,"name":"MetadataUpdate","nameLocation":"514:14:3","nodeType":"EventDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:3","nodeType":"VariableDeclaration","scope":399,"src":"529:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:3"},"src":"508:39:3"},{"anonymous":false,"documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"553:212:3","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":406,"name":"BatchMetadataUpdate","nameLocation":"776:19:3","nodeType":"EventDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:3","nodeType":"VariableDeclaration","scope":406,"src":"796:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":401,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":404,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:3","nodeType":"VariableDeclaration","scope":406,"src":"818:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":403,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:3"},"src":"770:68:3"}],"scope":408,"src":"257:583:3","usedErrors":[],"usedEvents":[399,406,1521,1530,1539]}],"src":"107:734:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[1622]},"id":412,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":409,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"106:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":412,"sourceUnit":1623,"src":"132:52:4","symbolAliases":[{"foreign":{"id":410,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"140:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[548],"IERC20Errors":[453],"IERC721Errors":[501]},"id":549,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":413,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"138:141:5","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":453,"linearizedBaseContracts":[453],"name":"IERC20Errors","nameLocation":"290:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":415,"nodeType":"StructuredDocumentation","src":"309:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":423,"name":"ERC20InsufficientBalance","nameLocation":"629:24:5","nodeType":"ErrorDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"sender","nameLocation":"662:6:5","nodeType":"VariableDeclaration","scope":423,"src":"654:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"balance","nameLocation":"678:7:5","nodeType":"VariableDeclaration","scope":423,"src":"670:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"needed","nameLocation":"695:6:5","nodeType":"VariableDeclaration","scope":423,"src":"687:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:5"},"src":"623:80:5"},{"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"709:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":428,"name":"ERC20InvalidSender","nameLocation":"872:18:5","nodeType":"ErrorDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"sender","nameLocation":"899:6:5","nodeType":"VariableDeclaration","scope":428,"src":"891:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:5"},"src":"866:41:5"},{"documentation":{"id":429,"nodeType":"StructuredDocumentation","src":"913:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":433,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:5","nodeType":"ErrorDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:5","nodeType":"VariableDeclaration","scope":433,"src":"1104:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:5"},"src":"1077:45:5"},{"documentation":{"id":434,"nodeType":"StructuredDocumentation","src":"1128:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":442,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:5","nodeType":"ErrorDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"spender","nameLocation":"1519:7:5","nodeType":"VariableDeclaration","scope":442,"src":"1511:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:5","nodeType":"VariableDeclaration","scope":442,"src":"1528:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"needed","nameLocation":"1555:6:5","nodeType":"VariableDeclaration","scope":442,"src":"1547:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:5"},"src":"1478:85:5"},{"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"1569:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":447,"name":"ERC20InvalidApprover","nameLocation":"1754:20:5","nodeType":"ErrorDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"approver","nameLocation":"1783:8:5","nodeType":"VariableDeclaration","scope":447,"src":"1775:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:5"},"src":"1748:45:5"},{"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"1799:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":452,"name":"ERC20InvalidSpender","nameLocation":"2005:19:5","nodeType":"ErrorDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"spender","nameLocation":"2033:7:5","nodeType":"VariableDeclaration","scope":452,"src":"2025:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:5"},"src":"1999:43:5"}],"scope":549,"src":"280:1764:5","usedErrors":[423,428,433,442,447,452],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"2046:143:5","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":501,"linearizedBaseContracts":[501],"name":"IERC721Errors","nameLocation":"2200:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":455,"nodeType":"StructuredDocumentation","src":"2220:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":459,"name":"ERC721InvalidOwner","nameLocation":"2450:18:5","nodeType":"ErrorDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"owner","nameLocation":"2477:5:5","nodeType":"VariableDeclaration","scope":459,"src":"2469:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:5"},"src":"2444:40:5"},{"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"2490:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":464,"name":"ERC721NonexistentToken","nameLocation":"2633:22:5","nodeType":"ErrorDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:5","nodeType":"VariableDeclaration","scope":464,"src":"2656:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:5"},"src":"2627:46:5"},{"documentation":{"id":465,"nodeType":"StructuredDocumentation","src":"2679:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":473,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:5","nodeType":"ErrorDefinition","parameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"mutability":"mutable","name":"sender","nameLocation":"3008:6:5","nodeType":"VariableDeclaration","scope":473,"src":"3000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":466,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":469,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:5","nodeType":"VariableDeclaration","scope":473,"src":"3016:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":471,"mutability":"mutable","name":"owner","nameLocation":"3041:5:5","nodeType":"VariableDeclaration","scope":473,"src":"3033:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:5"},"src":"2973:75:5"},{"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"3054:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":478,"name":"ERC721InvalidSender","nameLocation":"3217:19:5","nodeType":"ErrorDefinition","parameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"sender","nameLocation":"3245:6:5","nodeType":"VariableDeclaration","scope":478,"src":"3237:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:5"},"src":"3211:42:5"},{"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"3259:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":483,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:5","nodeType":"ErrorDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:5","nodeType":"VariableDeclaration","scope":483,"src":"3451:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:5"},"src":"3423:46:5"},{"documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"3475:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":490,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:5","nodeType":"ErrorDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"operator","nameLocation":"3768:8:5","nodeType":"VariableDeclaration","scope":490,"src":"3760:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:5","nodeType":"VariableDeclaration","scope":490,"src":"3778:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:5"},"src":"3727:68:5"},{"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"3801:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":495,"name":"ERC721InvalidApprover","nameLocation":"3986:21:5","nodeType":"ErrorDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"approver","nameLocation":"4016:8:5","nodeType":"VariableDeclaration","scope":495,"src":"4008:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:5"},"src":"3980:46:5"},{"documentation":{"id":496,"nodeType":"StructuredDocumentation","src":"4032:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":500,"name":"ERC721InvalidOperator","nameLocation":"4240:21:5","nodeType":"ErrorDefinition","parameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"operator","nameLocation":"4270:8:5","nodeType":"VariableDeclaration","scope":500,"src":"4262:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:5"},"src":"4234:46:5"}],"scope":549,"src":"2190:2092:5","usedErrors":[459,464,473,478,483,490,495,500],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":502,"nodeType":"StructuredDocumentation","src":"4284:145:5","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":548,"linearizedBaseContracts":[548],"name":"IERC1155Errors","nameLocation":"4440:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"4461:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":513,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:5","nodeType":"ErrorDefinition","parameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"sender","nameLocation":"4868:6:5","nodeType":"VariableDeclaration","scope":513,"src":"4860:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"balance","nameLocation":"4884:7:5","nodeType":"VariableDeclaration","scope":513,"src":"4876:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"needed","nameLocation":"4901:6:5","nodeType":"VariableDeclaration","scope":513,"src":"4893:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":508,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:5","nodeType":"VariableDeclaration","scope":513,"src":"4909:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":510,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:5"},"src":"4827:99:5"},{"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"4932:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":518,"name":"ERC1155InvalidSender","nameLocation":"5095:20:5","nodeType":"ErrorDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"sender","nameLocation":"5124:6:5","nodeType":"VariableDeclaration","scope":518,"src":"5116:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:5"},"src":"5089:43:5"},{"documentation":{"id":519,"nodeType":"StructuredDocumentation","src":"5138:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":523,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:5","nodeType":"ErrorDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:5","nodeType":"VariableDeclaration","scope":523,"src":"5331:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:5"},"src":"5302:47:5"},{"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"5355:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":530,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:5","nodeType":"ErrorDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"operator","nameLocation":"5659:8:5","nodeType":"VariableDeclaration","scope":530,"src":"5651:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"owner","nameLocation":"5677:5:5","nodeType":"VariableDeclaration","scope":530,"src":"5669:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":527,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:5"},"src":"5616:68:5"},{"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"5690:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":535,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:5","nodeType":"ErrorDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"approver","nameLocation":"5906:8:5","nodeType":"VariableDeclaration","scope":535,"src":"5898:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:5"},"src":"5869:47:5"},{"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"5922:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":540,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:5","nodeType":"ErrorDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"operator","nameLocation":"6161:8:5","nodeType":"VariableDeclaration","scope":540,"src":"6153:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:5"},"src":"6124:47:5"},{"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"6177:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":547,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:5","nodeType":"ErrorDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:5","nodeType":"VariableDeclaration","scope":547,"src":"6494:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:5","nodeType":"VariableDeclaration","scope":547,"src":"6513:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:5"},"src":"6462:73:5"}],"scope":549,"src":"4430:2107:5","usedErrors":[513,518,523,530,535,540,547],"usedEvents":[]}],"src":"112:6426:5"},"id":5},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1903],"ERC165":[3381],"ERC721":[1505],"ERC721Utils":[1873],"IERC165":[3393],"IERC721":[1622],"IERC721Errors":[501],"IERC721Metadata":[1796],"Strings":[3357]},"id":1506,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":550,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":552,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1506,"sourceUnit":1623,"src":"133:38:6","symbolAliases":[{"foreign":{"id":551,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"141:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":554,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1506,"sourceUnit":1797,"src":"172:65:6","symbolAliases":[{"foreign":{"id":553,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"180:15:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":556,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1506,"sourceUnit":1874,"src":"238:52:6","symbolAliases":[{"foreign":{"id":555,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"246:11:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":558,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1506,"sourceUnit":1904,"src":"291:48:6","symbolAliases":[{"foreign":{"id":557,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"299:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":560,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1506,"sourceUnit":3358,"src":"340:48:6","symbolAliases":[{"foreign":{"id":559,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"348:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":563,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1506,"sourceUnit":3382,"src":"389:69:6","symbolAliases":[{"foreign":{"id":561,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"397:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":562,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"406:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":565,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1506,"sourceUnit":549,"src":"459:66:6","symbolAliases":[{"foreign":{"id":564,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"467:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":567,"name":"Context","nameLocations":["803:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1903,"src":"803:7:6"},"id":568,"nodeType":"InheritanceSpecifier","src":"803:7:6"},{"baseName":{"id":569,"name":"ERC165","nameLocations":["812:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3381,"src":"812:6:6"},"id":570,"nodeType":"InheritanceSpecifier","src":"812:6:6"},{"baseName":{"id":571,"name":"IERC721","nameLocations":["820:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1622,"src":"820:7:6"},"id":572,"nodeType":"InheritanceSpecifier","src":"820:7:6"},{"baseName":{"id":573,"name":"IERC721Metadata","nameLocations":["829:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":1796,"src":"829:15:6"},"id":574,"nodeType":"InheritanceSpecifier","src":"829:15:6"},{"baseName":{"id":575,"name":"IERC721Errors","nameLocations":["846:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"846:13:6"},"id":576,"nodeType":"InheritanceSpecifier","src":"846:13:6"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"527:247:6","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1505,"linearizedBaseContracts":[1505,501,1796,1622,3381,3393,1903],"name":"ERC721","nameLocation":"793:6:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":579,"libraryName":{"id":577,"name":"Strings","nameLocations":["872:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":3357,"src":"872:7:6"},"nodeType":"UsingForDirective","src":"866:26:6","typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":581,"mutability":"mutable","name":"_name","nameLocation":"931:5:6","nodeType":"VariableDeclaration","scope":1505,"src":"916:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":580,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":583,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:6","nodeType":"VariableDeclaration","scope":1505,"src":"963:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":582,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":587,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:6","nodeType":"VariableDeclaration","scope":1505,"src":"992:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":586,"keyName":"tokenId","keyNameLocation":"1008:7:6","keyType":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":585,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":591,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:6","nodeType":"VariableDeclaration","scope":1505,"src":"1050:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":590,"keyName":"owner","keyNameLocation":"1066:5:6","keyType":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":589,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":595,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:6","nodeType":"VariableDeclaration","scope":1505,"src":"1108:59:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":594,"keyName":"tokenId","keyNameLocation":"1124:7:6","keyType":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":601,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:6","nodeType":"VariableDeclaration","scope":1505,"src":"1174:86:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":600,"keyName":"owner","keyNameLocation":"1190:5:6","keyType":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":599,"keyName":"operator","keyNameLocation":"1215:8:6","keyType":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":598,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":617,"nodeType":"Block","src":"1436:57:6","statements":[{"expression":{"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":609,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"1446:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":610,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"1454:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":612,"nodeType":"ExpressionStatement","src":"1446:13:6"},{"expression":{"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":613,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"1469:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":614,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"1479:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":616,"nodeType":"ExpressionStatement","src":"1469:17:6"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"1267:108:6","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":618,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"name_","nameLocation":"1406:5:6","nodeType":"VariableDeclaration","scope":618,"src":"1392:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":603,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:6","nodeType":"VariableDeclaration","scope":618,"src":"1413:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":605,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:6"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"1436:0:6"},"scope":1505,"src":"1380:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3380,3392],"body":{"id":648,"nodeType":"Block","src":"1635:192:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":629,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"1664:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":631,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"1684:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1622_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1622_$","typeString":"type(contract IERC721)"}],"id":630,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1622","typeString":"type(contract IERC721)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":635,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"1720:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":637,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"1740:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1796_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1796_$","typeString":"type(contract IERC721Metadata)"}],"id":636,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1796","typeString":"type(contract IERC721Metadata)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":644,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"1808:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":642,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1505_$","typeString":"type(contract super ERC721)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:6","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3380,"src":"1784:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":628,"id":647,"nodeType":"Return","src":"1645:175:6"}]},"documentation":{"id":619,"nodeType":"StructuredDocumentation","src":"1499:23:6","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":649,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:6","nodeType":"FunctionDefinition","overrides":{"id":625,"nodeType":"OverrideSpecifier","overrides":[{"id":623,"name":"ERC165","nameLocations":["1603:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3381,"src":"1603:6:6"},{"id":624,"name":"IERC165","nameLocations":["1611:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":3393,"src":"1611:7:6"}],"src":"1594:25:6"},"parameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:6","nodeType":"VariableDeclaration","scope":649,"src":"1554:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":620,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:6"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":649,"src":"1629:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":626,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:6"},"scope":1505,"src":"1527:300:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1547],"body":{"id":676,"nodeType":"Block","src":"1933:136:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":657,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"1947:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:6","typeDescriptions":{}}},"id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":671,"nodeType":"IfStatement","src":"1943:87:6","trueBody":{"id":670,"nodeType":"Block","src":"1968:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:6","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":663,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"1989:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":669,"nodeType":"RevertStatement","src":"1982:37:6"}]}},{"expression":{"baseExpression":{"id":672,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"2046:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":674,"indexExpression":{"id":673,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"2056:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":656,"id":675,"nodeType":"Return","src":"2039:23:6"}]},"documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"1833:23:6","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":677,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:6","nodeType":"FunctionDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"owner","nameLocation":"1888:5:6","nodeType":"VariableDeclaration","scope":677,"src":"1880:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:6"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":677,"src":"1924:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:6"},"scope":1505,"src":"1861:208:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1555],"body":{"id":689,"nodeType":"Block","src":"2175:46:6","statements":[{"expression":{"arguments":[{"id":686,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"2206:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":685,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2192:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":684,"id":688,"nodeType":"Return","src":"2185:29:6"}]},"documentation":{"id":678,"nodeType":"StructuredDocumentation","src":"2075:23:6","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":690,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:6","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:6","nodeType":"VariableDeclaration","scope":690,"src":"2120:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:6"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":690,"src":"2166:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:6"},"scope":1505,"src":"2103:118:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1781],"body":{"id":698,"nodeType":"Block","src":"2323:29:6","statements":[{"expression":{"id":696,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"2340:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":695,"id":697,"nodeType":"Return","src":"2333:12:6"}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"2227:31:6","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":699,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:6","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[],"src":"2276:2:6"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":699,"src":"2308:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":693,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:6"},"scope":1505,"src":"2263:89:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1787],"body":{"id":707,"nodeType":"Block","src":"2456:31:6","statements":[{"expression":{"id":705,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"2473:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":704,"id":706,"nodeType":"Return","src":"2466:14:6"}]},"documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"2358:31:6","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":708,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:6","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"2409:2:6"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":708,"src":"2441:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":702,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:6"},"scope":1505,"src":"2394:93:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1795],"body":{"id":743,"nodeType":"Block","src":"2608:176:6","statements":[{"expression":{"arguments":[{"id":717,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"2632:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":716,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2618:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":719,"nodeType":"ExpressionStatement","src":"2618:22:6"},{"assignments":[721],"declarations":[{"constant":false,"id":721,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:6","nodeType":"VariableDeclaration","scope":743,"src":"2651:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":720,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":724,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":722,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"2675:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":727,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"2708:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":725,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:6","typeDescriptions":{}}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:6","memberName":"length","nodeType":"MemberAccess","src":"2702:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:6","trueExpression":{"arguments":[{"id":735,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"2744:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":736,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"2753:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:6","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2069,"src":"2753:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":732,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:6","typeDescriptions":{}}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:6","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:6","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":715,"id":742,"nodeType":"Return","src":"2695:82:6"}]},"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"2493:31:6","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":744,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:6","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:6","nodeType":"VariableDeclaration","scope":744,"src":"2547:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:6"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":744,"src":"2593:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":713,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:6"},"scope":1505,"src":"2529:255:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":752,"nodeType":"Block","src":"3092:26:6","statements":[{"expression":{"hexValue":"","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":749,"id":751,"nodeType":"Return","src":"3102:9:6"}]},"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"2790:231:6","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":753,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:6","nodeType":"FunctionDefinition","parameters":{"id":746,"nodeType":"ParameterList","parameters":[],"src":"3043:2:6"},"returnParameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"3077:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":747,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:6"},"scope":1505,"src":"3026:92:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1595],"body":{"id":768,"nodeType":"Block","src":"3213:52:6","statements":[{"expression":{"arguments":[{"id":762,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"3232:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":763,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"3236:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":764,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"3245:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":761,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1372,1438],"referencedDeclaration":1372,"src":"3223:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":767,"nodeType":"ExpressionStatement","src":"3223:35:6"}]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"3124:23:6","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":769,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:6","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"to","nameLocation":"3177:2:6","nodeType":"VariableDeclaration","scope":769,"src":"3169:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:6","nodeType":"VariableDeclaration","scope":769,"src":"3181:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:6"},"returnParameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"3213:0:6"},"scope":1505,"src":"3152:113:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1611],"body":{"id":785,"nodeType":"Block","src":"3375:78:6","statements":[{"expression":{"arguments":[{"id":778,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"3399:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"3385:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":780,"nodeType":"ExpressionStatement","src":"3385:22:6"},{"expression":{"arguments":[{"id":782,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"3438:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":781,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3425:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":776,"id":784,"nodeType":"Return","src":"3418:28:6"}]},"documentation":{"id":770,"nodeType":"StructuredDocumentation","src":"3271:23:6","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":786,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:6","nodeType":"FunctionDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:6","nodeType":"VariableDeclaration","scope":786,"src":"3320:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:6"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":786,"src":"3366:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:6"},"scope":1505,"src":"3299:154:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1603],"body":{"id":801,"nodeType":"Block","src":"3562:69:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":795,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"3591:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":797,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"3605:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":798,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"3615:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":794,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"3572:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":800,"nodeType":"ExpressionStatement","src":"3572:52:6"}]},"documentation":{"id":787,"nodeType":"StructuredDocumentation","src":"3459:23:6","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":802,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:6","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"operator","nameLocation":"3522:8:6","nodeType":"VariableDeclaration","scope":802,"src":"3514:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"approved","nameLocation":"3537:8:6","nodeType":"VariableDeclaration","scope":802,"src":"3532:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":790,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:6"},"returnParameters":{"id":793,"nodeType":"ParameterList","parameters":[],"src":"3562:0:6"},"scope":1505,"src":"3487:144:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1621],"body":{"id":818,"nodeType":"Block","src":"3759:59:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":812,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"3776:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":814,"indexExpression":{"id":813,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"3795:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":816,"indexExpression":{"id":815,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"3802:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":811,"id":817,"nodeType":"Return","src":"3769:42:6"}]},"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"3637:23:6","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":819,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:6","nodeType":"FunctionDefinition","parameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"owner","nameLocation":"3699:5:6","nodeType":"VariableDeclaration","scope":819,"src":"3691:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"mutability":"mutable","name":"operator","nameLocation":"3714:8:6","nodeType":"VariableDeclaration","scope":819,"src":"3706:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:6"},"returnParameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":819,"src":"3753:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":809,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:6"},"scope":1505,"src":"3665:153:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1587],"body":{"id":864,"nodeType":"Block","src":"3932:498:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":829,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"3946:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:6","typeDescriptions":{}}},"id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":843,"nodeType":"IfStatement","src":"3942:87:6","trueBody":{"id":842,"nodeType":"Block","src":"3964:65:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:6","typeDescriptions":{}}},"id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":835,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"3985:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":841,"nodeType":"RevertStatement","src":"3978:40:6"}]}},{"assignments":[845],"declarations":[{"constant":false,"id":845,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:6","nodeType":"VariableDeclaration","scope":864,"src":"4247:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":852,"initialValue":{"arguments":[{"id":847,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"4279:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"4283:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":849,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"4292:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":846,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"4271:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":853,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"4319:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":854,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"4336:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":863,"nodeType":"IfStatement","src":"4315:109:6","trueBody":{"id":862,"nodeType":"Block","src":"4342:82:6","statements":[{"errorCall":{"arguments":[{"id":857,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"4384:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"4390:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":859,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"4399:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":856,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"4363:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":861,"nodeType":"RevertStatement","src":"4356:57:6"}]}}]},"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"3824:23:6","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":865,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:6","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"from","nameLocation":"3882:4:6","nodeType":"VariableDeclaration","scope":865,"src":"3874:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"to","nameLocation":"3896:2:6","nodeType":"VariableDeclaration","scope":865,"src":"3888:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:6","nodeType":"VariableDeclaration","scope":865,"src":"3900:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:6"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[],"src":"3932:0:6"},"scope":1505,"src":"3852:578:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1577],"body":{"id":882,"nodeType":"Block","src":"4540:56:6","statements":[{"expression":{"arguments":[{"id":876,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"4567:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":877,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"4573:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":878,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"4577:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":875,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[883,913],"referencedDeclaration":913,"src":"4550:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":881,"nodeType":"ExpressionStatement","src":"4550:39:6"}]},"documentation":{"id":866,"nodeType":"StructuredDocumentation","src":"4436:23:6","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":883,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:6","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"from","nameLocation":"4498:4:6","nodeType":"VariableDeclaration","scope":883,"src":"4490:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"to","nameLocation":"4512:2:6","nodeType":"VariableDeclaration","scope":883,"src":"4504:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:6","nodeType":"VariableDeclaration","scope":883,"src":"4516:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:6"},"returnParameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"4540:0:6"},"scope":1505,"src":"4464:132:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1567],"body":{"id":912,"nodeType":"Block","src":"4733:130:6","statements":[{"expression":{"arguments":[{"id":896,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"4756:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":897,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"4762:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":898,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"4766:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":895,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"4743:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":900,"nodeType":"ExpressionStatement","src":"4743:31:6"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":904,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"4818:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":906,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"4832:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":907,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"4838:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":908,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"4842:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":909,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"4851:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":901,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"4784:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1873_$","typeString":"type(library ERC721Utils)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:6","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1872,"src":"4784:33:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":911,"nodeType":"ExpressionStatement","src":"4784:72:6"}]},"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"4602:23:6","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":913,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:6","nodeType":"FunctionDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"from","nameLocation":"4664:4:6","nodeType":"VariableDeclaration","scope":913,"src":"4656:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"to","nameLocation":"4678:2:6","nodeType":"VariableDeclaration","scope":913,"src":"4670:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:6","nodeType":"VariableDeclaration","scope":913,"src":"4682:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":889,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"data","nameLocation":"4712:4:6","nodeType":"VariableDeclaration","scope":913,"src":"4699:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":891,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:6"},"returnParameters":{"id":894,"nodeType":"ParameterList","parameters":[],"src":"4733:0:6"},"scope":1505,"src":"4630:233:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":925,"nodeType":"Block","src":"5453:40:6","statements":[{"expression":{"baseExpression":{"id":921,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"5470:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":923,"indexExpression":{"id":922,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"5478:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":920,"id":924,"nodeType":"Return","src":"5463:23:6"}]},"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"4869:504:6","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":926,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:6","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:6","nodeType":"VariableDeclaration","scope":926,"src":"5396:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:6"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":926,"src":"5444:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:6"},"scope":1505,"src":"5378:115:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":938,"nodeType":"Block","src":"5688:48:6","statements":[{"expression":{"baseExpression":{"id":934,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"5705:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":936,"indexExpression":{"id":935,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"5721:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":933,"id":937,"nodeType":"Return","src":"5698:31:6"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"5499:105:6","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":939,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:6","nodeType":"FunctionDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:6","nodeType":"VariableDeclaration","scope":939,"src":"5631:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:6"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":939,"src":"5679:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:6"},"scope":1505,"src":"5609:127:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":974,"nodeType":"Block","src":"6156:163:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":951,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"6185:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:6","typeDescriptions":{}}},"id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":957,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"6223:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":958,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"6232:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":961,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"6260:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":962,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"6267:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":960,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"6243:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":966,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"6292:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":965,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"6279:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":968,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"6304:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":950,"id":973,"nodeType":"Return","src":"6166:146:6"}]},"documentation":{"id":940,"nodeType":"StructuredDocumentation","src":"5742:300:6","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":975,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:6","nodeType":"FunctionDefinition","parameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"owner","nameLocation":"6078:5:6","nodeType":"VariableDeclaration","scope":975,"src":"6070:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"spender","nameLocation":"6093:7:6","nodeType":"VariableDeclaration","scope":975,"src":"6085:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":946,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:6","nodeType":"VariableDeclaration","scope":975,"src":"6102:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:6"},"returnParameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":975,"src":"6150:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":948,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:6"},"scope":1505,"src":"6047:272:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1011,"nodeType":"Block","src":"6848:271:6","statements":[{"condition":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:6","subExpression":{"arguments":[{"id":986,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"6877:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"6884:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":988,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"6893:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":985,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"6863:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1010,"nodeType":"IfStatement","src":"6858:255:6","trueBody":{"id":1009,"nodeType":"Block","src":"6903:210:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":991,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"6921:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:6","typeDescriptions":{}}},"id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1007,"nodeType":"Block","src":"7019:84:6","statements":[{"errorCall":{"arguments":[{"id":1003,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"7071:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1004,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"7080:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1002,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"7044:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1006,"nodeType":"RevertStatement","src":"7037:51:6"}]},"id":1008,"nodeType":"IfStatement","src":"6917:186:6","trueBody":{"id":1001,"nodeType":"Block","src":"6942:71:6","statements":[{"errorCall":{"arguments":[{"id":998,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"6990:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":997,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"6967:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1000,"nodeType":"RevertStatement","src":"6960:38:6"}]}}]}}]},"documentation":{"id":976,"nodeType":"StructuredDocumentation","src":"6325:421:6","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1012,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:6","nodeType":"FunctionDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"owner","nameLocation":"6785:5:6","nodeType":"VariableDeclaration","scope":1012,"src":"6777:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":977,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"spender","nameLocation":"6800:7:6","nodeType":"VariableDeclaration","scope":1012,"src":"6792:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:6","nodeType":"VariableDeclaration","scope":1012,"src":"6809:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:6"},"returnParameters":{"id":984,"nodeType":"ParameterList","parameters":[],"src":"6848:0:6"},"scope":1505,"src":"6751:368:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1027,"nodeType":"Block","src":"7836:78:6","statements":[{"id":1026,"nodeType":"UncheckedBlock","src":"7846:62:6","statements":[{"expression":{"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1020,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"7870:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1022,"indexExpression":{"id":1021,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"7880:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"7892:5:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1025,"nodeType":"ExpressionStatement","src":"7870:27:6"}]}]},"documentation":{"id":1013,"nodeType":"StructuredDocumentation","src":"7125:631:6","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1028,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:6","nodeType":"FunctionDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"account","nameLocation":"7795:7:6","nodeType":"VariableDeclaration","scope":1028,"src":"7787:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1017,"mutability":"mutable","name":"value","nameLocation":"7812:5:6","nodeType":"VariableDeclaration","scope":1028,"src":"7804:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1016,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:6"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[],"src":"7836:0:6"},"scope":1505,"src":"7761:153:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1117,"nodeType":"Block","src":"8602:700:6","statements":[{"assignments":[1041],"declarations":[{"constant":false,"id":1041,"mutability":"mutable","name":"from","nameLocation":"8620:4:6","nodeType":"VariableDeclaration","scope":1117,"src":"8612:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1040,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1045,"initialValue":{"arguments":[{"id":1043,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"8636:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1042,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"8627:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1046,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"8704:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:6","typeDescriptions":{}}},"id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1059,"nodeType":"IfStatement","src":"8700:86:6","trueBody":{"id":1058,"nodeType":"Block","src":"8724:62:6","statements":[{"expression":{"arguments":[{"id":1053,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"8755:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1054,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"8761:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"8767:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1052,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"8738:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"ExpressionStatement","src":"8738:37:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1060,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"8830:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:6","typeDescriptions":{}}},"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1087,"nodeType":"IfStatement","src":"8826:256:6","trueBody":{"id":1086,"nodeType":"Block","src":"8850:232:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:6","typeDescriptions":{}}},"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1071,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"8967:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:6","typeDescriptions":{}}},"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1066,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1372,1438],"referencedDeclaration":1438,"src":"8946:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"ExpressionStatement","src":"8946:48:6"},{"id":1085,"nodeType":"UncheckedBlock","src":"9009:63:6","statements":[{"expression":{"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1079,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9037:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1081,"indexExpression":{"id":1080,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"9047:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1084,"nodeType":"ExpressionStatement","src":"9037:20:6"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1088,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"9096:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:6","typeDescriptions":{}}},"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1102,"nodeType":"IfStatement","src":"9092:107:6","trueBody":{"id":1101,"nodeType":"Block","src":"9114:85:6","statements":[{"id":1100,"nodeType":"UncheckedBlock","src":"9128:61:6","statements":[{"expression":{"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1094,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9156:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1096,"indexExpression":{"id":1095,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"9166:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1099,"nodeType":"ExpressionStatement","src":"9156:18:6"}]}]}},{"expression":{"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1103,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"9209:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1105,"indexExpression":{"id":1104,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"9217:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1106,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"9228:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1108,"nodeType":"ExpressionStatement","src":"9209:21:6"},{"eventCall":{"arguments":[{"id":1110,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"9255:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1111,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"9261:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1112,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"9265:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1109,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"9246:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1114,"nodeType":"EmitStatement","src":"9241:32:6"},{"expression":{"id":1115,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"9291:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1039,"id":1116,"nodeType":"Return","src":"9284:11:6"}]},"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"7920:582:6","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1118,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:6","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"mutability":"mutable","name":"to","nameLocation":"8532:2:6","nodeType":"VariableDeclaration","scope":1118,"src":"8524:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1033,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:6","nodeType":"VariableDeclaration","scope":1118,"src":"8536:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"auth","nameLocation":"8561:4:6","nodeType":"VariableDeclaration","scope":1118,"src":"8553:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:6"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1118,"src":"8593:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:6"},"scope":1505,"src":"8507:795:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1167,"nodeType":"Block","src":"9677:274:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1126,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"9691:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:6","typeDescriptions":{}}},"id":1130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1140,"nodeType":"IfStatement","src":"9687:87:6","trueBody":{"id":1139,"nodeType":"Block","src":"9709:65:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:6","typeDescriptions":{}}},"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1132,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"9730:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1138,"nodeType":"RevertStatement","src":"9723:40:6"}]}},{"assignments":[1142],"declarations":[{"constant":false,"id":1142,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:6","nodeType":"VariableDeclaration","scope":1167,"src":"9783:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1151,"initialValue":{"arguments":[{"id":1144,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"9815:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1145,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"9819:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:6","typeDescriptions":{}}},"id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1143,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"9807:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1152,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"9853:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:6","typeDescriptions":{}}},"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1166,"nodeType":"IfStatement","src":"9849:96:6","trueBody":{"id":1165,"nodeType":"Block","src":"9882:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:6","typeDescriptions":{}}},"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1158,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"9903:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1164,"nodeType":"RevertStatement","src":"9896:38:6"}]}}]},"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"9308:311:6","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1168,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:6","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"to","nameLocation":"9647:2:6","nodeType":"VariableDeclaration","scope":1168,"src":"9639:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:6","nodeType":"VariableDeclaration","scope":1168,"src":"9651:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:6"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[],"src":"9677:0:6"},"scope":1505,"src":"9624:327:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1182,"nodeType":"Block","src":"10359:43:6","statements":[{"expression":{"arguments":[{"id":1177,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"10379:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1178,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"10383:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1176,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1183,1213],"referencedDeclaration":1213,"src":"10369:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1181,"nodeType":"ExpressionStatement","src":"10369:26:6"}]},"documentation":{"id":1169,"nodeType":"StructuredDocumentation","src":"9957:340:6","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1183,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:6","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"to","nameLocation":"10329:2:6","nodeType":"VariableDeclaration","scope":1183,"src":"10321:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1173,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:6","nodeType":"VariableDeclaration","scope":1183,"src":"10333:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:6"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[],"src":"10359:0:6"},"scope":1505,"src":"10302:100:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1212,"nodeType":"Block","src":"10707:123:6","statements":[{"expression":{"arguments":[{"id":1194,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"10723:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1195,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"10727:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1193,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"10717:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1197,"nodeType":"ExpressionStatement","src":"10717:18:6"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1201,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"10779:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:6","typeDescriptions":{}}},"id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1207,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"10805:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1208,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"10809:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1209,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"10818:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1198,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"10745:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1873_$","typeString":"type(library ERC721Utils)"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:6","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1872,"src":"10745:33:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1211,"nodeType":"ExpressionStatement","src":"10745:78:6"}]},"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"10408:210:6","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:6","nodeType":"FunctionDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"to","nameLocation":"10650:2:6","nodeType":"VariableDeclaration","scope":1213,"src":"10642:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:6","nodeType":"VariableDeclaration","scope":1213,"src":"10654:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"data","nameLocation":"10684:4:6","nodeType":"VariableDeclaration","scope":1213,"src":"10671:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1189,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:6"},"returnParameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"10707:0:6"},"scope":1505,"src":"10623:207:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1245,"nodeType":"Block","src":"11197:186:6","statements":[{"assignments":[1220],"declarations":[{"constant":false,"id":1220,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:6","nodeType":"VariableDeclaration","scope":1245,"src":"11207:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1232,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:6","typeDescriptions":{}}},"id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1226,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"11251:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:6","typeDescriptions":{}}},"id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1221,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"11231:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1233,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"11285:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:6","typeDescriptions":{}}},"id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1244,"nodeType":"IfStatement","src":"11281:96:6","trueBody":{"id":1243,"nodeType":"Block","src":"11314:63:6","statements":[{"errorCall":{"arguments":[{"id":1240,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"11358:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1239,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"11335:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1242,"nodeType":"RevertStatement","src":"11328:38:6"}]}}]},"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"10836:315:6","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:6","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:6","nodeType":"VariableDeclaration","scope":1246,"src":"11171:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:6"},"returnParameters":{"id":1218,"nodeType":"ParameterList","parameters":[],"src":"11197:0:6"},"scope":1505,"src":"11156:227:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1305,"nodeType":"Block","src":"11778:389:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1256,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"11792:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:6","typeDescriptions":{}}},"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1270,"nodeType":"IfStatement","src":"11788:87:6","trueBody":{"id":1269,"nodeType":"Block","src":"11810:65:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:6","typeDescriptions":{}}},"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1262,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"11831:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1268,"nodeType":"RevertStatement","src":"11824:40:6"}]}},{"assignments":[1272],"declarations":[{"constant":false,"id":1272,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:6","nodeType":"VariableDeclaration","scope":1305,"src":"11884:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1281,"initialValue":{"arguments":[{"id":1274,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"11916:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1275,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"11920:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:6","typeDescriptions":{}}},"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1273,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"11908:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1282,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"11954:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1283,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:6","typeDescriptions":{}}},"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1293,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"12056:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1294,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"12073:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1303,"nodeType":"IfStatement","src":"12052:109:6","trueBody":{"id":1302,"nodeType":"Block","src":"12079:82:6","statements":[{"errorCall":{"arguments":[{"id":1297,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"12121:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1298,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"12127:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1299,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"12136:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1296,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"12100:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1301,"nodeType":"RevertStatement","src":"12093:57:6"}]}},"id":1304,"nodeType":"IfStatement","src":"11950:211:6","trueBody":{"id":1292,"nodeType":"Block","src":"11983:63:6","statements":[{"errorCall":{"arguments":[{"id":1289,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"12027:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1288,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"12004:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1291,"nodeType":"RevertStatement","src":"11997:38:6"}]}}]},"documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"11389:313:6","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:6","nodeType":"FunctionDefinition","parameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"from","nameLocation":"11734:4:6","nodeType":"VariableDeclaration","scope":1306,"src":"11726:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"to","nameLocation":"11748:2:6","nodeType":"VariableDeclaration","scope":1306,"src":"11740:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:6","nodeType":"VariableDeclaration","scope":1306,"src":"11752:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:6"},"returnParameters":{"id":1255,"nodeType":"ParameterList","parameters":[],"src":"11778:0:6"},"scope":1505,"src":"11707:460:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1323,"nodeType":"Block","src":"13176:53:6","statements":[{"expression":{"arguments":[{"id":1317,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"13200:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1318,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"13206:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1319,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"13210:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1316,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1324,1354],"referencedDeclaration":1354,"src":"13186:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1322,"nodeType":"ExpressionStatement","src":"13186:36:6"}]},"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"12173:923:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1324,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:6","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"from","nameLocation":"13132:4:6","nodeType":"VariableDeclaration","scope":1324,"src":"13124:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1308,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1311,"mutability":"mutable","name":"to","nameLocation":"13146:2:6","nodeType":"VariableDeclaration","scope":1324,"src":"13138:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1310,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1313,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:6","nodeType":"VariableDeclaration","scope":1324,"src":"13150:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:6"},"returnParameters":{"id":1315,"nodeType":"ParameterList","parameters":[],"src":"13176:0:6"},"scope":1505,"src":"13101:128:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"13568:127:6","statements":[{"expression":{"arguments":[{"id":1337,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"13588:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1338,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"13594:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1339,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"13598:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1336,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"13578:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1341,"nodeType":"ExpressionStatement","src":"13578:28:6"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1345,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"13650:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1347,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"13664:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1348,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"13670:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1349,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"13674:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1350,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"13683:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1342,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"13616:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1873_$","typeString":"type(library ERC721Utils)"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:6","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1872,"src":"13616:33:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1352,"nodeType":"ExpressionStatement","src":"13616:72:6"}]},"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"13235:226:6","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:6","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"from","nameLocation":"13497:4:6","nodeType":"VariableDeclaration","scope":1354,"src":"13489:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"to","nameLocation":"13511:2:6","nodeType":"VariableDeclaration","scope":1354,"src":"13503:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1331,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:6","nodeType":"VariableDeclaration","scope":1354,"src":"13515:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"data","nameLocation":"13545:4:6","nodeType":"VariableDeclaration","scope":1354,"src":"13532:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1332,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:6"},"returnParameters":{"id":1335,"nodeType":"ParameterList","parameters":[],"src":"13568:0:6"},"scope":1505,"src":"13466:229:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1371,"nodeType":"Block","src":"14208:50:6","statements":[{"expression":{"arguments":[{"id":1365,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"14227:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1366,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"14231:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1367,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"14240:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1364,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1372,1438],"referencedDeclaration":1438,"src":"14218:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1370,"nodeType":"ExpressionStatement","src":"14218:33:6"}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"13701:432:6","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1372,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:6","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"to","nameLocation":"14164:2:6","nodeType":"VariableDeclaration","scope":1372,"src":"14156:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:6","nodeType":"VariableDeclaration","scope":1372,"src":"14168:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"auth","nameLocation":"14193:4:6","nodeType":"VariableDeclaration","scope":1372,"src":"14185:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:6"},"returnParameters":{"id":1363,"nodeType":"ParameterList","parameters":[],"src":"14208:0:6"},"scope":1505,"src":"14138:120:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1437,"nodeType":"Block","src":"14534:568:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1384,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"14600:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1385,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"14613:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:6","typeDescriptions":{}}},"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1430,"nodeType":"IfStatement","src":"14596:460:6","trueBody":{"id":1429,"nodeType":"Block","src":"14633:423:6","statements":[{"assignments":[1393],"declarations":[{"constant":false,"id":1393,"mutability":"mutable","name":"owner","nameLocation":"14655:5:6","nodeType":"VariableDeclaration","scope":1429,"src":"14647:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1397,"initialValue":{"arguments":[{"id":1395,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"14677:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1394,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"14663:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1398,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"14813:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:6","typeDescriptions":{}}},"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1404,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"14835:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1405,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"14844:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:6","subExpression":{"arguments":[{"id":1409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"14870:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1410,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"14877:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1408,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"14853:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1419,"nodeType":"IfStatement","src":"14809:142:6","trueBody":{"id":1418,"nodeType":"Block","src":"14884:67:6","statements":[{"errorCall":{"arguments":[{"id":1415,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"14931:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1414,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"14909:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1417,"nodeType":"RevertStatement","src":"14902:34:6"}]}},{"condition":{"id":1420,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"14969:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1428,"nodeType":"IfStatement","src":"14965:81:6","trueBody":{"id":1427,"nodeType":"Block","src":"14980:66:6","statements":[{"eventCall":{"arguments":[{"id":1422,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"15012:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1423,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"15019:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1424,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"15023:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1421,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"15003:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1426,"nodeType":"EmitStatement","src":"14998:33:6"}]}}]}},{"expression":{"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1431,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"15066:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1433,"indexExpression":{"id":1432,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"15082:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1434,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"15093:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1436,"nodeType":"ExpressionStatement","src":"15066:29:6"}]},"documentation":{"id":1373,"nodeType":"StructuredDocumentation","src":"14264:171:6","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1438,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:6","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"to","nameLocation":"14466:2:6","nodeType":"VariableDeclaration","scope":1438,"src":"14458:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:6","nodeType":"VariableDeclaration","scope":1438,"src":"14470:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"auth","nameLocation":"14495:4:6","nodeType":"VariableDeclaration","scope":1438,"src":"14487:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:6","nodeType":"VariableDeclaration","scope":1438,"src":"14501:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1380,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:6"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[],"src":"14534:0:6"},"scope":1505,"src":"14440:662:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1474,"nodeType":"Block","src":"15404:219:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1448,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"15418:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:6","typeDescriptions":{}}},"id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1459,"nodeType":"IfStatement","src":"15414:91:6","trueBody":{"id":1458,"nodeType":"Block","src":"15442:63:6","statements":[{"errorCall":{"arguments":[{"id":1455,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"15485:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1454,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"15463:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1457,"nodeType":"RevertStatement","src":"15456:38:6"}]}},{"expression":{"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1460,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"15514:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1463,"indexExpression":{"id":1461,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"15533:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1464,"indexExpression":{"id":1462,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"15540:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1465,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"15552:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1467,"nodeType":"ExpressionStatement","src":"15514:46:6"},{"eventCall":{"arguments":[{"id":1469,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"15590:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1470,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"15597:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1471,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"15607:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1468,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"15575:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1473,"nodeType":"EmitStatement","src":"15570:46:6"}]},"documentation":{"id":1439,"nodeType":"StructuredDocumentation","src":"15108:198:6","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1475,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:6","nodeType":"FunctionDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"owner","nameLocation":"15347:5:6","nodeType":"VariableDeclaration","scope":1475,"src":"15339:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"operator","nameLocation":"15362:8:6","nodeType":"VariableDeclaration","scope":1475,"src":"15354:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"approved","nameLocation":"15377:8:6","nodeType":"VariableDeclaration","scope":1475,"src":"15372:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1444,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:6"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[],"src":"15404:0:6"},"scope":1505,"src":"15311:312:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1503,"nodeType":"Block","src":"15930:169:6","statements":[{"assignments":[1484],"declarations":[{"constant":false,"id":1484,"mutability":"mutable","name":"owner","nameLocation":"15948:5:6","nodeType":"VariableDeclaration","scope":1503,"src":"15940:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1488,"initialValue":{"arguments":[{"id":1486,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"15965:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1485,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"15956:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1489,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"15987:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:6","typeDescriptions":{}}},"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1500,"nodeType":"IfStatement","src":"15983:88:6","trueBody":{"id":1499,"nodeType":"Block","src":"16008:63:6","statements":[{"errorCall":{"arguments":[{"id":1496,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"16052:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1495,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"16029:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1498,"nodeType":"RevertStatement","src":"16022:38:6"}]}},{"expression":{"id":1501,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"16087:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1482,"id":1502,"nodeType":"Return","src":"16080:12:6"}]},"documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"15629:224:6","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1504,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:6","nodeType":"FunctionDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:6","nodeType":"VariableDeclaration","scope":1504,"src":"15881:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:6"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1504,"src":"15921:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1480,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:6"},"scope":1505,"src":"15858:241:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1506,"src":"775:15326:6","usedErrors":[459,464,473,478,483,490,495,500],"usedEvents":[1521,1530,1539]}],"src":"107:15995:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3393],"IERC721":[1622]},"id":1623,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1507,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1509,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1623,"sourceUnit":3394,"src":"134:62:7","symbolAliases":[{"foreign":{"id":1508,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"142:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1511,"name":"IERC165","nameLocations":["288:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":3393,"src":"288:7:7"},"id":1512,"nodeType":"InheritanceSpecifier","src":"288:7:7"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1510,"nodeType":"StructuredDocumentation","src":"198:68:7","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1622,"linearizedBaseContracts":[1622,3393],"name":"IERC721","nameLocation":"277:7:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1513,"nodeType":"StructuredDocumentation","src":"302:88:7","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1521,"name":"Transfer","nameLocation":"401:8:7","nodeType":"EventDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:7","nodeType":"VariableDeclaration","scope":1521,"src":"410:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1517,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:7","nodeType":"VariableDeclaration","scope":1521,"src":"432:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1519,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:7","nodeType":"VariableDeclaration","scope":1521,"src":"452:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:7"},"src":"395:82:7"},{"anonymous":false,"documentation":{"id":1522,"nodeType":"StructuredDocumentation","src":"483:94:7","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1530,"name":"Approval","nameLocation":"588:8:7","nodeType":"EventDefinition","parameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:7","nodeType":"VariableDeclaration","scope":1530,"src":"597:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1526,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:7","nodeType":"VariableDeclaration","scope":1530,"src":"620:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1528,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:7","nodeType":"VariableDeclaration","scope":1530,"src":"646:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:7"},"src":"582:89:7"},{"anonymous":false,"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"677:117:7","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1539,"name":"ApprovalForAll","nameLocation":"805:14:7","nodeType":"EventDefinition","parameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:7","nodeType":"VariableDeclaration","scope":1539,"src":"820:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1532,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1535,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:7","nodeType":"VariableDeclaration","scope":1539,"src":"843:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1534,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1537,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:7","nodeType":"VariableDeclaration","scope":1539,"src":"869:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1536,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:7"},"src":"799:85:7"},{"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"890:76:7","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1547,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:7","nodeType":"FunctionDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"owner","nameLocation":"998:5:7","nodeType":"VariableDeclaration","scope":1547,"src":"990:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:7"},"returnParameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"balance","nameLocation":"1036:7:7","nodeType":"VariableDeclaration","scope":1547,"src":"1028:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:7"},"scope":1622,"src":"971:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"1051:131:7","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1555,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:7","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:7","nodeType":"VariableDeclaration","scope":1555,"src":"1204:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:7"},"returnParameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"owner","nameLocation":"1252:5:7","nodeType":"VariableDeclaration","scope":1555,"src":"1244:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:7"},"scope":1622,"src":"1187:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"1265:565:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1567,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:7","nodeType":"FunctionDefinition","parameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"from","nameLocation":"1869:4:7","nodeType":"VariableDeclaration","scope":1567,"src":"1861:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1557,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"to","nameLocation":"1883:2:7","nodeType":"VariableDeclaration","scope":1567,"src":"1875:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:7","nodeType":"VariableDeclaration","scope":1567,"src":"1887:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"data","nameLocation":"1919:4:7","nodeType":"VariableDeclaration","scope":1567,"src":"1904:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1563,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:7"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[],"src":"1933:0:7"},"scope":1622,"src":"1835:99:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"1940:706:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1577,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:7","nodeType":"FunctionDefinition","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"from","nameLocation":"2685:4:7","nodeType":"VariableDeclaration","scope":1577,"src":"2677:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1569,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"to","nameLocation":"2699:2:7","nodeType":"VariableDeclaration","scope":1577,"src":"2691:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:7","nodeType":"VariableDeclaration","scope":1577,"src":"2703:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:7"},"returnParameters":{"id":1576,"nodeType":"ParameterList","parameters":[],"src":"2728:0:7"},"scope":1622,"src":"2651:78:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"2735:733:7","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1587,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:7","nodeType":"FunctionDefinition","parameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"from","nameLocation":"3503:4:7","nodeType":"VariableDeclaration","scope":1587,"src":"3495:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"to","nameLocation":"3517:2:7","nodeType":"VariableDeclaration","scope":1587,"src":"3509:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:7","nodeType":"VariableDeclaration","scope":1587,"src":"3521:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1583,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:7"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[],"src":"3546:0:7"},"scope":1622,"src":"3473:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"3553:452:7","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1595,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:7","nodeType":"FunctionDefinition","parameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"to","nameLocation":"4035:2:7","nodeType":"VariableDeclaration","scope":1595,"src":"4027:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1589,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:7","nodeType":"VariableDeclaration","scope":1595,"src":"4039:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:7"},"returnParameters":{"id":1594,"nodeType":"ParameterList","parameters":[],"src":"4064:0:7"},"scope":1622,"src":"4010:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"4071:315:7","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1603,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:7","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"operator","nameLocation":"4426:8:7","nodeType":"VariableDeclaration","scope":1603,"src":"4418:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"approved","nameLocation":"4441:8:7","nodeType":"VariableDeclaration","scope":1603,"src":"4436:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1599,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:7"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[],"src":"4459:0:7"},"scope":1622,"src":"4391:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1604,"nodeType":"StructuredDocumentation","src":"4466:139:7","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1611,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:7","nodeType":"FunctionDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:7","nodeType":"VariableDeclaration","scope":1611,"src":"4631:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:7"},"returnParameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"operator","nameLocation":"4679:8:7","nodeType":"VariableDeclaration","scope":1611,"src":"4671:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:7"},"scope":1622,"src":"4610:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"4695:138:7","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1621,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:7","nodeType":"FunctionDefinition","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"owner","nameLocation":"4872:5:7","nodeType":"VariableDeclaration","scope":1621,"src":"4864:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1613,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1616,"mutability":"mutable","name":"operator","nameLocation":"4887:8:7","nodeType":"VariableDeclaration","scope":1621,"src":"4879:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1615,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:7"},"returnParameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1621,"src":"4920:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1618,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:7"},"scope":1622,"src":"4838:88:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1623,"src":"267:4661:7","usedErrors":[],"usedEvents":[1521,1530,1539]}],"src":"108:4821:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1640]},"id":1641,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1624,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"142:154:8","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1640,"linearizedBaseContracts":[1640],"name":"IERC721Receiver","nameLocation":"307:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"329:500:8","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1639,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:8","nodeType":"FunctionDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"operator","nameLocation":"877:8:8","nodeType":"VariableDeclaration","scope":1639,"src":"869:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1627,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1630,"mutability":"mutable","name":"from","nameLocation":"903:4:8","nodeType":"VariableDeclaration","scope":1639,"src":"895:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1632,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:8","nodeType":"VariableDeclaration","scope":1639,"src":"917:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1634,"mutability":"mutable","name":"data","nameLocation":"957:4:8","nodeType":"VariableDeclaration","scope":1639,"src":"942:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1633,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:8"},"returnParameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1639,"src":"986:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1636,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:8"},"scope":1640,"src":"834:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1641,"src":"297:699:8","usedErrors":[],"usedEvents":[]}],"src":"116:881:8"},"id":8},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[1505],"ERC721URIStorage":[1768],"IERC165":[3393],"IERC4906":[407],"IERC721Metadata":[1796],"Strings":[3357]},"id":1769,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1642,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1644,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1769,"sourceUnit":1506,"src":"154:37:9","symbolAliases":[{"foreign":{"id":1643,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"162:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./IERC721Metadata.sol","id":1646,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1769,"sourceUnit":1797,"src":"192:54:9","symbolAliases":[{"foreign":{"id":1645,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"200:15:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":1648,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1769,"sourceUnit":3358,"src":"247:51:9","symbolAliases":[{"foreign":{"id":1647,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"255:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1650,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1769,"sourceUnit":408,"src":"299:58:9","symbolAliases":[{"foreign":{"id":1649,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"307:8:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":1652,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1769,"sourceUnit":384,"src":"358:56:9","symbolAliases":[{"foreign":{"id":1651,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"366:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1654,"name":"IERC4906","nameLocations":["525:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":407,"src":"525:8:9"},"id":1655,"nodeType":"InheritanceSpecifier","src":"525:8:9"},{"baseName":{"id":1656,"name":"ERC721","nameLocations":["535:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1505,"src":"535:6:9"},"id":1657,"nodeType":"InheritanceSpecifier","src":"535:6:9"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"416:70:9","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":1768,"linearizedBaseContracts":[1768,1505,501,1796,407,1622,3381,3393,1903],"name":"ERC721URIStorage","nameLocation":"505:16:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1660,"libraryName":{"id":1658,"name":"Strings","nameLocations":["554:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3357,"src":"554:7:9"},"nodeType":"UsingForDirective","src":"548:26:9","typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":1666,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"786:20:9","nodeType":"VariableDeclaration","scope":1768,"src":"762:65:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1661,"name":"bytes4","nodeType":"ElementaryTypeName","src":"762:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"816:10:9","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":1663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"809:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1662,"name":"bytes4","nodeType":"ElementaryTypeName","src":"809:6:9","typeDescriptions":{}}},"id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"809:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":1670,"mutability":"mutable","name":"_tokenURIs","nameLocation":"916:10:9","nodeType":"VariableDeclaration","scope":1768,"src":"873:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1669,"keyName":"tokenId","keyNameLocation":"889:7:9","keyType":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"881:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"873:34:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1668,"name":"string","nodeType":"ElementaryTypeName","src":"900:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[649,3392],"body":{"id":1690,"nodeType":"Block","src":"1069:99:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1086:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1682,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"1101:20:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1086:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1686,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1149:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1684,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1125:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1768_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1131:17:9","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":649,"src":"1125:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1086:75:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1680,"id":1689,"nodeType":"Return","src":"1079:82:9"}]},"documentation":{"id":1671,"nodeType":"StructuredDocumentation","src":"933:23:9","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1691,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"970:17:9","nodeType":"FunctionDefinition","overrides":{"id":1677,"nodeType":"OverrideSpecifier","overrides":[{"id":1675,"name":"ERC721","nameLocations":["1037:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1505,"src":"1037:6:9"},{"id":1676,"name":"IERC165","nameLocations":["1045:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3393,"src":"1045:7:9"}],"src":"1028:25:9"},"parameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"interfaceId","nameLocation":"995:11:9","nodeType":"VariableDeclaration","scope":1691,"src":"988:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1672,"name":"bytes4","nodeType":"ElementaryTypeName","src":"988:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"987:20:9"},"returnParameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1691,"src":"1063:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1678,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1062:6:9"},"scope":1768,"src":"961:207:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[744],"body":{"id":1747,"nodeType":"Block","src":"1298:505:9","statements":[{"expression":{"arguments":[{"id":1701,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"1322:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1700,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"1308:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1703,"nodeType":"ExpressionStatement","src":"1308:22:9"},{"assignments":[1705],"declarations":[{"constant":false,"id":1705,"mutability":"mutable","name":"_tokenURI","nameLocation":"1355:9:9","nodeType":"VariableDeclaration","scope":1747,"src":"1341:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1704,"name":"string","nodeType":"ElementaryTypeName","src":"1341:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1709,"initialValue":{"baseExpression":{"id":1706,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"1367:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1708,"indexExpression":{"id":1707,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"1378:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1367:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1341:45:9"},{"assignments":[1711],"declarations":[{"constant":false,"id":1711,"mutability":"mutable","name":"base","nameLocation":"1410:4:9","nodeType":"VariableDeclaration","scope":1747,"src":"1396:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1710,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1714,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1712,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"1417:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1417:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1396:31:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1717,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"1506:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1500:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1715,"name":"bytes","nodeType":"ElementaryTypeName","src":"1500:5:9","typeDescriptions":{}}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1512:6:9","memberName":"length","nodeType":"MemberAccess","src":"1500:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1522:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1500:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1725,"nodeType":"IfStatement","src":"1496:70:9","trueBody":{"id":1724,"nodeType":"Block","src":"1525:41:9","statements":[{"expression":{"id":1722,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"1546:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1699,"id":1723,"nodeType":"Return","src":"1539:16:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1728,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"1671:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1665:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1726,"name":"bytes","nodeType":"ElementaryTypeName","src":"1665:5:9","typeDescriptions":{}}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1665:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1682:6:9","memberName":"length","nodeType":"MemberAccess","src":"1665:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1691:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1665:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1741,"nodeType":"IfStatement","src":"1661:95:9","trueBody":{"id":1740,"nodeType":"Block","src":"1694:62:9","statements":[{"expression":{"arguments":[{"id":1736,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"1729:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1737,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"1735:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1715:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1733,"name":"string","nodeType":"ElementaryTypeName","src":"1715:6:9","typeDescriptions":{}}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1722:6:9","memberName":"concat","nodeType":"MemberAccess","src":"1715:13:9","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1715:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1699,"id":1739,"nodeType":"Return","src":"1708:37:9"}]}},{"expression":{"arguments":[{"id":1744,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"1788:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1742,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1773:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1768_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1779:8:9","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":744,"src":"1773:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1773:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1699,"id":1746,"nodeType":"Return","src":"1766:30:9"}]},"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"1174:31:9","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":1748,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1219:8:9","nodeType":"FunctionDefinition","overrides":{"id":1696,"nodeType":"OverrideSpecifier","overrides":[],"src":"1265:8:9"},"parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"tokenId","nameLocation":"1236:7:9","nodeType":"VariableDeclaration","scope":1748,"src":"1228:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1227:17:9"},"returnParameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"1283:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1697,"name":"string","nodeType":"ElementaryTypeName","src":"1283:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1282:15:9"},"scope":1768,"src":"1210:593:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1766,"nodeType":"Block","src":"2012:86:9","statements":[{"expression":{"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1756,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"2022:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1758,"indexExpression":{"id":1757,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"2033:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2022:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1759,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"2044:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2022:31:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1761,"nodeType":"ExpressionStatement","src":"2022:31:9"},{"eventCall":{"arguments":[{"id":1763,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"2083:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1762,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2068:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1765,"nodeType":"EmitStatement","src":"2063:28:9"}]},"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"1809:117:9","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {IERC4906-MetadataUpdate}."},"id":1767,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1940:12:9","nodeType":"FunctionDefinition","parameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"tokenId","nameLocation":"1961:7:9","nodeType":"VariableDeclaration","scope":1767,"src":"1953:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"_tokenURI","nameLocation":"1984:9:9","nodeType":"VariableDeclaration","scope":1767,"src":"1970:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1752,"name":"string","nodeType":"ElementaryTypeName","src":"1970:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1952:42:9"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[],"src":"2012:0:9"},"scope":1768,"src":"1931:167:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1769,"src":"487:1613:9","usedErrors":[459,464,473,478,483,490,495,500],"usedEvents":[399,406,1521,1530,1539]}],"src":"128:1973:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1622],"IERC721Metadata":[1796]},"id":1797,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1770,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1772,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1797,"sourceUnit":1623,"src":"153:39:10","symbolAliases":[{"foreign":{"id":1771,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"161:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1774,"name":"IERC721","nameLocations":["357:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1622,"src":"357:7:10"},"id":1775,"nodeType":"InheritanceSpecifier","src":"357:7:10"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"194:133:10","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1796,"linearizedBaseContracts":[1796,1622,3393],"name":"IERC721Metadata","nameLocation":"338:15:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1776,"nodeType":"StructuredDocumentation","src":"371:58:10","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1781,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:10","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[],"src":"447:2:10"},"returnParameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1781,"src":"473:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1778,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:10"},"scope":1796,"src":"434:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1782,"nodeType":"StructuredDocumentation","src":"494:60:10","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1787,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:10","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[],"src":"574:2:10"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1787,"src":"600:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1784,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:10"},"scope":1796,"src":"559:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"621:90:10","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1795,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:10","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:10","nodeType":"VariableDeclaration","scope":1795,"src":"734:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:10"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1795,"src":"774:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1792,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:10"},"scope":1796,"src":"716:73:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1797,"src":"328:463:10","usedErrors":[],"usedEvents":[1521,1530,1539]}],"src":"127:665:10"},"id":10},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1873],"IERC721Errors":[501],"IERC721Receiver":[1640]},"id":1874,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1798,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1800,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1874,"sourceUnit":1641,"src":"144:55:11","symbolAliases":[{"foreign":{"id":1799,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"152:15:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1802,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1874,"sourceUnit":549,"src":"200:69:11","symbolAliases":[{"foreign":{"id":1801,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"208:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"271:159:11","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1873,"linearizedBaseContracts":[1873],"name":"ERC721Utils","nameLocation":"439:11:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1871,"nodeType":"Block","src":"1159:760:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1817,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"1173:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:11","memberName":"code","nodeType":"MemberAccess","src":"1173:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:11","memberName":"length","nodeType":"MemberAccess","src":"1173:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1870,"nodeType":"IfStatement","src":"1169:744:11","trueBody":{"id":1869,"nodeType":"Block","src":"1193:720:11","statements":[{"clauses":[{"block":{"id":1847,"nodeType":"Block","src":"1303:214:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1834,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"1325:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1835,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1335:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1640_$","typeString":"type(contract IERC721Receiver)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:11","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1639,"src":"1335:32:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:11","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1846,"nodeType":"IfStatement","src":"1321:182:11","trueBody":{"id":1845,"nodeType":"Block","src":"1378:125:11","statements":[{"errorCall":{"arguments":[{"id":1842,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"1481:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1839,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"1445:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$501_$","typeString":"type(contract IERC721Errors)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:11","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":483,"src":"1445:35:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1844,"nodeType":"RevertStatement","src":"1438:46:11"}]}}]},"errorName":"","id":1848,"nodeType":"TryCatchClause","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"retval","nameLocation":"1295:6:11","nodeType":"VariableDeclaration","scope":1848,"src":"1288:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1831,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:11"},"src":"1279:238:11"},{"block":{"id":1866,"nodeType":"Block","src":"1546:357:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1852,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"1568:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:11","memberName":"length","nodeType":"MemberAccess","src":"1568:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1864,"nodeType":"Block","src":"1736:153:11","statements":[{"AST":{"nativeSrc":"1783:88:11","nodeType":"YulBlock","src":"1783:88:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1820:6:11","nodeType":"YulIdentifier","src":"1820:6:11"},{"kind":"number","nativeSrc":"1828:4:11","nodeType":"YulLiteral","src":"1828:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1816:3:11","nodeType":"YulIdentifier","src":"1816:3:11"},"nativeSrc":"1816:17:11","nodeType":"YulFunctionCall","src":"1816:17:11"},{"arguments":[{"name":"reason","nativeSrc":"1841:6:11","nodeType":"YulIdentifier","src":"1841:6:11"}],"functionName":{"name":"mload","nativeSrc":"1835:5:11","nodeType":"YulIdentifier","src":"1835:5:11"},"nativeSrc":"1835:13:11","nodeType":"YulFunctionCall","src":"1835:13:11"}],"functionName":{"name":"revert","nativeSrc":"1809:6:11","nodeType":"YulIdentifier","src":"1809:6:11"},"nativeSrc":"1809:40:11","nodeType":"YulFunctionCall","src":"1809:40:11"},"nativeSrc":"1809:40:11","nodeType":"YulExpressionStatement","src":"1809:40:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1850,"isOffset":false,"isSlot":false,"src":"1820:6:11","valueSize":1},{"declaration":1850,"isOffset":false,"isSlot":false,"src":"1841:6:11","valueSize":1}],"flags":["memory-safe"],"id":1863,"nodeType":"InlineAssembly","src":"1758:113:11"}]},"id":1865,"nodeType":"IfStatement","src":"1564:325:11","trueBody":{"id":1862,"nodeType":"Block","src":"1588:142:11","statements":[{"errorCall":{"arguments":[{"id":1859,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"1708:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1856,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"1672:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$501_$","typeString":"type(contract IERC721Errors)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:11","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":483,"src":"1672:35:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1861,"nodeType":"RevertStatement","src":"1665:46:11"}]}}]},"errorName":"","id":1867,"nodeType":"TryCatchClause","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"reason","nameLocation":"1538:6:11","nodeType":"VariableDeclaration","scope":1867,"src":"1525:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1849,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:11"},"src":"1518:385:11"}],"externalCall":{"arguments":[{"id":1826,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"1248:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1827,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"1258:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1828,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"1264:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1829,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"1273:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1823,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"1227:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1822,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1211:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1640_$","typeString":"type(contract IERC721Receiver)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1640","typeString":"contract IERC721Receiver"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:11","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1639,"src":"1211:36:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:11","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1868,"nodeType":"TryStatement","src":"1207:696:11"}]}}]},"documentation":{"id":1804,"nodeType":"StructuredDocumentation","src":"457:531:11","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:11","nodeType":"FunctionDefinition","parameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"operator","nameLocation":"1041:8:11","nodeType":"VariableDeclaration","scope":1872,"src":"1033:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"from","nameLocation":"1067:4:11","nodeType":"VariableDeclaration","scope":1872,"src":"1059:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"to","nameLocation":"1089:2:11","nodeType":"VariableDeclaration","scope":1872,"src":"1081:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1809,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1812,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:11","nodeType":"VariableDeclaration","scope":1872,"src":"1101:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1814,"mutability":"mutable","name":"data","nameLocation":"1139:4:11","nodeType":"VariableDeclaration","scope":1872,"src":"1126:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1813,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:11"},"returnParameters":{"id":1816,"nodeType":"ParameterList","parameters":[],"src":"1159:0:11"},"scope":1873,"src":"993:926:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1874,"src":"431:1490:11","usedErrors":[],"usedEvents":[]}],"src":"118:1804:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1903]},"id":1904,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1875,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1903,"linearizedBaseContracts":[1903],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1884,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":1881,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1880,"id":1883,"nodeType":"Return","src":"728:17:12"}]},"id":1885,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1885,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":1903,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1893,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":1890,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1889,"id":1892,"nodeType":"Return","src":"835:15:12"}]},"id":1894,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":1886,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":1889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1894,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1887,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":1903,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1901,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1898,"id":1900,"nodeType":"Return","src":"945:8:12"}]},"id":1902,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":1895,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1902,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":1903,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1904,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1955]},"id":1956,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1905,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1906,"nodeType":"StructuredDocumentation","src":"125:489:13","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1955,"linearizedBaseContracts":[1955],"name":"Panic","nameLocation":"665:5:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1907,"nodeType":"StructuredDocumentation","src":"677:36:13","text":"@dev generic / unspecified error"},"id":1910,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:13","nodeType":"VariableDeclaration","scope":1955,"src":"718:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1911,"nodeType":"StructuredDocumentation","src":"764:37:13","text":"@dev used by the assert() builtin"},"id":1914,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:13","nodeType":"VariableDeclaration","scope":1955,"src":"806:39:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1915,"nodeType":"StructuredDocumentation","src":"851:41:13","text":"@dev arithmetic underflow or overflow"},"id":1918,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:13","nodeType":"VariableDeclaration","scope":1955,"src":"897:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:13","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1919,"nodeType":"StructuredDocumentation","src":"950:35:13","text":"@dev division or modulo by zero"},"id":1922,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:13","nodeType":"VariableDeclaration","scope":1955,"src":"990:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1920,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1923,"nodeType":"StructuredDocumentation","src":"1045:30:13","text":"@dev enum conversion error"},"id":1926,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:13","nodeType":"VariableDeclaration","scope":1955,"src":"1080:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:13","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"1140:36:13","text":"@dev invalid encoding in storage"},"id":1930,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:13","nodeType":"VariableDeclaration","scope":1955,"src":"1181:55:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:13","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"1242:24:13","text":"@dev empty array pop"},"id":1934,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:13","nodeType":"VariableDeclaration","scope":1955,"src":"1271:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:13","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"1325:35:13","text":"@dev array out of bounds access"},"id":1938,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:13","nodeType":"VariableDeclaration","scope":1955,"src":"1365:52:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:13","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1939,"nodeType":"StructuredDocumentation","src":"1423:65:13","text":"@dev resource error (too large allocation or too large array)"},"id":1942,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:13","nodeType":"VariableDeclaration","scope":1955,"src":"1493:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"1546:42:13","text":"@dev calling invalid internal function"},"id":1946,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:13","nodeType":"VariableDeclaration","scope":1955,"src":"1593:58:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:13","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1953,"nodeType":"Block","src":"1819:151:13","statements":[{"AST":{"nativeSrc":"1854:110:13","nodeType":"YulBlock","src":"1854:110:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:13","nodeType":"YulLiteral","src":"1875:4:13","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:13","nodeType":"YulLiteral","src":"1881:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:13","nodeType":"YulIdentifier","src":"1868:6:13"},"nativeSrc":"1868:24:13","nodeType":"YulFunctionCall","src":"1868:24:13"},"nativeSrc":"1868:24:13","nodeType":"YulExpressionStatement","src":"1868:24:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:13","nodeType":"YulLiteral","src":"1912:4:13","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:13","nodeType":"YulIdentifier","src":"1918:4:13"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:13","nodeType":"YulIdentifier","src":"1905:6:13"},"nativeSrc":"1905:18:13","nodeType":"YulFunctionCall","src":"1905:18:13"},"nativeSrc":"1905:18:13","nodeType":"YulExpressionStatement","src":"1905:18:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:13","nodeType":"YulLiteral","src":"1943:4:13","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:13","nodeType":"YulLiteral","src":"1949:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:13","nodeType":"YulIdentifier","src":"1936:6:13"},"nativeSrc":"1936:18:13","nodeType":"YulFunctionCall","src":"1936:18:13"},"nativeSrc":"1936:18:13","nodeType":"YulExpressionStatement","src":"1936:18:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1949,"isOffset":false,"isSlot":false,"src":"1918:4:13","valueSize":1}],"flags":["memory-safe"],"id":1952,"nodeType":"InlineAssembly","src":"1829:135:13"}]},"documentation":{"id":1947,"nodeType":"StructuredDocumentation","src":"1658:113:13","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1954,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:13","nodeType":"FunctionDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"code","nameLocation":"1799:4:13","nodeType":"VariableDeclaration","scope":1954,"src":"1791:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:13"},"returnParameters":{"id":1951,"nodeType":"ParameterList","parameters":[],"src":"1819:0:13"},"scope":1955,"src":"1776:194:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1956,"src":"657:1315:13","usedErrors":[],"usedEvents":[]}],"src":"99:1874:13"},"id":13},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5014],"SafeCast":[6779],"SignedMath":[6923],"Strings":[3357]},"id":3358,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1957,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1959,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3358,"sourceUnit":5015,"src":"127:37:14","symbolAliases":[{"foreign":{"id":1958,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"135:4:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1961,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3358,"sourceUnit":6780,"src":"165:45:14","symbolAliases":[{"foreign":{"id":1960,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"173:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1963,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3358,"sourceUnit":6924,"src":"211:49:14","symbolAliases":[{"foreign":{"id":1962,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"219:10:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1964,"nodeType":"StructuredDocumentation","src":"262:34:14","text":" @dev String operations."},"fullyImplemented":true,"id":3357,"linearizedBaseContracts":[3357],"name":"Strings","nameLocation":"305:7:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1966,"libraryName":{"id":1965,"name":"SafeCast","nameLocations":["325:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":6779,"src":"325:8:14"},"nodeType":"UsingForDirective","src":"319:21:14"},{"constant":true,"id":1969,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:14","nodeType":"VariableDeclaration","scope":3357,"src":"346:56:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1967,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1972,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:14","nodeType":"VariableDeclaration","scope":3357,"src":"408:42:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1970,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:14","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2008,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:14","nodeType":"VariableDeclaration","scope":3357,"src":"456:302:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:14","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:14","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1981,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:14","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:14","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:14","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1986,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:14","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:14","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:14","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:14","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:14","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:14","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:14","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:14","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:14","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:14","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:14","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:14","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:14","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:14","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:14","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:14","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:14","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"778:81:14","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2015,"name":"StringsInsufficientHexLength","nameLocation":"870:28:14","nodeType":"ErrorDefinition","parameters":{"id":2014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"value","nameLocation":"907:5:14","nodeType":"VariableDeclaration","scope":2015,"src":"899:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2013,"mutability":"mutable","name":"length","nameLocation":"922:6:14","nodeType":"VariableDeclaration","scope":2015,"src":"914:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2012,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:14"},"src":"864:66:14"},{"documentation":{"id":2016,"nodeType":"StructuredDocumentation","src":"936:108:14","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2018,"name":"StringsInvalidChar","nameLocation":"1055:18:14","nodeType":"ErrorDefinition","parameters":{"id":2017,"nodeType":"ParameterList","parameters":[],"src":"1073:2:14"},"src":"1049:27:14"},{"documentation":{"id":2019,"nodeType":"StructuredDocumentation","src":"1082:84:14","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2021,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:14","nodeType":"ErrorDefinition","parameters":{"id":2020,"nodeType":"ParameterList","parameters":[],"src":"1204:2:14"},"src":"1171:36:14"},{"body":{"id":2068,"nodeType":"Block","src":"1379:563:14","statements":[{"id":2067,"nodeType":"UncheckedBlock","src":"1389:547:14","statements":[{"assignments":[2030],"declarations":[{"constant":false,"id":2030,"mutability":"mutable","name":"length","nameLocation":"1421:6:14","nodeType":"VariableDeclaration","scope":2067,"src":"1413:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2037,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"1441:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2031,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"1430:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5014_$","typeString":"type(library Math)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:14","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4846,"src":"1430:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:14"},{"assignments":[2039],"declarations":[{"constant":false,"id":2039,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:14","nodeType":"VariableDeclaration","scope":2067,"src":"1465:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2038,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2044,"initialValue":{"arguments":[{"id":2042,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"1499:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2040,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:14"},{"assignments":[2046],"declarations":[{"constant":false,"id":2046,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:14","nodeType":"VariableDeclaration","scope":2067,"src":"1520:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2047,"nodeType":"VariableDeclarationStatement","src":"1520:11:14"},{"AST":{"nativeSrc":"1570:69:14","nodeType":"YulBlock","src":"1570:69:14","statements":[{"nativeSrc":"1588:37:14","nodeType":"YulAssignment","src":"1588:37:14","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:14","nodeType":"YulIdentifier","src":"1603:6:14"},{"kind":"number","nativeSrc":"1611:4:14","nodeType":"YulLiteral","src":"1611:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:14","nodeType":"YulIdentifier","src":"1599:3:14"},"nativeSrc":"1599:17:14","nodeType":"YulFunctionCall","src":"1599:17:14"},{"name":"length","nativeSrc":"1618:6:14","nodeType":"YulIdentifier","src":"1618:6:14"}],"functionName":{"name":"add","nativeSrc":"1595:3:14","nodeType":"YulIdentifier","src":"1595:3:14"},"nativeSrc":"1595:30:14","nodeType":"YulFunctionCall","src":"1595:30:14"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:14","nodeType":"YulIdentifier","src":"1588:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2039,"isOffset":false,"isSlot":false,"src":"1603:6:14","valueSize":1},{"declaration":2030,"isOffset":false,"isSlot":false,"src":"1618:6:14","valueSize":1},{"declaration":2046,"isOffset":false,"isSlot":false,"src":"1588:3:14","valueSize":1}],"flags":["memory-safe"],"id":2048,"nodeType":"InlineAssembly","src":"1545:94:14"},{"body":{"id":2063,"nodeType":"Block","src":"1665:234:14","statements":[{"expression":{"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:14","subExpression":{"id":2050,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"1683:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2052,"nodeType":"ExpressionStatement","src":"1683:5:14"},{"AST":{"nativeSrc":"1731:86:14","nodeType":"YulBlock","src":"1731:86:14","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:14","nodeType":"YulIdentifier","src":"1761:3:14"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:14","nodeType":"YulIdentifier","src":"1775:5:14"},{"kind":"number","nativeSrc":"1782:2:14","nodeType":"YulLiteral","src":"1782:2:14","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:14","nodeType":"YulIdentifier","src":"1771:3:14"},"nativeSrc":"1771:14:14","nodeType":"YulFunctionCall","src":"1771:14:14"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:14","nodeType":"YulIdentifier","src":"1787:10:14"}],"functionName":{"name":"byte","nativeSrc":"1766:4:14","nodeType":"YulIdentifier","src":"1766:4:14"},"nativeSrc":"1766:32:14","nodeType":"YulFunctionCall","src":"1766:32:14"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:14","nodeType":"YulIdentifier","src":"1753:7:14"},"nativeSrc":"1753:46:14","nodeType":"YulFunctionCall","src":"1753:46:14"},"nativeSrc":"1753:46:14","nodeType":"YulExpressionStatement","src":"1753:46:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1969,"isOffset":false,"isSlot":false,"src":"1787:10:14","valueSize":1},{"declaration":2046,"isOffset":false,"isSlot":false,"src":"1761:3:14","valueSize":1},{"declaration":2024,"isOffset":false,"isSlot":false,"src":"1775:5:14","valueSize":1}],"flags":["memory-safe"],"id":2053,"nodeType":"InlineAssembly","src":"1706:111:14"},{"expression":{"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"1834:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2057,"nodeType":"ExpressionStatement","src":"1834:11:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"1867:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2062,"nodeType":"IfStatement","src":"1863:21:14","trueBody":{"id":2061,"nodeType":"Break","src":"1879:5:14"}}]},"condition":{"hexValue":"74727565","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2064,"nodeType":"WhileStatement","src":"1652:247:14"},{"expression":{"id":2065,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1919:6:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2028,"id":2066,"nodeType":"Return","src":"1912:13:14"}]}]},"documentation":{"id":2022,"nodeType":"StructuredDocumentation","src":"1213:90:14","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2069,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:14","nodeType":"FunctionDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"value","nameLocation":"1334:5:14","nodeType":"VariableDeclaration","scope":2069,"src":"1326:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:14"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2069,"src":"1364:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2026,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:14"},"scope":3357,"src":"1308:634:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2094,"nodeType":"Block","src":"2118:92:14","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"2149:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:14","trueExpression":{"hexValue":"2d","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"2195:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2087,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"2180:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6923_$","typeString":"type(library SignedMath)"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:14","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6922,"src":"2180:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2086,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"2171:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2077,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:14","typeDescriptions":{}}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:14","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:14","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2076,"id":2093,"nodeType":"Return","src":"2128:75:14"}]},"documentation":{"id":2070,"nodeType":"StructuredDocumentation","src":"1948:89:14","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:14","nodeType":"FunctionDefinition","parameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"value","nameLocation":"2073:5:14","nodeType":"VariableDeclaration","scope":2095,"src":"2066:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2071,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:14"},"returnParameters":{"id":2076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2095,"src":"2103:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2074,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:14"},"scope":3357,"src":"2042:168:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2114,"nodeType":"Block","src":"2389:100:14","statements":[{"id":2113,"nodeType":"UncheckedBlock","src":"2399:84:14","statements":[{"expression":{"arguments":[{"id":2104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"2442:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"2461:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2105,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"2449:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5014_$","typeString":"type(library Math)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:14","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4957,"src":"2449:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2103,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2115,2198,2218],"referencedDeclaration":2198,"src":"2430:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2102,"id":2112,"nodeType":"Return","src":"2423:49:14"}]}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"2216:94:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2115,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:14","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"value","nameLocation":"2344:5:14","nodeType":"VariableDeclaration","scope":2115,"src":"2336:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:14"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2115,"src":"2374:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2100,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:14"},"scope":3357,"src":"2315:174:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2197,"nodeType":"Block","src":"2702:435:14","statements":[{"assignments":[2126],"declarations":[{"constant":false,"id":2126,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:14","nodeType":"VariableDeclaration","scope":2197,"src":"2712:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2125,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2128,"initialValue":{"id":2127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"2733:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:14"},{"assignments":[2130],"declarations":[{"constant":false,"id":2130,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:14","nodeType":"VariableDeclaration","scope":2197,"src":"2748:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2129,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2139,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2134,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"2784:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2131,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:14"},{"expression":{"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2140,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"2805:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2142,"indexExpression":{"hexValue":"30","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2145,"nodeType":"ExpressionStatement","src":"2805:15:14"},{"expression":{"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2146,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"2830:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2148,"indexExpression":{"hexValue":"31","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2151,"nodeType":"ExpressionStatement","src":"2830:15:14"},{"body":{"id":2180,"nodeType":"Block","src":"2900:95:14","statements":[{"expression":{"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2166,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"2914:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2168,"indexExpression":{"id":2167,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"2921:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2169,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"2926:10:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2173,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2170,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"2937:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2175,"nodeType":"ExpressionStatement","src":"2914:40:14"},{"expression":{"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2176,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"2968:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2179,"nodeType":"ExpressionStatement","src":"2968:16:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"2888:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2181,"initializationExpression":{"assignments":[2153],"declarations":[{"constant":false,"id":2153,"mutability":"mutable","name":"i","nameLocation":"2868:1:14","nodeType":"VariableDeclaration","scope":2181,"src":"2860:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2159,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2155,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"2876:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:14"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:14","subExpression":{"id":2163,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"2897:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2165,"nodeType":"ExpressionStatement","src":"2895:3:14"},"nodeType":"ForStatement","src":"2855:140:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2182,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"3008:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2191,"nodeType":"IfStatement","src":"3004:96:14","trueBody":{"id":2190,"nodeType":"Block","src":"3025:75:14","statements":[{"errorCall":{"arguments":[{"id":2186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"3075:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2187,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"3082:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2185,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"3046:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2189,"nodeType":"RevertStatement","src":"3039:50:14"}]}},{"expression":{"arguments":[{"id":2194,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"3123:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2192,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:14","typeDescriptions":{}}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2124,"id":2196,"nodeType":"Return","src":"3109:21:14"}]},"documentation":{"id":2116,"nodeType":"StructuredDocumentation","src":"2495:112:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2198,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:14","nodeType":"FunctionDefinition","parameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"value","nameLocation":"2641:5:14","nodeType":"VariableDeclaration","scope":2198,"src":"2633:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2120,"mutability":"mutable","name":"length","nameLocation":"2656:6:14","nodeType":"VariableDeclaration","scope":2198,"src":"2648:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:14"},"returnParameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2198,"src":"2687:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2122,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:14"},"scope":3357,"src":"2612:525:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2217,"nodeType":"Block","src":"3369:75:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2211,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"3414:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2209,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:14","typeDescriptions":{}}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:14","typeDescriptions":{}}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2214,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"3422:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2206,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2115,2198,2218],"referencedDeclaration":2198,"src":"3386:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2205,"id":2216,"nodeType":"Return","src":"3379:58:14"}]},"documentation":{"id":2199,"nodeType":"StructuredDocumentation","src":"3143:148:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2218,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:14","nodeType":"FunctionDefinition","parameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"addr","nameLocation":"3325:4:14","nodeType":"VariableDeclaration","scope":2218,"src":"3317:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:14"},"returnParameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2218,"src":"3354:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2203,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:14"},"scope":3357,"src":"3296:148:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2282,"nodeType":"Block","src":"3701:642:14","statements":[{"assignments":[2227],"declarations":[{"constant":false,"id":2227,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:14","nodeType":"VariableDeclaration","scope":2282,"src":"3711:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2226,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2234,"initialValue":{"arguments":[{"arguments":[{"id":2231,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"3751:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2230,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2115,2198,2218],"referencedDeclaration":2218,"src":"3739:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2228,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:14","typeDescriptions":{}}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:14"},{"assignments":[2236],"declarations":[{"constant":false,"id":2236,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:14","nodeType":"VariableDeclaration","scope":2282,"src":"3842:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2237,"nodeType":"VariableDeclarationStatement","src":"3842:17:14"},{"AST":{"nativeSrc":"3894:78:14","nodeType":"YulBlock","src":"3894:78:14","statements":[{"nativeSrc":"3908:54:14","nodeType":"YulAssignment","src":"3908:54:14","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:14","nodeType":"YulLiteral","src":"3925:2:14","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:14","nodeType":"YulIdentifier","src":"3943:6:14"},{"kind":"number","nativeSrc":"3951:4:14","nodeType":"YulLiteral","src":"3951:4:14","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:14","nodeType":"YulIdentifier","src":"3939:3:14"},"nativeSrc":"3939:17:14","nodeType":"YulFunctionCall","src":"3939:17:14"},{"kind":"number","nativeSrc":"3958:2:14","nodeType":"YulLiteral","src":"3958:2:14","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:14","nodeType":"YulIdentifier","src":"3929:9:14"},"nativeSrc":"3929:32:14","nodeType":"YulFunctionCall","src":"3929:32:14"}],"functionName":{"name":"shr","nativeSrc":"3921:3:14","nodeType":"YulIdentifier","src":"3921:3:14"},"nativeSrc":"3921:41:14","nodeType":"YulFunctionCall","src":"3921:41:14"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:14","nodeType":"YulIdentifier","src":"3908:9:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2227,"isOffset":false,"isSlot":false,"src":"3943:6:14","valueSize":1},{"declaration":2236,"isOffset":false,"isSlot":false,"src":"3908:9:14","valueSize":1}],"flags":["memory-safe"],"id":2238,"nodeType":"InlineAssembly","src":"3869:103:14"},{"body":{"id":2275,"nodeType":"Block","src":"4015:291:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2249,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"4121:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2256,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"4150:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2258,"indexExpression":{"id":2257,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"4157:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2254,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:14","typeDescriptions":{}}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2270,"nodeType":"IfStatement","src":"4117:150:14","trueBody":{"id":2269,"nodeType":"Block","src":"4167:100:14","statements":[{"expression":{"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2263,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"4235:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2265,"indexExpression":{"id":2264,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"4242:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2268,"nodeType":"ExpressionStatement","src":"4235:17:14"}]}},{"expression":{"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2271,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"4280:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2274,"nodeType":"ExpressionStatement","src":"4280:15:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2243,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"4003:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2276,"initializationExpression":{"assignments":[2240],"declarations":[{"constant":false,"id":2240,"mutability":"mutable","name":"i","nameLocation":"3995:1:14","nodeType":"VariableDeclaration","scope":2276,"src":"3987:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2242,"initialValue":{"hexValue":"3431","id":2241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:14","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:14"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:14","subExpression":{"id":2246,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"4012:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2248,"nodeType":"ExpressionStatement","src":"4010:3:14"},"nodeType":"ForStatement","src":"3982:324:14"},{"expression":{"arguments":[{"id":2279,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"4329:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2277,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:14","typeDescriptions":{}}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2225,"id":2281,"nodeType":"Return","src":"4315:21:14"}]},"documentation":{"id":2219,"nodeType":"StructuredDocumentation","src":"3450:165:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2283,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:14","nodeType":"FunctionDefinition","parameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2221,"mutability":"mutable","name":"addr","nameLocation":"3657:4:14","nodeType":"VariableDeclaration","scope":2283,"src":"3649:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2220,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:14"},"returnParameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2283,"src":"3686:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2223,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:14"},"scope":3357,"src":"3620:723:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2319,"nodeType":"Block","src":"4498:104:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"4521:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2293,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:14","typeDescriptions":{}}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:14","memberName":"length","nodeType":"MemberAccess","src":"4515:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2300,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4540:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2298,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:14","typeDescriptions":{}}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:14","memberName":"length","nodeType":"MemberAccess","src":"4534:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2307,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"4569:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2305,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:14","typeDescriptions":{}}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2304,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2313,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4592:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2311,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:14","typeDescriptions":{}}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2310,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2292,"id":2318,"nodeType":"Return","src":"4508:87:14"}]},"documentation":{"id":2284,"nodeType":"StructuredDocumentation","src":"4349:66:14","text":" @dev Returns true if the two strings are equal."},"id":2320,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:14","nodeType":"FunctionDefinition","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"mutability":"mutable","name":"a","nameLocation":"4449:1:14","nodeType":"VariableDeclaration","scope":2320,"src":"4435:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2285,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2288,"mutability":"mutable","name":"b","nameLocation":"4466:1:14","nodeType":"VariableDeclaration","scope":2320,"src":"4452:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2287,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:14"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2320,"src":"4492:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2290,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:14"},"scope":3357,"src":"4420:182:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2338,"nodeType":"Block","src":"4899:64:14","statements":[{"expression":{"arguments":[{"id":2329,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"4926:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2333,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"4942:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2331,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:14","typeDescriptions":{}}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:14","memberName":"length","nodeType":"MemberAccess","src":"4936:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2328,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2339,2370],"referencedDeclaration":2370,"src":"4916:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2327,"id":2337,"nodeType":"Return","src":"4909:47:14"}]},"documentation":{"id":2321,"nodeType":"StructuredDocumentation","src":"4608:214:14","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2339,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:14","nodeType":"FunctionDefinition","parameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"input","nameLocation":"4860:5:14","nodeType":"VariableDeclaration","scope":2339,"src":"4846:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2322,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:14"},"returnParameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2339,"src":"4890:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:14"},"scope":3357,"src":"4827:136:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2369,"nodeType":"Block","src":"5368:153:14","statements":[{"assignments":[2352,2354],"declarations":[{"constant":false,"id":2352,"mutability":"mutable","name":"success","nameLocation":"5384:7:14","nodeType":"VariableDeclaration","scope":2369,"src":"5379:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2351,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2354,"mutability":"mutable","name":"value","nameLocation":"5401:5:14","nodeType":"VariableDeclaration","scope":2369,"src":"5393:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2353,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2360,"initialValue":{"arguments":[{"id":2356,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"5423:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2357,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"5430:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2358,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"5437:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2355,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2391,2428],"referencedDeclaration":2428,"src":"5410:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:14"},{"condition":{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:14","subExpression":{"id":2361,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"5456:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2366,"nodeType":"IfStatement","src":"5451:41:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2363,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"5472:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2365,"nodeType":"RevertStatement","src":"5465:27:14"}},{"expression":{"id":2367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"5509:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2350,"id":2368,"nodeType":"Return","src":"5502:12:14"}]},"documentation":{"id":2340,"nodeType":"StructuredDocumentation","src":"4969:294:14","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2370,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:14","nodeType":"FunctionDefinition","parameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"input","nameLocation":"5301:5:14","nodeType":"VariableDeclaration","scope":2370,"src":"5287:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2341,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2344,"mutability":"mutable","name":"begin","nameLocation":"5316:5:14","nodeType":"VariableDeclaration","scope":2370,"src":"5308:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"end","nameLocation":"5331:3:14","nodeType":"VariableDeclaration","scope":2370,"src":"5323:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:14"},"returnParameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2370,"src":"5359:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:14"},"scope":3357,"src":"5268:253:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2390,"nodeType":"Block","src":"5842:83:14","statements":[{"expression":{"arguments":[{"id":2381,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"5888:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2385,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"5904:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2383,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:14","typeDescriptions":{}}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:14","memberName":"length","nodeType":"MemberAccess","src":"5898:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2380,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"5859:28:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2379,"id":2389,"nodeType":"Return","src":"5852:66:14"}]},"documentation":{"id":2371,"nodeType":"StructuredDocumentation","src":"5527:215:14","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2391,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:14","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"input","nameLocation":"5783:5:14","nodeType":"VariableDeclaration","scope":2391,"src":"5769:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2372,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:14"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"success","nameLocation":"5818:7:14","nodeType":"VariableDeclaration","scope":2391,"src":"5813:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2375,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2378,"mutability":"mutable","name":"value","nameLocation":"5835:5:14","nodeType":"VariableDeclaration","scope":2391,"src":"5827:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:14"},"scope":3357,"src":"5747:178:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2427,"nodeType":"Block","src":"6327:144:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2405,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"6341:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2408,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"6353:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2406,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:14","typeDescriptions":{}}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:14","memberName":"length","nodeType":"MemberAccess","src":"6347:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2412,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"6370:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2413,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"6378:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2420,"nodeType":"IfStatement","src":"6337:63:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2418,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2404,"id":2419,"nodeType":"Return","src":"6383:17:14"}},{"expression":{"arguments":[{"id":2422,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"6446:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2423,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"6453:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2424,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"6460:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2421,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"6417:28:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2404,"id":2426,"nodeType":"Return","src":"6410:54:14"}]},"documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"5931:238:14","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2428,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:14","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"input","nameLocation":"6219:5:14","nodeType":"VariableDeclaration","scope":2428,"src":"6205:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2393,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2396,"mutability":"mutable","name":"begin","nameLocation":"6242:5:14","nodeType":"VariableDeclaration","scope":2428,"src":"6234:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"end","nameLocation":"6265:3:14","nodeType":"VariableDeclaration","scope":2428,"src":"6257:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:14"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"success","nameLocation":"6303:7:14","nodeType":"VariableDeclaration","scope":2428,"src":"6298:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2400,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2403,"mutability":"mutable","name":"value","nameLocation":"6320:5:14","nodeType":"VariableDeclaration","scope":2428,"src":"6312:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:14"},"scope":3357,"src":"6174:297:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2497,"nodeType":"Block","src":"6874:347:14","statements":[{"assignments":[2443],"declarations":[{"constant":false,"id":2443,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:14","nodeType":"VariableDeclaration","scope":2497,"src":"6884:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2442,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2448,"initialValue":{"arguments":[{"id":2446,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"6912:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2444,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:14","typeDescriptions":{}}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:14"},{"assignments":[2450],"declarations":[{"constant":false,"id":2450,"mutability":"mutable","name":"result","nameLocation":"6937:6:14","nodeType":"VariableDeclaration","scope":2497,"src":"6929:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2449,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2452,"initialValue":{"hexValue":"30","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:14"},{"body":{"id":2491,"nodeType":"Block","src":"6995:189:14","statements":[{"assignments":[2464],"declarations":[{"constant":false,"id":2464,"mutability":"mutable","name":"chr","nameLocation":"7015:3:14","nodeType":"VariableDeclaration","scope":2491,"src":"7009:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2463,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2474,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2469,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"7064:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2470,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"7072:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2468,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"7041:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2466,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:14","typeDescriptions":{}}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2465,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"7021:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2475,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"7094:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:14","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2482,"nodeType":"IfStatement","src":"7090:30:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2480,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2441,"id":2481,"nodeType":"Return","src":"7103:17:14"}},{"expression":{"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"7134:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2486,"nodeType":"ExpressionStatement","src":"7134:12:14"},{"expression":{"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"7160:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2488,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"7170:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2490,"nodeType":"ExpressionStatement","src":"7160:13:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2457,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"6981:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2458,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"6985:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2492,"initializationExpression":{"assignments":[2454],"declarations":[{"constant":false,"id":2454,"mutability":"mutable","name":"i","nameLocation":"6970:1:14","nodeType":"VariableDeclaration","scope":2492,"src":"6962:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2453,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2456,"initialValue":{"id":2455,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"6974:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:14","subExpression":{"id":2460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"6992:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2462,"nodeType":"ExpressionStatement","src":"6990:3:14"},"nodeType":"ForStatement","src":"6957:227:14"},{"expression":{"components":[{"hexValue":"74727565","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2494,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"7207:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2495,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2441,"id":2496,"nodeType":"Return","src":"7193:21:14"}]},"documentation":{"id":2429,"nodeType":"StructuredDocumentation","src":"6477:224:14","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2498,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:14","nodeType":"FunctionDefinition","parameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"input","nameLocation":"6767:5:14","nodeType":"VariableDeclaration","scope":2498,"src":"6753:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2430,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"begin","nameLocation":"6790:5:14","nodeType":"VariableDeclaration","scope":2498,"src":"6782:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"end","nameLocation":"6813:3:14","nodeType":"VariableDeclaration","scope":2498,"src":"6805:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:14"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"success","nameLocation":"6850:7:14","nodeType":"VariableDeclaration","scope":2498,"src":"6845:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2437,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"value","nameLocation":"6867:5:14","nodeType":"VariableDeclaration","scope":2498,"src":"6859:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2439,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:14"},"scope":3357,"src":"6706:515:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2516,"nodeType":"Block","src":"7518:63:14","statements":[{"expression":{"arguments":[{"id":2507,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"7544:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2511,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"7560:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2509,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:14","typeDescriptions":{}}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:14","memberName":"length","nodeType":"MemberAccess","src":"7554:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2506,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2517,2548],"referencedDeclaration":2548,"src":"7535:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2505,"id":2515,"nodeType":"Return","src":"7528:46:14"}]},"documentation":{"id":2499,"nodeType":"StructuredDocumentation","src":"7227:216:14","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2517,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:14","nodeType":"FunctionDefinition","parameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2501,"mutability":"mutable","name":"input","nameLocation":"7480:5:14","nodeType":"VariableDeclaration","scope":2517,"src":"7466:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2500,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:14"},"returnParameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2517,"src":"7510:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2503,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:14"},"scope":3357,"src":"7448:133:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2547,"nodeType":"Block","src":"7986:151:14","statements":[{"assignments":[2530,2532],"declarations":[{"constant":false,"id":2530,"mutability":"mutable","name":"success","nameLocation":"8002:7:14","nodeType":"VariableDeclaration","scope":2547,"src":"7997:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2529,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2532,"mutability":"mutable","name":"value","nameLocation":"8018:5:14","nodeType":"VariableDeclaration","scope":2547,"src":"8011:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2531,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2538,"initialValue":{"arguments":[{"id":2534,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"8039:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2535,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"8046:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2536,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"8053:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2533,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2569,2611],"referencedDeclaration":2611,"src":"8027:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:14"},{"condition":{"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:14","subExpression":{"id":2539,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"8072:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2544,"nodeType":"IfStatement","src":"8067:41:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2541,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"8088:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2543,"nodeType":"RevertStatement","src":"8081:27:14"}},{"expression":{"id":2545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"8125:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2528,"id":2546,"nodeType":"Return","src":"8118:12:14"}]},"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"7587:296:14","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2548,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:14","nodeType":"FunctionDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"input","nameLocation":"7920:5:14","nodeType":"VariableDeclaration","scope":2548,"src":"7906:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2519,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2522,"mutability":"mutable","name":"begin","nameLocation":"7935:5:14","nodeType":"VariableDeclaration","scope":2548,"src":"7927:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2524,"mutability":"mutable","name":"end","nameLocation":"7950:3:14","nodeType":"VariableDeclaration","scope":2548,"src":"7942:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:14"},"returnParameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2548,"src":"7978:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2526,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:14"},"scope":3357,"src":"7888:249:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2568,"nodeType":"Block","src":"8528:82:14","statements":[{"expression":{"arguments":[{"id":2559,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"8573:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2563,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"8589:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2561,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:14","typeDescriptions":{}}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:14","memberName":"length","nodeType":"MemberAccess","src":"8583:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2558,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"8545:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2557,"id":2567,"nodeType":"Return","src":"8538:65:14"}]},"documentation":{"id":2549,"nodeType":"StructuredDocumentation","src":"8143:287:14","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2569,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:14","nodeType":"FunctionDefinition","parameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"input","nameLocation":"8470:5:14","nodeType":"VariableDeclaration","scope":2569,"src":"8456:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2550,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:14"},"returnParameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"success","nameLocation":"8505:7:14","nodeType":"VariableDeclaration","scope":2569,"src":"8500:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2553,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2556,"mutability":"mutable","name":"value","nameLocation":"8521:5:14","nodeType":"VariableDeclaration","scope":2569,"src":"8514:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2555,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:14"},"scope":3357,"src":"8435:175:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2574,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:14","nodeType":"VariableDeclaration","scope":3357,"src":"8616:50:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2610,"nodeType":"Block","src":"9132:143:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2588,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"9146:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2591,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"9158:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2589,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:14","typeDescriptions":{}}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:14","memberName":"length","nodeType":"MemberAccess","src":"9152:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2595,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"9175:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2596,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"9183:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2603,"nodeType":"IfStatement","src":"9142:63:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2587,"id":2602,"nodeType":"Return","src":"9188:17:14"}},{"expression":{"arguments":[{"id":2605,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"9250:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2606,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"9257:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2607,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"9264:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2604,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"9222:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2587,"id":2609,"nodeType":"Return","src":"9215:53:14"}]},"documentation":{"id":2575,"nodeType":"StructuredDocumentation","src":"8673:303:14","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2611,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:14","nodeType":"FunctionDefinition","parameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"input","nameLocation":"9025:5:14","nodeType":"VariableDeclaration","scope":2611,"src":"9011:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2576,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"begin","nameLocation":"9048:5:14","nodeType":"VariableDeclaration","scope":2611,"src":"9040:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2581,"mutability":"mutable","name":"end","nameLocation":"9071:3:14","nodeType":"VariableDeclaration","scope":2611,"src":"9063:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:14"},"returnParameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2584,"mutability":"mutable","name":"success","nameLocation":"9109:7:14","nodeType":"VariableDeclaration","scope":2611,"src":"9104:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2583,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2586,"mutability":"mutable","name":"value","nameLocation":"9125:5:14","nodeType":"VariableDeclaration","scope":2611,"src":"9118:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2585,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:14"},"scope":3357,"src":"8981:294:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2731,"nodeType":"Block","src":"9675:812:14","statements":[{"assignments":[2626],"declarations":[{"constant":false,"id":2626,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:14","nodeType":"VariableDeclaration","scope":2731,"src":"9685:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2625,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2631,"initialValue":{"arguments":[{"id":2629,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"9713:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2627,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:14","typeDescriptions":{}}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:14"},{"assignments":[2633],"declarations":[{"constant":false,"id":2633,"mutability":"mutable","name":"sign","nameLocation":"9783:4:14","nodeType":"VariableDeclaration","scope":2731,"src":"9776:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2632,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2649,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2634,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"9790:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2635,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"9799:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2644,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"9847:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2645,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"9855:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2643,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"9824:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2641,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:14","typeDescriptions":{}}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:14","trueExpression":{"arguments":[{"hexValue":"30","id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2637,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:14","typeDescriptions":{}}},"id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:14"},{"assignments":[2651],"declarations":[{"constant":false,"id":2651,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:14","nodeType":"VariableDeclaration","scope":2731,"src":"9943:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2650,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2658,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2652,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"9963:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2653,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:14","typeDescriptions":{}}},"id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:14"},{"assignments":[2660],"declarations":[{"constant":false,"id":2660,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:14","nodeType":"VariableDeclaration","scope":2731,"src":"9992:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2659,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2667,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2661,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"10012:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2662,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:14","typeDescriptions":{}}},"id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:14"},{"assignments":[2669],"declarations":[{"constant":false,"id":2669,"mutability":"mutable","name":"offset","nameLocation":"10049:6:14","nodeType":"VariableDeclaration","scope":2731,"src":"10041:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2676,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2670,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"10059:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2671,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10075:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2673,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"10058:37:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:14"},{"assignments":[2678,2680],"declarations":[{"constant":false,"id":2678,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:14","nodeType":"VariableDeclaration","scope":2731,"src":"10109:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2677,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:14","nodeType":"VariableDeclaration","scope":2731,"src":"10126:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2688,"initialValue":{"arguments":[{"id":2682,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"10159:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2683,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"10166:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2684,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"10174:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2686,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"10182:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2681,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2391,2428],"referencedDeclaration":2428,"src":"10146:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2689,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"10201:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2690,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"10215:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2691,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"10226:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2709,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"10343:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2710,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10357:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2712,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"10373:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2713,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"10385:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2624,"id":2728,"nodeType":"Return","src":"10463:17:14"},"id":2729,"nodeType":"IfStatement","src":"10339:141:14","trueBody":{"id":2724,"nodeType":"Block","src":"10401:56:14","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2718,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2717,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:14","memberName":"min","nodeType":"MemberAccess","src":"10429:16:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2624,"id":2723,"nodeType":"Return","src":"10415:31:14"}]}},"id":2730,"nodeType":"IfStatement","src":"10197:283:14","trueBody":{"id":2708,"nodeType":"Block","src":"10242:91:14","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2695,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10270:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2703,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"10312:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2701,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:14","typeDescriptions":{}}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:14","trueExpression":{"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:14","subExpression":{"arguments":[{"id":2698,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"10293:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2696,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:14","typeDescriptions":{}}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2624,"id":2707,"nodeType":"Return","src":"10256:66:14"}]}}]},"documentation":{"id":2612,"nodeType":"StructuredDocumentation","src":"9281:223:14","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2732,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:14","nodeType":"FunctionDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"input","nameLocation":"9569:5:14","nodeType":"VariableDeclaration","scope":2732,"src":"9555:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2613,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2616,"mutability":"mutable","name":"begin","nameLocation":"9592:5:14","nodeType":"VariableDeclaration","scope":2732,"src":"9584:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2615,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2618,"mutability":"mutable","name":"end","nameLocation":"9615:3:14","nodeType":"VariableDeclaration","scope":2732,"src":"9607:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2617,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:14"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"success","nameLocation":"9652:7:14","nodeType":"VariableDeclaration","scope":2732,"src":"9647:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2620,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2623,"mutability":"mutable","name":"value","nameLocation":"9668:5:14","nodeType":"VariableDeclaration","scope":2732,"src":"9661:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2622,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:14"},"scope":3357,"src":"9509:978:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2750,"nodeType":"Block","src":"10832:67:14","statements":[{"expression":{"arguments":[{"id":2741,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"10862:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2745,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"10878:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2743,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:14","typeDescriptions":{}}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:14","memberName":"length","nodeType":"MemberAccess","src":"10872:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2740,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2751,2782],"referencedDeclaration":2782,"src":"10849:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2739,"id":2749,"nodeType":"Return","src":"10842:50:14"}]},"documentation":{"id":2733,"nodeType":"StructuredDocumentation","src":"10493:259:14","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2751,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:14","nodeType":"FunctionDefinition","parameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"input","nameLocation":"10793:5:14","nodeType":"VariableDeclaration","scope":2751,"src":"10779:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2734,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:14"},"returnParameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2751,"src":"10823:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2737,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:14"},"scope":3357,"src":"10757:142:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2781,"nodeType":"Block","src":"11320:156:14","statements":[{"assignments":[2764,2766],"declarations":[{"constant":false,"id":2764,"mutability":"mutable","name":"success","nameLocation":"11336:7:14","nodeType":"VariableDeclaration","scope":2781,"src":"11331:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2763,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2766,"mutability":"mutable","name":"value","nameLocation":"11353:5:14","nodeType":"VariableDeclaration","scope":2781,"src":"11345:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2765,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2772,"initialValue":{"arguments":[{"id":2768,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"11378:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2769,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"11385:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2770,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"11392:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2767,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2803,2840],"referencedDeclaration":2840,"src":"11362:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:14"},{"condition":{"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:14","subExpression":{"id":2773,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"11411:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2778,"nodeType":"IfStatement","src":"11406:41:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2775,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"11427:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2777,"nodeType":"RevertStatement","src":"11420:27:14"}},{"expression":{"id":2779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"11464:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2762,"id":2780,"nodeType":"Return","src":"11457:12:14"}]},"documentation":{"id":2752,"nodeType":"StructuredDocumentation","src":"10905:307:14","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2782,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:14","nodeType":"FunctionDefinition","parameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2754,"mutability":"mutable","name":"input","nameLocation":"11253:5:14","nodeType":"VariableDeclaration","scope":2782,"src":"11239:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2753,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2756,"mutability":"mutable","name":"begin","nameLocation":"11268:5:14","nodeType":"VariableDeclaration","scope":2782,"src":"11260:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2755,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2758,"mutability":"mutable","name":"end","nameLocation":"11283:3:14","nodeType":"VariableDeclaration","scope":2782,"src":"11275:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:14"},"returnParameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2782,"src":"11311:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:14"},"scope":3357,"src":"11217:259:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2802,"nodeType":"Block","src":"11803:86:14","statements":[{"expression":{"arguments":[{"id":2793,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"11852:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2797,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"11868:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2795,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:14","typeDescriptions":{}}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:14","memberName":"length","nodeType":"MemberAccess","src":"11862:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2792,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"11820:31:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2791,"id":2801,"nodeType":"Return","src":"11813:69:14"}]},"documentation":{"id":2783,"nodeType":"StructuredDocumentation","src":"11482:218:14","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2803,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:14","nodeType":"FunctionDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"input","nameLocation":"11744:5:14","nodeType":"VariableDeclaration","scope":2803,"src":"11730:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2784,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:14"},"returnParameters":{"id":2791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"success","nameLocation":"11779:7:14","nodeType":"VariableDeclaration","scope":2803,"src":"11774:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2787,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2790,"mutability":"mutable","name":"value","nameLocation":"11796:5:14","nodeType":"VariableDeclaration","scope":2803,"src":"11788:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2789,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:14"},"scope":3357,"src":"11705:184:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2839,"nodeType":"Block","src":"12297:147:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2817,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"12311:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2820,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"12323:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2818,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:14","typeDescriptions":{}}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:14","memberName":"length","nodeType":"MemberAccess","src":"12317:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2824,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"12340:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2825,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"12348:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2832,"nodeType":"IfStatement","src":"12307:63:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2816,"id":2831,"nodeType":"Return","src":"12353:17:14"}},{"expression":{"arguments":[{"id":2834,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"12419:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2835,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"12426:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2836,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"12433:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2833,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"12387:31:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2816,"id":2838,"nodeType":"Return","src":"12380:57:14"}]},"documentation":{"id":2804,"nodeType":"StructuredDocumentation","src":"11895:241:14","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2840,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:14","nodeType":"FunctionDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"input","nameLocation":"12189:5:14","nodeType":"VariableDeclaration","scope":2840,"src":"12175:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2805,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2808,"mutability":"mutable","name":"begin","nameLocation":"12212:5:14","nodeType":"VariableDeclaration","scope":2840,"src":"12204:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"end","nameLocation":"12235:3:14","nodeType":"VariableDeclaration","scope":2840,"src":"12227:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:14"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"success","nameLocation":"12273:7:14","nodeType":"VariableDeclaration","scope":2840,"src":"12268:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2812,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2815,"mutability":"mutable","name":"value","nameLocation":"12290:5:14","nodeType":"VariableDeclaration","scope":2840,"src":"12282:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:14"},"scope":3357,"src":"12141:303:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2942,"nodeType":"Block","src":"12853:881:14","statements":[{"assignments":[2855],"declarations":[{"constant":false,"id":2855,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:14","nodeType":"VariableDeclaration","scope":2942,"src":"12863:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2854,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2860,"initialValue":{"arguments":[{"id":2858,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"12891:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2856,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:14","typeDescriptions":{}}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:14"},{"assignments":[2862],"declarations":[{"constant":false,"id":2862,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:14","nodeType":"VariableDeclaration","scope":2942,"src":"12945:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2861,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2882,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2863,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"12963:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2864,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"12969:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2872,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"13013:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2873,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"13021:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2871,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"12990:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2869,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:14","typeDescriptions":{}}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2876,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:14","typeDescriptions":{}}},"id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:14"},{"assignments":[2884],"declarations":[{"constant":false,"id":2884,"mutability":"mutable","name":"offset","nameLocation":"13133:6:14","nodeType":"VariableDeclaration","scope":2942,"src":"13125:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2890,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2885,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"13142:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"13142:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:14"},{"assignments":[2892],"declarations":[{"constant":false,"id":2892,"mutability":"mutable","name":"result","nameLocation":"13183:6:14","nodeType":"VariableDeclaration","scope":2942,"src":"13175:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2894,"initialValue":{"hexValue":"30","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:14"},{"body":{"id":2936,"nodeType":"Block","src":"13250:447:14","statements":[{"assignments":[2908],"declarations":[{"constant":false,"id":2908,"mutability":"mutable","name":"chr","nameLocation":"13270:3:14","nodeType":"VariableDeclaration","scope":2936,"src":"13264:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2907,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2918,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2913,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"13319:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2914,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"13327:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2912,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"13296:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2910,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:14","typeDescriptions":{}}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2909,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"13276:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2919,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"13349:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2926,"nodeType":"IfStatement","src":"13345:31:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2853,"id":2925,"nodeType":"Return","src":"13359:17:14"}},{"expression":{"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2927,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"13390:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2930,"nodeType":"ExpressionStatement","src":"13390:12:14"},{"id":2935,"nodeType":"UncheckedBlock","src":"13416:271:14","statements":[{"expression":{"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2931,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"13659:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2932,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"13669:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2934,"nodeType":"ExpressionStatement","src":"13659:13:14"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2901,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"13236:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2902,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"13240:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2937,"initializationExpression":{"assignments":[2896],"declarations":[{"constant":false,"id":2896,"mutability":"mutable","name":"i","nameLocation":"13216:1:14","nodeType":"VariableDeclaration","scope":2937,"src":"13208:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2900,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2897,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"13220:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2898,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"13228:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:14","subExpression":{"id":2904,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"13247:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2906,"nodeType":"ExpressionStatement","src":"13245:3:14"},"nodeType":"ForStatement","src":"13203:494:14"},{"expression":{"components":[{"hexValue":"74727565","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2939,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"13720:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2853,"id":2941,"nodeType":"Return","src":"13706:21:14"}]},"documentation":{"id":2841,"nodeType":"StructuredDocumentation","src":"12450:227:14","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2943,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:14","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2843,"mutability":"mutable","name":"input","nameLocation":"12746:5:14","nodeType":"VariableDeclaration","scope":2943,"src":"12732:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2842,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"begin","nameLocation":"12769:5:14","nodeType":"VariableDeclaration","scope":2943,"src":"12761:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2847,"mutability":"mutable","name":"end","nameLocation":"12792:3:14","nodeType":"VariableDeclaration","scope":2943,"src":"12784:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:14"},"returnParameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"success","nameLocation":"12829:7:14","nodeType":"VariableDeclaration","scope":2943,"src":"12824:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2849,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2852,"mutability":"mutable","name":"value","nameLocation":"12846:5:14","nodeType":"VariableDeclaration","scope":2943,"src":"12838:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:14"},"scope":3357,"src":"12682:1052:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2961,"nodeType":"Block","src":"14032:67:14","statements":[{"expression":{"arguments":[{"id":2952,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"14062:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2956,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"14078:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2954,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:14","typeDescriptions":{}}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:14","memberName":"length","nodeType":"MemberAccess","src":"14072:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2951,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2962,2993],"referencedDeclaration":2993,"src":"14049:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2950,"id":2960,"nodeType":"Return","src":"14042:50:14"}]},"documentation":{"id":2944,"nodeType":"StructuredDocumentation","src":"13740:212:14","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2962,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:14","nodeType":"FunctionDefinition","parameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"input","nameLocation":"13993:5:14","nodeType":"VariableDeclaration","scope":2962,"src":"13979:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2945,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:14"},"returnParameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2962,"src":"14023:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2948,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:14"},"scope":3357,"src":"13957:142:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2992,"nodeType":"Block","src":"14472:165:14","statements":[{"assignments":[2975,2977],"declarations":[{"constant":false,"id":2975,"mutability":"mutable","name":"success","nameLocation":"14488:7:14","nodeType":"VariableDeclaration","scope":2992,"src":"14483:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2974,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2977,"mutability":"mutable","name":"value","nameLocation":"14505:5:14","nodeType":"VariableDeclaration","scope":2992,"src":"14497:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2976,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2983,"initialValue":{"arguments":[{"id":2979,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"14530:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2980,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"14537:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2981,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"14544:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2978,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3014,3118],"referencedDeclaration":3118,"src":"14514:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:14"},{"condition":{"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:14","subExpression":{"id":2984,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"14563:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2989,"nodeType":"IfStatement","src":"14558:50:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2986,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"14579:27:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2988,"nodeType":"RevertStatement","src":"14572:36:14"}},{"expression":{"id":2990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"14625:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2973,"id":2991,"nodeType":"Return","src":"14618:12:14"}]},"documentation":{"id":2963,"nodeType":"StructuredDocumentation","src":"14105:259:14","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2993,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:14","nodeType":"FunctionDefinition","parameters":{"id":2970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"input","nameLocation":"14405:5:14","nodeType":"VariableDeclaration","scope":2993,"src":"14391:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2964,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2967,"mutability":"mutable","name":"begin","nameLocation":"14420:5:14","nodeType":"VariableDeclaration","scope":2993,"src":"14412:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2969,"mutability":"mutable","name":"end","nameLocation":"14435:3:14","nodeType":"VariableDeclaration","scope":2993,"src":"14427:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2968,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:14"},"returnParameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2993,"src":"14463:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2971,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:14"},"scope":3357,"src":"14369:268:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3013,"nodeType":"Block","src":"14944:70:14","statements":[{"expression":{"arguments":[{"id":3004,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"14977:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3008,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"14993:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3006,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:14","typeDescriptions":{}}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:14","memberName":"length","nodeType":"MemberAccess","src":"14987:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3003,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3014,3118],"referencedDeclaration":3118,"src":"14961:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3002,"id":3012,"nodeType":"Return","src":"14954:53:14"}]},"documentation":{"id":2994,"nodeType":"StructuredDocumentation","src":"14643:198:14","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3014,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:14","nodeType":"FunctionDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"input","nameLocation":"14885:5:14","nodeType":"VariableDeclaration","scope":3014,"src":"14871:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2995,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:14"},"returnParameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"success","nameLocation":"14920:7:14","nodeType":"VariableDeclaration","scope":3014,"src":"14915:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2998,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"value","nameLocation":"14937:5:14","nodeType":"VariableDeclaration","scope":3014,"src":"14929:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3000,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:14"},"scope":3357,"src":"14846:168:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3117,"nodeType":"Block","src":"15407:733:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3028,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"15421:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3031,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"15433:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3029,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:14","typeDescriptions":{}}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:14","memberName":"length","nodeType":"MemberAccess","src":"15427:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3035,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"15450:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3036,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"15458:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3046,"nodeType":"IfStatement","src":"15417:72:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3040,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:14","typeDescriptions":{}}},"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3044,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3027,"id":3045,"nodeType":"Return","src":"15463:26:14"}},{"assignments":[3048],"declarations":[{"constant":false,"id":3048,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:14","nodeType":"VariableDeclaration","scope":3117,"src":"15500:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3047,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3071,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3049,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"15518:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3050,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"15524:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3060,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"15574:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3058,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:14","typeDescriptions":{}}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3062,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"15582:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3057,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"15545:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3055,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:14","typeDescriptions":{}}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3065,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:14","typeDescriptions":{}}},"id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:14"},{"assignments":[3073],"declarations":[{"constant":false,"id":3073,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:14","nodeType":"VariableDeclaration","scope":3117,"src":"15686:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3081,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:14","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3075,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"15716:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"15716:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3082,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"15803:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3083,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"15809:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3085,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"15818:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3115,"nodeType":"Block","src":"16083:51:14","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:14","typeDescriptions":{}}},"id":3112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3027,"id":3114,"nodeType":"Return","src":"16097:26:14"}]},"id":3116,"nodeType":"IfStatement","src":"15799:335:14","trueBody":{"id":3107,"nodeType":"Block","src":"15834:243:14","statements":[{"assignments":[3088,3090],"declarations":[{"constant":false,"id":3088,"mutability":"mutable","name":"s","nameLocation":"15955:1:14","nodeType":"VariableDeclaration","scope":3107,"src":"15950:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3087,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3090,"mutability":"mutable","name":"v","nameLocation":"15966:1:14","nodeType":"VariableDeclaration","scope":3107,"src":"15958:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3096,"initialValue":{"arguments":[{"id":3092,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"16003:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3093,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"16010:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3094,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"16017:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3091,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"15971:31:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:14"},{"expression":{"components":[{"id":3097,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"16043:1:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3102,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"16062:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3100,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:14","typeDescriptions":{}}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3098,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:14","typeDescriptions":{}}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3027,"id":3106,"nodeType":"Return","src":"16035:31:14"}]}}]},"documentation":{"id":3015,"nodeType":"StructuredDocumentation","src":"15020:226:14","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3118,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:14","nodeType":"FunctionDefinition","parameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"input","nameLocation":"15299:5:14","nodeType":"VariableDeclaration","scope":3118,"src":"15285:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3016,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"begin","nameLocation":"15322:5:14","nodeType":"VariableDeclaration","scope":3118,"src":"15314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"end","nameLocation":"15345:3:14","nodeType":"VariableDeclaration","scope":3118,"src":"15337:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:14"},"returnParameters":{"id":3027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3024,"mutability":"mutable","name":"success","nameLocation":"15383:7:14","nodeType":"VariableDeclaration","scope":3118,"src":"15378:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3023,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3026,"mutability":"mutable","name":"value","nameLocation":"15400:5:14","nodeType":"VariableDeclaration","scope":3118,"src":"15392:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3025,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:14"},"scope":3357,"src":"15251:889:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3177,"nodeType":"Block","src":"16209:461:14","statements":[{"assignments":[3126],"declarations":[{"constant":false,"id":3126,"mutability":"mutable","name":"value","nameLocation":"16225:5:14","nodeType":"VariableDeclaration","scope":3177,"src":"16219:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3125,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3131,"initialValue":{"arguments":[{"id":3129,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"16239:3:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3127,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:14","typeDescriptions":{}}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:14"},{"id":3174,"nodeType":"UncheckedBlock","src":"16403:238:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"16431:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:14","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"16445:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:14","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"16491:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"16505:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:14","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"16552:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"16566:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:14","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3166,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3165,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:14","memberName":"max","nodeType":"MemberAccess","src":"16615:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3124,"id":3170,"nodeType":"Return","src":"16608:22:14"},"id":3171,"nodeType":"IfStatement","src":"16548:82:14","trueBody":{"expression":{"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"16578:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:14","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3164,"nodeType":"ExpressionStatement","src":"16578:11:14"}},"id":3172,"nodeType":"IfStatement","src":"16487:143:14","trueBody":{"expression":{"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"16518:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:14","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3153,"nodeType":"ExpressionStatement","src":"16518:11:14"}},"id":3173,"nodeType":"IfStatement","src":"16427:203:14","trueBody":{"expression":{"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"16457:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:14","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3142,"nodeType":"ExpressionStatement","src":"16457:11:14"}}]},{"expression":{"id":3175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"16658:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3124,"id":3176,"nodeType":"Return","src":"16651:12:14"}]},"id":3178,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:14","nodeType":"FunctionDefinition","parameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"chr","nameLocation":"16175:3:14","nodeType":"VariableDeclaration","scope":3178,"src":"16168:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3119,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:14"},"returnParameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3178,"src":"16202:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3122,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:14"},"scope":3357,"src":"16146:524:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3343,"nodeType":"Block","src":"17336:1331:14","statements":[{"assignments":[3187],"declarations":[{"constant":false,"id":3187,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:14","nodeType":"VariableDeclaration","scope":3343,"src":"17346:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3186,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3192,"initialValue":{"arguments":[{"id":3190,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"17374:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3188,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:14","typeDescriptions":{}}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:14"},{"assignments":[3194],"declarations":[{"constant":false,"id":3194,"mutability":"mutable","name":"output","nameLocation":"17403:6:14","nodeType":"VariableDeclaration","scope":3343,"src":"17390:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3193,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3202,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3198,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"17426:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:14","memberName":"length","nodeType":"MemberAccess","src":"17426:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3195,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:14"},{"assignments":[3204],"declarations":[{"constant":false,"id":3204,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:14","nodeType":"VariableDeclaration","scope":3343,"src":"17473:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3203,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3206,"initialValue":{"hexValue":"30","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:14"},{"body":{"id":3335,"nodeType":"Block","src":"17548:854:14","statements":[{"assignments":[3218],"declarations":[{"constant":false,"id":3218,"mutability":"mutable","name":"char","nameLocation":"17569:4:14","nodeType":"VariableDeclaration","scope":3335,"src":"17562:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3217,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3226,"initialValue":{"arguments":[{"arguments":[{"id":3222,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"17606:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3223,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"17614:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3221,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"17583:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3219,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:14","typeDescriptions":{}}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:14"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"17637:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3231,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"17672:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3229,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:14","typeDescriptions":{}}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3333,"nodeType":"Block","src":"18330:62:14","statements":[{"expression":{"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3326,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"18348:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3329,"indexExpression":{"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:14","subExpression":{"id":3327,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"18355:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3330,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"18373:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3332,"nodeType":"ExpressionStatement","src":"18348:29:14"}]},"id":3334,"nodeType":"IfStatement","src":"17631:761:14","trueBody":{"id":3325,"nodeType":"Block","src":"17687:637:14","statements":[{"expression":{"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3240,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"17705:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3243,"indexExpression":{"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:14","subExpression":{"id":3241,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"17712:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3246,"nodeType":"ExpressionStatement","src":"17705:29:14"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3247,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"17756:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3257,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"17825:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:14","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3267,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"17894:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3277,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"17963:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:14","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3287,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"18032:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:14","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3297,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"18101:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:14","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3307,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"18171:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3318,"nodeType":"IfStatement","src":"18167:143:14","trueBody":{"id":3317,"nodeType":"Block","src":"18185:125:14","statements":[{"expression":{"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3310,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"18263:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3313,"indexExpression":{"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:14","subExpression":{"id":3311,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"18270:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3316,"nodeType":"ExpressionStatement","src":"18263:28:14"}]}},"id":3319,"nodeType":"IfStatement","src":"18097:213:14","trueBody":{"expression":{"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3300,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"18115:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3303,"indexExpression":{"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:14","subExpression":{"id":3301,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"18122:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3306,"nodeType":"ExpressionStatement","src":"18115:29:14"}},"id":3320,"nodeType":"IfStatement","src":"18028:282:14","trueBody":{"expression":{"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3290,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"18046:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3293,"indexExpression":{"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:14","subExpression":{"id":3291,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"18053:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3296,"nodeType":"ExpressionStatement","src":"18046:28:14"}},"id":3321,"nodeType":"IfStatement","src":"17959:351:14","trueBody":{"expression":{"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3280,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"17977:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3283,"indexExpression":{"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:14","subExpression":{"id":3281,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"17984:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3286,"nodeType":"ExpressionStatement","src":"17977:28:14"}},"id":3322,"nodeType":"IfStatement","src":"17890:420:14","trueBody":{"expression":{"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3270,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"17908:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3273,"indexExpression":{"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:14","subExpression":{"id":3271,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"17915:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3276,"nodeType":"ExpressionStatement","src":"17908:28:14"}},"id":3323,"nodeType":"IfStatement","src":"17821:489:14","trueBody":{"expression":{"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3260,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"17839:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3263,"indexExpression":{"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:14","subExpression":{"id":3261,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"17846:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3266,"nodeType":"ExpressionStatement","src":"17839:28:14"}},"id":3324,"nodeType":"IfStatement","src":"17752:558:14","trueBody":{"expression":{"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3250,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"17770:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3253,"indexExpression":{"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:14","subExpression":{"id":3251,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"17777:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3256,"nodeType":"ExpressionStatement","src":"17770:28:14"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"17524:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3211,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"17528:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:14","memberName":"length","nodeType":"MemberAccess","src":"17528:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3336,"initializationExpression":{"assignments":[3208],"declarations":[{"constant":false,"id":3208,"mutability":"mutable","name":"i","nameLocation":"17521:1:14","nodeType":"VariableDeclaration","scope":3336,"src":"17513:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3207,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3209,"nodeType":"VariableDeclarationStatement","src":"17513:9:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:14","subExpression":{"id":3214,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"17545:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3216,"nodeType":"ExpressionStatement","src":"17543:3:14"},"nodeType":"ForStatement","src":"17508:894:14"},{"AST":{"nativeSrc":"18500:129:14","nodeType":"YulBlock","src":"18500:129:14","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:14","nodeType":"YulIdentifier","src":"18521:6:14"},{"name":"outputLength","nativeSrc":"18529:12:14","nodeType":"YulIdentifier","src":"18529:12:14"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:14","nodeType":"YulIdentifier","src":"18514:6:14"},"nativeSrc":"18514:28:14","nodeType":"YulFunctionCall","src":"18514:28:14"},"nativeSrc":"18514:28:14","nodeType":"YulExpressionStatement","src":"18514:28:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:14","nodeType":"YulLiteral","src":"18562:4:14","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:14","nodeType":"YulIdentifier","src":"18572:6:14"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:14","nodeType":"YulLiteral","src":"18584:1:14","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:14","nodeType":"YulLiteral","src":"18591:1:14","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:14","nodeType":"YulIdentifier","src":"18598:12:14"},{"kind":"number","nativeSrc":"18612:2:14","nodeType":"YulLiteral","src":"18612:2:14","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:14","nodeType":"YulIdentifier","src":"18594:3:14"},"nativeSrc":"18594:21:14","nodeType":"YulFunctionCall","src":"18594:21:14"}],"functionName":{"name":"shr","nativeSrc":"18587:3:14","nodeType":"YulIdentifier","src":"18587:3:14"},"nativeSrc":"18587:29:14","nodeType":"YulFunctionCall","src":"18587:29:14"}],"functionName":{"name":"shl","nativeSrc":"18580:3:14","nodeType":"YulIdentifier","src":"18580:3:14"},"nativeSrc":"18580:37:14","nodeType":"YulFunctionCall","src":"18580:37:14"}],"functionName":{"name":"add","nativeSrc":"18568:3:14","nodeType":"YulIdentifier","src":"18568:3:14"},"nativeSrc":"18568:50:14","nodeType":"YulFunctionCall","src":"18568:50:14"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:14","nodeType":"YulIdentifier","src":"18555:6:14"},"nativeSrc":"18555:64:14","nodeType":"YulFunctionCall","src":"18555:64:14"},"nativeSrc":"18555:64:14","nodeType":"YulExpressionStatement","src":"18555:64:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":3194,"isOffset":false,"isSlot":false,"src":"18521:6:14","valueSize":1},{"declaration":3194,"isOffset":false,"isSlot":false,"src":"18572:6:14","valueSize":1},{"declaration":3204,"isOffset":false,"isSlot":false,"src":"18529:12:14","valueSize":1},{"declaration":3204,"isOffset":false,"isSlot":false,"src":"18598:12:14","valueSize":1}],"flags":["memory-safe"],"id":3337,"nodeType":"InlineAssembly","src":"18475:154:14"},{"expression":{"arguments":[{"id":3340,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"18653:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3338,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:14","typeDescriptions":{}}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3185,"id":3342,"nodeType":"Return","src":"18639:21:14"}]},"documentation":{"id":3179,"nodeType":"StructuredDocumentation","src":"16676:576:14","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3344,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:14","nodeType":"FunctionDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"input","nameLocation":"17291:5:14","nodeType":"VariableDeclaration","scope":3344,"src":"17277:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3180,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:14"},"returnParameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3344,"src":"17321:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3183,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:14"},"scope":3357,"src":"17257:1410:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3355,"nodeType":"Block","src":"19052:225:14","statements":[{"AST":{"nativeSrc":"19201:70:14","nodeType":"YulBlock","src":"19201:70:14","statements":[{"nativeSrc":"19215:46:14","nodeType":"YulAssignment","src":"19215:46:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:14","nodeType":"YulIdentifier","src":"19238:6:14"},{"kind":"number","nativeSrc":"19246:4:14","nodeType":"YulLiteral","src":"19246:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:14","nodeType":"YulIdentifier","src":"19234:3:14"},"nativeSrc":"19234:17:14","nodeType":"YulFunctionCall","src":"19234:17:14"},{"name":"offset","nativeSrc":"19253:6:14","nodeType":"YulIdentifier","src":"19253:6:14"}],"functionName":{"name":"add","nativeSrc":"19230:3:14","nodeType":"YulIdentifier","src":"19230:3:14"},"nativeSrc":"19230:30:14","nodeType":"YulFunctionCall","src":"19230:30:14"}],"functionName":{"name":"mload","nativeSrc":"19224:5:14","nodeType":"YulIdentifier","src":"19224:5:14"},"nativeSrc":"19224:37:14","nodeType":"YulFunctionCall","src":"19224:37:14"},"variableNames":[{"name":"value","nativeSrc":"19215:5:14","nodeType":"YulIdentifier","src":"19215:5:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3347,"isOffset":false,"isSlot":false,"src":"19238:6:14","valueSize":1},{"declaration":3349,"isOffset":false,"isSlot":false,"src":"19253:6:14","valueSize":1},{"declaration":3352,"isOffset":false,"isSlot":false,"src":"19215:5:14","valueSize":1}],"flags":["memory-safe"],"id":3354,"nodeType":"InlineAssembly","src":"19176:95:14"}]},"documentation":{"id":3345,"nodeType":"StructuredDocumentation","src":"18673:268:14","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3356,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:14","nodeType":"FunctionDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3347,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:14","nodeType":"VariableDeclaration","scope":3356,"src":"18978:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3346,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3349,"mutability":"mutable","name":"offset","nameLocation":"19007:6:14","nodeType":"VariableDeclaration","scope":3356,"src":"18999:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:14"},"returnParameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"value","nameLocation":"19045:5:14","nodeType":"VariableDeclaration","scope":3356,"src":"19037:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:14"},"scope":3357,"src":"18946:331:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3358,"src":"297:18982:14","usedErrors":[2015,2018,2021],"usedEvents":[]}],"src":"101:19179:14"},"id":14},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3381],"IERC165":[3393]},"id":3382,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3359,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3361,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3382,"sourceUnit":3394,"src":"140:38:15","symbolAliases":[{"foreign":{"id":3360,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"148:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3363,"name":"IERC165","nameLocations":["688:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3393,"src":"688:7:15"},"id":3364,"nodeType":"InheritanceSpecifier","src":"688:7:15"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3362,"nodeType":"StructuredDocumentation","src":"180:479:15","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3381,"linearizedBaseContracts":[3381,3393],"name":"ERC165","nameLocation":"678:6:15","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3392],"body":{"id":3379,"nodeType":"Block","src":"812:64:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3372,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"829:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3374,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"849:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3393_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3393_$","typeString":"type(contract IERC165)"}],"id":3373,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3393","typeString":"type(contract IERC165)"}},"id":3376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:15","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3371,"id":3378,"nodeType":"Return","src":"822:47:15"}]},"documentation":{"id":3365,"nodeType":"StructuredDocumentation","src":"702:23:15","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":3380,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:15","nodeType":"FunctionDefinition","parameters":{"id":3368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3367,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:15","nodeType":"VariableDeclaration","scope":3380,"src":"757:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3366,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:15"},"returnParameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3380,"src":"806:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3369,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:15"},"scope":3381,"src":"730:146:15","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3382,"src":"660:218:15","usedErrors":[],"usedEvents":[]}],"src":"114:765:15"},"id":15},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3393]},"id":3394,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3383,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3384,"nodeType":"StructuredDocumentation","src":"142:280:16","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3393,"linearizedBaseContracts":[3393],"name":"IERC165","nameLocation":"433:7:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3385,"nodeType":"StructuredDocumentation","src":"447:340:16","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3392,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:16","nodeType":"FunctionDefinition","parameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:16","nodeType":"VariableDeclaration","scope":3392,"src":"819:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3386,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:16"},"returnParameters":{"id":3391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3392,"src":"862:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3389,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:16"},"scope":3393,"src":"792:76:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3394,"src":"423:447:16","usedErrors":[],"usedEvents":[]}],"src":"115:756:16"},"id":16},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5014],"Panic":[1955],"SafeCast":[6779]},"id":5015,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3395,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3397,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5015,"sourceUnit":1956,"src":"129:35:17","symbolAliases":[{"foreign":{"id":3396,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"137:5:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5015,"sourceUnit":6780,"src":"165:40:17","symbolAliases":[{"foreign":{"id":3398,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"173:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3400,"nodeType":"StructuredDocumentation","src":"207:73:17","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5014,"linearizedBaseContracts":[5014],"name":"Math","nameLocation":"289:4:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3405,"members":[{"id":3401,"name":"Floor","nameLocation":"324:5:17","nodeType":"EnumValue","src":"324:5:17"},{"id":3402,"name":"Ceil","nameLocation":"367:4:17","nodeType":"EnumValue","src":"367:4:17"},{"id":3403,"name":"Trunc","nameLocation":"409:5:17","nodeType":"EnumValue","src":"409:5:17"},{"id":3404,"name":"Expand","nameLocation":"439:6:17","nodeType":"EnumValue","src":"439:6:17"}],"name":"Rounding","nameLocation":"305:8:17","nodeType":"EnumDefinition","src":"300:169:17"},{"body":{"id":3418,"nodeType":"Block","src":"731:112:17","statements":[{"AST":{"nativeSrc":"766:71:17","nodeType":"YulBlock","src":"766:71:17","statements":[{"nativeSrc":"780:16:17","nodeType":"YulAssignment","src":"780:16:17","value":{"arguments":[{"name":"a","nativeSrc":"791:1:17","nodeType":"YulIdentifier","src":"791:1:17"},{"name":"b","nativeSrc":"794:1:17","nodeType":"YulIdentifier","src":"794:1:17"}],"functionName":{"name":"add","nativeSrc":"787:3:17","nodeType":"YulIdentifier","src":"787:3:17"},"nativeSrc":"787:9:17","nodeType":"YulFunctionCall","src":"787:9:17"},"variableNames":[{"name":"low","nativeSrc":"780:3:17","nodeType":"YulIdentifier","src":"780:3:17"}]},{"nativeSrc":"809:18:17","nodeType":"YulAssignment","src":"809:18:17","value":{"arguments":[{"name":"low","nativeSrc":"820:3:17","nodeType":"YulIdentifier","src":"820:3:17"},{"name":"a","nativeSrc":"825:1:17","nodeType":"YulIdentifier","src":"825:1:17"}],"functionName":{"name":"lt","nativeSrc":"817:2:17","nodeType":"YulIdentifier","src":"817:2:17"},"nativeSrc":"817:10:17","nodeType":"YulFunctionCall","src":"817:10:17"},"variableNames":[{"name":"high","nativeSrc":"809:4:17","nodeType":"YulIdentifier","src":"809:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3408,"isOffset":false,"isSlot":false,"src":"791:1:17","valueSize":1},{"declaration":3408,"isOffset":false,"isSlot":false,"src":"825:1:17","valueSize":1},{"declaration":3410,"isOffset":false,"isSlot":false,"src":"794:1:17","valueSize":1},{"declaration":3413,"isOffset":false,"isSlot":false,"src":"809:4:17","valueSize":1},{"declaration":3415,"isOffset":false,"isSlot":false,"src":"780:3:17","valueSize":1},{"declaration":3415,"isOffset":false,"isSlot":false,"src":"820:3:17","valueSize":1}],"flags":["memory-safe"],"id":3417,"nodeType":"InlineAssembly","src":"741:96:17"}]},"documentation":{"id":3406,"nodeType":"StructuredDocumentation","src":"475:163:17","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3419,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:17","nodeType":"FunctionDefinition","parameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"a","nameLocation":"667:1:17","nodeType":"VariableDeclaration","scope":3419,"src":"659:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3407,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3410,"mutability":"mutable","name":"b","nameLocation":"678:1:17","nodeType":"VariableDeclaration","scope":3419,"src":"670:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3409,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:17"},"returnParameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"high","nameLocation":"712:4:17","nodeType":"VariableDeclaration","scope":3419,"src":"704:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3415,"mutability":"mutable","name":"low","nameLocation":"726:3:17","nodeType":"VariableDeclaration","scope":3419,"src":"718:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3414,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:17"},"scope":5014,"src":"643:200:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3432,"nodeType":"Block","src":"1115:462:17","statements":[{"AST":{"nativeSrc":"1437:134:17","nodeType":"YulBlock","src":"1437:134:17","statements":[{"nativeSrc":"1451:30:17","nodeType":"YulVariableDeclaration","src":"1451:30:17","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:17","nodeType":"YulIdentifier","src":"1468:1:17"},{"name":"b","nativeSrc":"1471:1:17","nodeType":"YulIdentifier","src":"1471:1:17"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:17","nodeType":"YulLiteral","src":"1478:1:17","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:17","nodeType":"YulIdentifier","src":"1474:3:17"},"nativeSrc":"1474:6:17","nodeType":"YulFunctionCall","src":"1474:6:17"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:17","nodeType":"YulIdentifier","src":"1461:6:17"},"nativeSrc":"1461:20:17","nodeType":"YulFunctionCall","src":"1461:20:17"},"variables":[{"name":"mm","nativeSrc":"1455:2:17","nodeType":"YulTypedName","src":"1455:2:17","type":""}]},{"nativeSrc":"1494:16:17","nodeType":"YulAssignment","src":"1494:16:17","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:17","nodeType":"YulIdentifier","src":"1505:1:17"},{"name":"b","nativeSrc":"1508:1:17","nodeType":"YulIdentifier","src":"1508:1:17"}],"functionName":{"name":"mul","nativeSrc":"1501:3:17","nodeType":"YulIdentifier","src":"1501:3:17"},"nativeSrc":"1501:9:17","nodeType":"YulFunctionCall","src":"1501:9:17"},"variableNames":[{"name":"low","nativeSrc":"1494:3:17","nodeType":"YulIdentifier","src":"1494:3:17"}]},{"nativeSrc":"1523:38:17","nodeType":"YulAssignment","src":"1523:38:17","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:17","nodeType":"YulIdentifier","src":"1539:2:17"},{"name":"low","nativeSrc":"1543:3:17","nodeType":"YulIdentifier","src":"1543:3:17"}],"functionName":{"name":"sub","nativeSrc":"1535:3:17","nodeType":"YulIdentifier","src":"1535:3:17"},"nativeSrc":"1535:12:17","nodeType":"YulFunctionCall","src":"1535:12:17"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:17","nodeType":"YulIdentifier","src":"1552:2:17"},{"name":"low","nativeSrc":"1556:3:17","nodeType":"YulIdentifier","src":"1556:3:17"}],"functionName":{"name":"lt","nativeSrc":"1549:2:17","nodeType":"YulIdentifier","src":"1549:2:17"},"nativeSrc":"1549:11:17","nodeType":"YulFunctionCall","src":"1549:11:17"}],"functionName":{"name":"sub","nativeSrc":"1531:3:17","nodeType":"YulIdentifier","src":"1531:3:17"},"nativeSrc":"1531:30:17","nodeType":"YulFunctionCall","src":"1531:30:17"},"variableNames":[{"name":"high","nativeSrc":"1523:4:17","nodeType":"YulIdentifier","src":"1523:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3422,"isOffset":false,"isSlot":false,"src":"1468:1:17","valueSize":1},{"declaration":3422,"isOffset":false,"isSlot":false,"src":"1505:1:17","valueSize":1},{"declaration":3424,"isOffset":false,"isSlot":false,"src":"1471:1:17","valueSize":1},{"declaration":3424,"isOffset":false,"isSlot":false,"src":"1508:1:17","valueSize":1},{"declaration":3427,"isOffset":false,"isSlot":false,"src":"1523:4:17","valueSize":1},{"declaration":3429,"isOffset":false,"isSlot":false,"src":"1494:3:17","valueSize":1},{"declaration":3429,"isOffset":false,"isSlot":false,"src":"1543:3:17","valueSize":1},{"declaration":3429,"isOffset":false,"isSlot":false,"src":"1556:3:17","valueSize":1}],"flags":["memory-safe"],"id":3431,"nodeType":"InlineAssembly","src":"1412:159:17"}]},"documentation":{"id":3420,"nodeType":"StructuredDocumentation","src":"849:173:17","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3433,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:17","nodeType":"FunctionDefinition","parameters":{"id":3425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"a","nameLocation":"1051:1:17","nodeType":"VariableDeclaration","scope":3433,"src":"1043:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3424,"mutability":"mutable","name":"b","nameLocation":"1062:1:17","nodeType":"VariableDeclaration","scope":3433,"src":"1054:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:17"},"returnParameters":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"high","nameLocation":"1096:4:17","nodeType":"VariableDeclaration","scope":3433,"src":"1088:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3426,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3429,"mutability":"mutable","name":"low","nameLocation":"1110:3:17","nodeType":"VariableDeclaration","scope":3433,"src":"1102:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:17"},"scope":5014,"src":"1027:550:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3467,"nodeType":"Block","src":"1784:149:17","statements":[{"id":3466,"nodeType":"UncheckedBlock","src":"1794:133:17","statements":[{"assignments":[3446],"declarations":[{"constant":false,"id":3446,"mutability":"mutable","name":"c","nameLocation":"1826:1:17","nodeType":"VariableDeclaration","scope":3466,"src":"1818:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3450,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3447,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"1830:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3448,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"1834:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:17"},{"expression":{"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3451,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"1849:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3452,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"1859:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3453,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"1864:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3456,"nodeType":"ExpressionStatement","src":"1849:16:17"},{"expression":{"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"1879:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3458,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"1888:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3461,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"1908:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3459,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"1892:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"1892:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3465,"nodeType":"ExpressionStatement","src":"1879:37:17"}]}]},"documentation":{"id":3434,"nodeType":"StructuredDocumentation","src":"1583:105:17","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3468,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:17","nodeType":"FunctionDefinition","parameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"mutability":"mutable","name":"a","nameLocation":"1717:1:17","nodeType":"VariableDeclaration","scope":3468,"src":"1709:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3438,"mutability":"mutable","name":"b","nameLocation":"1728:1:17","nodeType":"VariableDeclaration","scope":3468,"src":"1720:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:17"},"returnParameters":{"id":3444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3441,"mutability":"mutable","name":"success","nameLocation":"1759:7:17","nodeType":"VariableDeclaration","scope":3468,"src":"1754:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3440,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3443,"mutability":"mutable","name":"result","nameLocation":"1776:6:17","nodeType":"VariableDeclaration","scope":3468,"src":"1768:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3442,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:17"},"scope":5014,"src":"1693:240:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3502,"nodeType":"Block","src":"2143:149:17","statements":[{"id":3501,"nodeType":"UncheckedBlock","src":"2153:133:17","statements":[{"assignments":[3481],"declarations":[{"constant":false,"id":3481,"mutability":"mutable","name":"c","nameLocation":"2185:1:17","nodeType":"VariableDeclaration","scope":3501,"src":"2177:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3480,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3485,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3482,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"2189:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2193:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:17"},{"expression":{"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3486,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"2208:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3487,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"2218:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3488,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"2223:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3491,"nodeType":"ExpressionStatement","src":"2208:16:17"},{"expression":{"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3492,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"2238:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3493,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"2247:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3496,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"2267:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3494,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"2251:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"2251:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3500,"nodeType":"ExpressionStatement","src":"2238:37:17"}]}]},"documentation":{"id":3469,"nodeType":"StructuredDocumentation","src":"1939:108:17","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3503,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:17","nodeType":"FunctionDefinition","parameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"mutability":"mutable","name":"a","nameLocation":"2076:1:17","nodeType":"VariableDeclaration","scope":3503,"src":"2068:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3470,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3473,"mutability":"mutable","name":"b","nameLocation":"2087:1:17","nodeType":"VariableDeclaration","scope":3503,"src":"2079:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:17"},"returnParameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"success","nameLocation":"2118:7:17","nodeType":"VariableDeclaration","scope":3503,"src":"2113:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3475,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"result","nameLocation":"2135:6:17","nodeType":"VariableDeclaration","scope":3503,"src":"2127:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:17"},"scope":5014,"src":"2052:240:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3532,"nodeType":"Block","src":"2505:391:17","statements":[{"id":3531,"nodeType":"UncheckedBlock","src":"2515:375:17","statements":[{"assignments":[3516],"declarations":[{"constant":false,"id":3516,"mutability":"mutable","name":"c","nameLocation":"2547:1:17","nodeType":"VariableDeclaration","scope":3531,"src":"2539:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3520,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3517,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"2551:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3518,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"2555:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:17"},{"AST":{"nativeSrc":"2595:188:17","nodeType":"YulBlock","src":"2595:188:17","statements":[{"nativeSrc":"2727:42:17","nodeType":"YulAssignment","src":"2727:42:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:17","nodeType":"YulIdentifier","src":"2748:1:17"},{"name":"a","nativeSrc":"2751:1:17","nodeType":"YulIdentifier","src":"2751:1:17"}],"functionName":{"name":"div","nativeSrc":"2744:3:17","nodeType":"YulIdentifier","src":"2744:3:17"},"nativeSrc":"2744:9:17","nodeType":"YulFunctionCall","src":"2744:9:17"},{"name":"b","nativeSrc":"2755:1:17","nodeType":"YulIdentifier","src":"2755:1:17"}],"functionName":{"name":"eq","nativeSrc":"2741:2:17","nodeType":"YulIdentifier","src":"2741:2:17"},"nativeSrc":"2741:16:17","nodeType":"YulFunctionCall","src":"2741:16:17"},{"arguments":[{"name":"a","nativeSrc":"2766:1:17","nodeType":"YulIdentifier","src":"2766:1:17"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:17","nodeType":"YulIdentifier","src":"2759:6:17"},"nativeSrc":"2759:9:17","nodeType":"YulFunctionCall","src":"2759:9:17"}],"functionName":{"name":"or","nativeSrc":"2738:2:17","nodeType":"YulIdentifier","src":"2738:2:17"},"nativeSrc":"2738:31:17","nodeType":"YulFunctionCall","src":"2738:31:17"},"variableNames":[{"name":"success","nativeSrc":"2727:7:17","nodeType":"YulIdentifier","src":"2727:7:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3506,"isOffset":false,"isSlot":false,"src":"2751:1:17","valueSize":1},{"declaration":3506,"isOffset":false,"isSlot":false,"src":"2766:1:17","valueSize":1},{"declaration":3508,"isOffset":false,"isSlot":false,"src":"2755:1:17","valueSize":1},{"declaration":3516,"isOffset":false,"isSlot":false,"src":"2748:1:17","valueSize":1},{"declaration":3511,"isOffset":false,"isSlot":false,"src":"2727:7:17","valueSize":1}],"flags":["memory-safe"],"id":3521,"nodeType":"InlineAssembly","src":"2570:213:17"},{"expression":{"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"2842:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3523,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"2851:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3526,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"2871:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3524,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"2855:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"2855:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3530,"nodeType":"ExpressionStatement","src":"2842:37:17"}]}]},"documentation":{"id":3504,"nodeType":"StructuredDocumentation","src":"2298:111:17","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3533,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:17","nodeType":"FunctionDefinition","parameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"mutability":"mutable","name":"a","nameLocation":"2438:1:17","nodeType":"VariableDeclaration","scope":3533,"src":"2430:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3508,"mutability":"mutable","name":"b","nameLocation":"2449:1:17","nodeType":"VariableDeclaration","scope":3533,"src":"2441:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3507,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:17"},"returnParameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3511,"mutability":"mutable","name":"success","nameLocation":"2480:7:17","nodeType":"VariableDeclaration","scope":3533,"src":"2475:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3510,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3513,"mutability":"mutable","name":"result","nameLocation":"2497:6:17","nodeType":"VariableDeclaration","scope":3533,"src":"2489:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:17"},"scope":5014,"src":"2414:482:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3553,"nodeType":"Block","src":"3111:231:17","statements":[{"id":3552,"nodeType":"UncheckedBlock","src":"3121:215:17","statements":[{"expression":{"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3545,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"3145:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3546,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"3155:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3550,"nodeType":"ExpressionStatement","src":"3145:15:17"},{"AST":{"nativeSrc":"3199:127:17","nodeType":"YulBlock","src":"3199:127:17","statements":[{"nativeSrc":"3293:19:17","nodeType":"YulAssignment","src":"3293:19:17","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:17","nodeType":"YulIdentifier","src":"3307:1:17"},{"name":"b","nativeSrc":"3310:1:17","nodeType":"YulIdentifier","src":"3310:1:17"}],"functionName":{"name":"div","nativeSrc":"3303:3:17","nodeType":"YulIdentifier","src":"3303:3:17"},"nativeSrc":"3303:9:17","nodeType":"YulFunctionCall","src":"3303:9:17"},"variableNames":[{"name":"result","nativeSrc":"3293:6:17","nodeType":"YulIdentifier","src":"3293:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3536,"isOffset":false,"isSlot":false,"src":"3307:1:17","valueSize":1},{"declaration":3538,"isOffset":false,"isSlot":false,"src":"3310:1:17","valueSize":1},{"declaration":3543,"isOffset":false,"isSlot":false,"src":"3293:6:17","valueSize":1}],"flags":["memory-safe"],"id":3551,"nodeType":"InlineAssembly","src":"3174:152:17"}]}]},"documentation":{"id":3534,"nodeType":"StructuredDocumentation","src":"2902:113:17","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3554,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:17","nodeType":"FunctionDefinition","parameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3536,"mutability":"mutable","name":"a","nameLocation":"3044:1:17","nodeType":"VariableDeclaration","scope":3554,"src":"3036:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3535,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3538,"mutability":"mutable","name":"b","nameLocation":"3055:1:17","nodeType":"VariableDeclaration","scope":3554,"src":"3047:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:17"},"returnParameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"success","nameLocation":"3086:7:17","nodeType":"VariableDeclaration","scope":3554,"src":"3081:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3540,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3543,"mutability":"mutable","name":"result","nameLocation":"3103:6:17","nodeType":"VariableDeclaration","scope":3554,"src":"3095:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:17"},"scope":5014,"src":"3020:322:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3574,"nodeType":"Block","src":"3567:231:17","statements":[{"id":3573,"nodeType":"UncheckedBlock","src":"3577:215:17","statements":[{"expression":{"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3566,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"3601:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3567,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"3611:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3571,"nodeType":"ExpressionStatement","src":"3601:15:17"},{"AST":{"nativeSrc":"3655:127:17","nodeType":"YulBlock","src":"3655:127:17","statements":[{"nativeSrc":"3749:19:17","nodeType":"YulAssignment","src":"3749:19:17","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:17","nodeType":"YulIdentifier","src":"3763:1:17"},{"name":"b","nativeSrc":"3766:1:17","nodeType":"YulIdentifier","src":"3766:1:17"}],"functionName":{"name":"mod","nativeSrc":"3759:3:17","nodeType":"YulIdentifier","src":"3759:3:17"},"nativeSrc":"3759:9:17","nodeType":"YulFunctionCall","src":"3759:9:17"},"variableNames":[{"name":"result","nativeSrc":"3749:6:17","nodeType":"YulIdentifier","src":"3749:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3557,"isOffset":false,"isSlot":false,"src":"3763:1:17","valueSize":1},{"declaration":3559,"isOffset":false,"isSlot":false,"src":"3766:1:17","valueSize":1},{"declaration":3564,"isOffset":false,"isSlot":false,"src":"3749:6:17","valueSize":1}],"flags":["memory-safe"],"id":3572,"nodeType":"InlineAssembly","src":"3630:152:17"}]}]},"documentation":{"id":3555,"nodeType":"StructuredDocumentation","src":"3348:123:17","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3575,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:17","nodeType":"FunctionDefinition","parameters":{"id":3560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3557,"mutability":"mutable","name":"a","nameLocation":"3500:1:17","nodeType":"VariableDeclaration","scope":3575,"src":"3492:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3556,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3559,"mutability":"mutable","name":"b","nameLocation":"3511:1:17","nodeType":"VariableDeclaration","scope":3575,"src":"3503:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3558,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:17"},"returnParameters":{"id":3565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3562,"mutability":"mutable","name":"success","nameLocation":"3542:7:17","nodeType":"VariableDeclaration","scope":3575,"src":"3537:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3561,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3564,"mutability":"mutable","name":"result","nameLocation":"3559:6:17","nodeType":"VariableDeclaration","scope":3575,"src":"3551:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3563,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:17"},"scope":5014,"src":"3476:322:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3604,"nodeType":"Block","src":"3989:122:17","statements":[{"assignments":[3586,3588],"declarations":[{"constant":false,"id":3586,"mutability":"mutable","name":"success","nameLocation":"4005:7:17","nodeType":"VariableDeclaration","scope":3604,"src":"4000:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3585,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3588,"mutability":"mutable","name":"result","nameLocation":"4022:6:17","nodeType":"VariableDeclaration","scope":3604,"src":"4014:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3593,"initialValue":{"arguments":[{"id":3590,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"4039:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3591,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"4042:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3589,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"4032:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:17"},{"expression":{"arguments":[{"id":3595,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"4069:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"4078:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3597,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:17","memberName":"max","nodeType":"MemberAccess","src":"4086:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3594,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"4061:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3584,"id":3603,"nodeType":"Return","src":"4054:50:17"}]},"documentation":{"id":3576,"nodeType":"StructuredDocumentation","src":"3804:103:17","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3605,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:17","nodeType":"FunctionDefinition","parameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"mutability":"mutable","name":"a","nameLocation":"3943:1:17","nodeType":"VariableDeclaration","scope":3605,"src":"3935:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3580,"mutability":"mutable","name":"b","nameLocation":"3954:1:17","nodeType":"VariableDeclaration","scope":3605,"src":"3946:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:17"},"returnParameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3605,"src":"3980:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:17"},"scope":5014,"src":"3912:199:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3624,"nodeType":"Block","src":"4294:73:17","statements":[{"assignments":[null,3616],"declarations":[null,{"constant":false,"id":3616,"mutability":"mutable","name":"result","nameLocation":"4315:6:17","nodeType":"VariableDeclaration","scope":3624,"src":"4307:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3621,"initialValue":{"arguments":[{"id":3618,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"4332:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3619,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"4335:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3617,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"4325:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:17"},{"expression":{"id":3622,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"4354:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3614,"id":3623,"nodeType":"Return","src":"4347:13:17"}]},"documentation":{"id":3606,"nodeType":"StructuredDocumentation","src":"4117:95:17","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3625,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:17","nodeType":"FunctionDefinition","parameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"a","nameLocation":"4248:1:17","nodeType":"VariableDeclaration","scope":3625,"src":"4240:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"b","nameLocation":"4259:1:17","nodeType":"VariableDeclaration","scope":3625,"src":"4251:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:17"},"returnParameters":{"id":3614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3625,"src":"4285:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3612,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:17"},"scope":5014,"src":"4217:150:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3654,"nodeType":"Block","src":"4564:122:17","statements":[{"assignments":[3636,3638],"declarations":[{"constant":false,"id":3636,"mutability":"mutable","name":"success","nameLocation":"4580:7:17","nodeType":"VariableDeclaration","scope":3654,"src":"4575:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3635,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3638,"mutability":"mutable","name":"result","nameLocation":"4597:6:17","nodeType":"VariableDeclaration","scope":3654,"src":"4589:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3637,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3643,"initialValue":{"arguments":[{"id":3640,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"4614:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3641,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"4617:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3639,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"4607:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:17"},{"expression":{"arguments":[{"id":3645,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"4644:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"4653:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3648,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3647,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:17","memberName":"max","nodeType":"MemberAccess","src":"4661:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3644,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"4636:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3634,"id":3653,"nodeType":"Return","src":"4629:50:17"}]},"documentation":{"id":3626,"nodeType":"StructuredDocumentation","src":"4373:109:17","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3655,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:17","nodeType":"FunctionDefinition","parameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"a","nameLocation":"4518:1:17","nodeType":"VariableDeclaration","scope":3655,"src":"4510:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"b","nameLocation":"4529:1:17","nodeType":"VariableDeclaration","scope":3655,"src":"4521:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:17"},"returnParameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3655,"src":"4555:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:17"},"scope":5014,"src":"4487:199:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3681,"nodeType":"Block","src":"5158:207:17","statements":[{"id":3680,"nodeType":"UncheckedBlock","src":"5168:191:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3667,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"5306:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3668,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"5312:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3669,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"5316:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3674,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"5337:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3672,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"5321:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"5321:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3666,"id":3679,"nodeType":"Return","src":"5299:49:17"}]}]},"documentation":{"id":3656,"nodeType":"StructuredDocumentation","src":"4692:374:17","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3682,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:17","nodeType":"FunctionDefinition","parameters":{"id":3663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"condition","nameLocation":"5093:9:17","nodeType":"VariableDeclaration","scope":3682,"src":"5088:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3657,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3660,"mutability":"mutable","name":"a","nameLocation":"5112:1:17","nodeType":"VariableDeclaration","scope":3682,"src":"5104:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3662,"mutability":"mutable","name":"b","nameLocation":"5123:1:17","nodeType":"VariableDeclaration","scope":3682,"src":"5115:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:17"},"returnParameters":{"id":3666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3682,"src":"5149:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:17"},"scope":5014,"src":"5071:294:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3700,"nodeType":"Block","src":"5502:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3693,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"5527:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3694,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"5531:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3696,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"5534:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3697,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"5537:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3692,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"5519:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3691,"id":3699,"nodeType":"Return","src":"5512:27:17"}]},"documentation":{"id":3683,"nodeType":"StructuredDocumentation","src":"5371:59:17","text":" @dev Returns the largest of two numbers."},"id":3701,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:17","nodeType":"FunctionDefinition","parameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3685,"mutability":"mutable","name":"a","nameLocation":"5456:1:17","nodeType":"VariableDeclaration","scope":3701,"src":"5448:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3687,"mutability":"mutable","name":"b","nameLocation":"5467:1:17","nodeType":"VariableDeclaration","scope":3701,"src":"5459:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:17"},"returnParameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3701,"src":"5493:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3689,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:17"},"scope":5014,"src":"5435:111:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3719,"nodeType":"Block","src":"5684:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3712,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5709:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3713,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"5713:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3715,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5716:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3716,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"5719:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3711,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"5701:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3710,"id":3718,"nodeType":"Return","src":"5694:27:17"}]},"documentation":{"id":3702,"nodeType":"StructuredDocumentation","src":"5552:60:17","text":" @dev Returns the smallest of two numbers."},"id":3720,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:17","nodeType":"FunctionDefinition","parameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"a","nameLocation":"5638:1:17","nodeType":"VariableDeclaration","scope":3720,"src":"5630:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"b","nameLocation":"5649:1:17","nodeType":"VariableDeclaration","scope":3720,"src":"5641:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:17"},"returnParameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3720,"src":"5675:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:17"},"scope":5014,"src":"5617:111:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3742,"nodeType":"Block","src":"5912:82:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3730,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"5967:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3731,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"5971:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3734,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"5977:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3735,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"5981:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3729,"id":3741,"nodeType":"Return","src":"5959:28:17"}]},"documentation":{"id":3721,"nodeType":"StructuredDocumentation","src":"5734:102:17","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3743,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:17","nodeType":"FunctionDefinition","parameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"mutability":"mutable","name":"a","nameLocation":"5866:1:17","nodeType":"VariableDeclaration","scope":3743,"src":"5858:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3722,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3725,"mutability":"mutable","name":"b","nameLocation":"5877:1:17","nodeType":"VariableDeclaration","scope":3743,"src":"5869:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:17"},"returnParameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3743,"src":"5903:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:17"},"scope":5014,"src":"5841:153:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3783,"nodeType":"Block","src":"6286:633:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3753,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"6300:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3764,"nodeType":"IfStatement","src":"6296:150:17","trueBody":{"id":3763,"nodeType":"Block","src":"6308:138:17","statements":[{"expression":{"arguments":[{"expression":{"id":3759,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"6412:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1955_$","typeString":"type(library Panic)"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1922,"src":"6412:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3756,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"6400:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1955_$","typeString":"type(library Panic)"}},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1954,"src":"6400:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3762,"nodeType":"ExpressionStatement","src":"6400:35:17"}]}},{"id":3782,"nodeType":"UncheckedBlock","src":"6829:84:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3767,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"6876:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3765,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"6860:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"6860:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3771,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"6887:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3775,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"6896:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3752,"id":3781,"nodeType":"Return","src":"6853:49:17"}]}]},"documentation":{"id":3744,"nodeType":"StructuredDocumentation","src":"6000:210:17","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3784,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:17","nodeType":"FunctionDefinition","parameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"a","nameLocation":"6240:1:17","nodeType":"VariableDeclaration","scope":3784,"src":"6232:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3745,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3748,"mutability":"mutable","name":"b","nameLocation":"6251:1:17","nodeType":"VariableDeclaration","scope":3784,"src":"6243:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:17"},"returnParameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3784,"src":"6277:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:17"},"scope":5014,"src":"6215:704:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3919,"nodeType":"Block","src":"7340:3585:17","statements":[{"id":3918,"nodeType":"UncheckedBlock","src":"7350:3569:17","statements":[{"assignments":[3797,3799],"declarations":[{"constant":false,"id":3797,"mutability":"mutable","name":"high","nameLocation":"7383:4:17","nodeType":"VariableDeclaration","scope":3918,"src":"7375:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3799,"mutability":"mutable","name":"low","nameLocation":"7397:3:17","nodeType":"VariableDeclaration","scope":3918,"src":"7389:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3804,"initialValue":{"arguments":[{"id":3801,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"7411:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3802,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"7414:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3800,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"7404:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3805,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"7498:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3813,"nodeType":"IfStatement","src":"7494:365:17","trueBody":{"id":3812,"nodeType":"Block","src":"7509:350:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3808,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"7827:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3809,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"7833:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3795,"id":3811,"nodeType":"Return","src":"7820:24:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3814,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"7969:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3815,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"7984:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3832,"nodeType":"IfStatement","src":"7965:142:17","trueBody":{"id":3831,"nodeType":"Block","src":"7990:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3821,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"8028:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3824,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"8046:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1955_$","typeString":"type(library Panic)"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1922,"src":"8046:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3826,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"8070:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1955_$","typeString":"type(library Panic)"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:17","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1918,"src":"8070:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3820,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"8020:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3817,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"8008:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1955_$","typeString":"type(library Panic)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1954,"src":"8008:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3830,"nodeType":"ExpressionStatement","src":"8008:84:17"}]}},{"assignments":[3834],"declarations":[{"constant":false,"id":3834,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:17","nodeType":"VariableDeclaration","scope":3918,"src":"8359:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3835,"nodeType":"VariableDeclarationStatement","src":"8359:17:17"},{"AST":{"nativeSrc":"8415:283:17","nodeType":"YulBlock","src":"8415:283:17","statements":[{"nativeSrc":"8484:38:17","nodeType":"YulAssignment","src":"8484:38:17","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:17","nodeType":"YulIdentifier","src":"8504:1:17"},{"name":"y","nativeSrc":"8507:1:17","nodeType":"YulIdentifier","src":"8507:1:17"},{"name":"denominator","nativeSrc":"8510:11:17","nodeType":"YulIdentifier","src":"8510:11:17"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:17","nodeType":"YulIdentifier","src":"8497:6:17"},"nativeSrc":"8497:25:17","nodeType":"YulFunctionCall","src":"8497:25:17"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:17","nodeType":"YulIdentifier","src":"8484:9:17"}]},{"nativeSrc":"8604:37:17","nodeType":"YulAssignment","src":"8604:37:17","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:17","nodeType":"YulIdentifier","src":"8616:4:17"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:17","nodeType":"YulIdentifier","src":"8625:9:17"},{"name":"low","nativeSrc":"8636:3:17","nodeType":"YulIdentifier","src":"8636:3:17"}],"functionName":{"name":"gt","nativeSrc":"8622:2:17","nodeType":"YulIdentifier","src":"8622:2:17"},"nativeSrc":"8622:18:17","nodeType":"YulFunctionCall","src":"8622:18:17"}],"functionName":{"name":"sub","nativeSrc":"8612:3:17","nodeType":"YulIdentifier","src":"8612:3:17"},"nativeSrc":"8612:29:17","nodeType":"YulFunctionCall","src":"8612:29:17"},"variableNames":[{"name":"high","nativeSrc":"8604:4:17","nodeType":"YulIdentifier","src":"8604:4:17"}]},{"nativeSrc":"8658:26:17","nodeType":"YulAssignment","src":"8658:26:17","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:17","nodeType":"YulIdentifier","src":"8669:3:17"},{"name":"remainder","nativeSrc":"8674:9:17","nodeType":"YulIdentifier","src":"8674:9:17"}],"functionName":{"name":"sub","nativeSrc":"8665:3:17","nodeType":"YulIdentifier","src":"8665:3:17"},"nativeSrc":"8665:19:17","nodeType":"YulFunctionCall","src":"8665:19:17"},"variableNames":[{"name":"low","nativeSrc":"8658:3:17","nodeType":"YulIdentifier","src":"8658:3:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3791,"isOffset":false,"isSlot":false,"src":"8510:11:17","valueSize":1},{"declaration":3797,"isOffset":false,"isSlot":false,"src":"8604:4:17","valueSize":1},{"declaration":3797,"isOffset":false,"isSlot":false,"src":"8616:4:17","valueSize":1},{"declaration":3799,"isOffset":false,"isSlot":false,"src":"8636:3:17","valueSize":1},{"declaration":3799,"isOffset":false,"isSlot":false,"src":"8658:3:17","valueSize":1},{"declaration":3799,"isOffset":false,"isSlot":false,"src":"8669:3:17","valueSize":1},{"declaration":3834,"isOffset":false,"isSlot":false,"src":"8484:9:17","valueSize":1},{"declaration":3834,"isOffset":false,"isSlot":false,"src":"8625:9:17","valueSize":1},{"declaration":3834,"isOffset":false,"isSlot":false,"src":"8674:9:17","valueSize":1},{"declaration":3787,"isOffset":false,"isSlot":false,"src":"8504:1:17","valueSize":1},{"declaration":3789,"isOffset":false,"isSlot":false,"src":"8507:1:17","valueSize":1}],"flags":["memory-safe"],"id":3836,"nodeType":"InlineAssembly","src":"8390:308:17"},{"assignments":[3838],"declarations":[{"constant":false,"id":3838,"mutability":"mutable","name":"twos","nameLocation":"8910:4:17","nodeType":"VariableDeclaration","scope":3918,"src":"8902:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3845,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3839,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"8917:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3841,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"8936:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3843,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:17"},{"AST":{"nativeSrc":"8987:359:17","nodeType":"YulBlock","src":"8987:359:17","statements":[{"nativeSrc":"9052:37:17","nodeType":"YulAssignment","src":"9052:37:17","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:17","nodeType":"YulIdentifier","src":"9071:11:17"},{"name":"twos","nativeSrc":"9084:4:17","nodeType":"YulIdentifier","src":"9084:4:17"}],"functionName":{"name":"div","nativeSrc":"9067:3:17","nodeType":"YulIdentifier","src":"9067:3:17"},"nativeSrc":"9067:22:17","nodeType":"YulFunctionCall","src":"9067:22:17"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:17","nodeType":"YulIdentifier","src":"9052:11:17"}]},{"nativeSrc":"9153:21:17","nodeType":"YulAssignment","src":"9153:21:17","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:17","nodeType":"YulIdentifier","src":"9164:3:17"},{"name":"twos","nativeSrc":"9169:4:17","nodeType":"YulIdentifier","src":"9169:4:17"}],"functionName":{"name":"div","nativeSrc":"9160:3:17","nodeType":"YulIdentifier","src":"9160:3:17"},"nativeSrc":"9160:14:17","nodeType":"YulFunctionCall","src":"9160:14:17"},"variableNames":[{"name":"low","nativeSrc":"9153:3:17","nodeType":"YulIdentifier","src":"9153:3:17"}]},{"nativeSrc":"9293:39:17","nodeType":"YulAssignment","src":"9293:39:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:17","nodeType":"YulLiteral","src":"9313:1:17","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:17","nodeType":"YulIdentifier","src":"9316:4:17"}],"functionName":{"name":"sub","nativeSrc":"9309:3:17","nodeType":"YulIdentifier","src":"9309:3:17"},"nativeSrc":"9309:12:17","nodeType":"YulFunctionCall","src":"9309:12:17"},{"name":"twos","nativeSrc":"9323:4:17","nodeType":"YulIdentifier","src":"9323:4:17"}],"functionName":{"name":"div","nativeSrc":"9305:3:17","nodeType":"YulIdentifier","src":"9305:3:17"},"nativeSrc":"9305:23:17","nodeType":"YulFunctionCall","src":"9305:23:17"},{"kind":"number","nativeSrc":"9330:1:17","nodeType":"YulLiteral","src":"9330:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:17","nodeType":"YulIdentifier","src":"9301:3:17"},"nativeSrc":"9301:31:17","nodeType":"YulFunctionCall","src":"9301:31:17"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:17","nodeType":"YulIdentifier","src":"9293:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3791,"isOffset":false,"isSlot":false,"src":"9052:11:17","valueSize":1},{"declaration":3791,"isOffset":false,"isSlot":false,"src":"9071:11:17","valueSize":1},{"declaration":3799,"isOffset":false,"isSlot":false,"src":"9153:3:17","valueSize":1},{"declaration":3799,"isOffset":false,"isSlot":false,"src":"9164:3:17","valueSize":1},{"declaration":3838,"isOffset":false,"isSlot":false,"src":"9084:4:17","valueSize":1},{"declaration":3838,"isOffset":false,"isSlot":false,"src":"9169:4:17","valueSize":1},{"declaration":3838,"isOffset":false,"isSlot":false,"src":"9293:4:17","valueSize":1},{"declaration":3838,"isOffset":false,"isSlot":false,"src":"9316:4:17","valueSize":1},{"declaration":3838,"isOffset":false,"isSlot":false,"src":"9323:4:17","valueSize":1}],"flags":["memory-safe"],"id":3846,"nodeType":"InlineAssembly","src":"8962:384:17"},{"expression":{"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3847,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"9409:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3848,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"9416:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3849,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"9423:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3852,"nodeType":"ExpressionStatement","src":"9409:18:17"},{"assignments":[3854],"declarations":[{"constant":false,"id":3854,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:17","nodeType":"VariableDeclaration","scope":3918,"src":"9762:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3853,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3861,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3856,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"9785:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:17"},{"expression":{"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3862,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"10018:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3864,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"10033:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3865,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"10047:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3869,"nodeType":"ExpressionStatement","src":"10018:36:17"},{"expression":{"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3870,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"10088:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3872,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"10103:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3873,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"10117:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3877,"nodeType":"ExpressionStatement","src":"10088:36:17"},{"expression":{"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3878,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"10160:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3880,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"10175:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3881,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"10189:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3885,"nodeType":"ExpressionStatement","src":"10160:36:17"},{"expression":{"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3886,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"10231:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"10246:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3889,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"10260:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3893,"nodeType":"ExpressionStatement","src":"10231:36:17"},{"expression":{"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3894,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"10304:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3896,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"10319:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3897,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"10333:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3901,"nodeType":"ExpressionStatement","src":"10304:36:17"},{"expression":{"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3902,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"10378:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"10393:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3905,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"10407:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3909,"nodeType":"ExpressionStatement","src":"10378:36:17"},{"expression":{"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10859:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3911,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"10868:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3912,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"10874:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3915,"nodeType":"ExpressionStatement","src":"10859:22:17"},{"expression":{"id":3916,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10902:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3795,"id":3917,"nodeType":"Return","src":"10895:13:17"}]}]},"documentation":{"id":3785,"nodeType":"StructuredDocumentation","src":"6925:312:17","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3920,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:17","nodeType":"FunctionDefinition","parameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3787,"mutability":"mutable","name":"x","nameLocation":"7266:1:17","nodeType":"VariableDeclaration","scope":3920,"src":"7258:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3789,"mutability":"mutable","name":"y","nameLocation":"7277:1:17","nodeType":"VariableDeclaration","scope":3920,"src":"7269:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3788,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3791,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:17","nodeType":"VariableDeclaration","scope":3920,"src":"7280:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:17"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3794,"mutability":"mutable","name":"result","nameLocation":"7332:6:17","nodeType":"VariableDeclaration","scope":3920,"src":"7324:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:17"},"scope":5014,"src":"7242:3683:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3956,"nodeType":"Block","src":"11164:128:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3936,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"11188:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3937,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"11191:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3938,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"11194:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3935,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3920,3957],"referencedDeclaration":3920,"src":"11181:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3943,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"11242:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}],"id":3942,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"11225:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3405_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3946,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"11262:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3947,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"11265:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3948,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"11268:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3945,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3940,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"11209:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"11209:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3934,"id":3955,"nodeType":"Return","src":"11174:111:17"}]},"documentation":{"id":3921,"nodeType":"StructuredDocumentation","src":"10931:118:17","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3957,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:17","nodeType":"FunctionDefinition","parameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"x","nameLocation":"11078:1:17","nodeType":"VariableDeclaration","scope":3957,"src":"11070:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3925,"mutability":"mutable","name":"y","nameLocation":"11089:1:17","nodeType":"VariableDeclaration","scope":3957,"src":"11081:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3924,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3927,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:17","nodeType":"VariableDeclaration","scope":3957,"src":"11092:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3926,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3930,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:17","nodeType":"VariableDeclaration","scope":3957,"src":"11113:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"},"typeName":{"id":3929,"nodeType":"UserDefinedTypeName","pathNode":{"id":3928,"name":"Rounding","nameLocations":["11113:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3405,"src":"11113:8:17"},"referencedDeclaration":3405,"src":"11113:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:17"},"returnParameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3957,"src":"11155:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3932,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:17"},"scope":5014,"src":"11054:238:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4006,"nodeType":"Block","src":"11500:245:17","statements":[{"id":4005,"nodeType":"UncheckedBlock","src":"11510:229:17","statements":[{"assignments":[3970,3972],"declarations":[{"constant":false,"id":3970,"mutability":"mutable","name":"high","nameLocation":"11543:4:17","nodeType":"VariableDeclaration","scope":4005,"src":"11535:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3972,"mutability":"mutable","name":"low","nameLocation":"11557:3:17","nodeType":"VariableDeclaration","scope":4005,"src":"11549:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3971,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3977,"initialValue":{"arguments":[{"id":3974,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"11571:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3975,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"11574:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3973,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"11564:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3978,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"11594:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3980,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"11607:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3991,"nodeType":"IfStatement","src":"11590:86:17","trueBody":{"id":3990,"nodeType":"Block","src":"11610:66:17","statements":[{"expression":{"arguments":[{"expression":{"id":3986,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"11640:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1955_$","typeString":"type(library Panic)"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:17","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1918,"src":"11640:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3983,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"11628:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1955_$","typeString":"type(library Panic)"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1954,"src":"11628:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3989,"nodeType":"ExpressionStatement","src":"11628:33:17"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3992,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"11697:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3994,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"11712:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3999,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"11719:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4000,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"11726:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3968,"id":4004,"nodeType":"Return","src":"11689:39:17"}]}]},"documentation":{"id":3958,"nodeType":"StructuredDocumentation","src":"11298:111:17","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4007,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:17","nodeType":"FunctionDefinition","parameters":{"id":3965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"x","nameLocation":"11438:1:17","nodeType":"VariableDeclaration","scope":4007,"src":"11430:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3962,"mutability":"mutable","name":"y","nameLocation":"11449:1:17","nodeType":"VariableDeclaration","scope":4007,"src":"11441:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3961,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3964,"mutability":"mutable","name":"n","nameLocation":"11458:1:17","nodeType":"VariableDeclaration","scope":4007,"src":"11452:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3963,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:17"},"returnParameters":{"id":3968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3967,"mutability":"mutable","name":"result","nameLocation":"11492:6:17","nodeType":"VariableDeclaration","scope":4007,"src":"11484:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:17"},"scope":5014,"src":"11414:331:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4045,"nodeType":"Block","src":"11963:113:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4023,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"11987:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4024,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"11990:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4025,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"11993:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4022,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4007,4046],"referencedDeclaration":4007,"src":"11980:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4030,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"12031:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}],"id":4029,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"12014:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3405_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4033,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"12051:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4034,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"12054:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4036,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"12062:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4032,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4027,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"11998:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"11998:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4021,"id":4044,"nodeType":"Return","src":"11973:96:17"}]},"documentation":{"id":4008,"nodeType":"StructuredDocumentation","src":"11751:109:17","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4046,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:17","nodeType":"FunctionDefinition","parameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4010,"mutability":"mutable","name":"x","nameLocation":"11889:1:17","nodeType":"VariableDeclaration","scope":4046,"src":"11881:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4009,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4012,"mutability":"mutable","name":"y","nameLocation":"11900:1:17","nodeType":"VariableDeclaration","scope":4046,"src":"11892:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4011,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4014,"mutability":"mutable","name":"n","nameLocation":"11909:1:17","nodeType":"VariableDeclaration","scope":4046,"src":"11903:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4013,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4017,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:17","nodeType":"VariableDeclaration","scope":4046,"src":"11912:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"},"typeName":{"id":4016,"nodeType":"UserDefinedTypeName","pathNode":{"id":4015,"name":"Rounding","nameLocations":["11912:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3405,"src":"11912:8:17"},"referencedDeclaration":3405,"src":"11912:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:17"},"returnParameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4046,"src":"11954:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:17"},"scope":5014,"src":"11865:211:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4142,"nodeType":"Block","src":"12710:1849:17","statements":[{"id":4141,"nodeType":"UncheckedBlock","src":"12720:1833:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4056,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"12748:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4061,"nodeType":"IfStatement","src":"12744:20:17","trueBody":{"expression":{"hexValue":"30","id":4059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4055,"id":4060,"nodeType":"Return","src":"12756:8:17"}},{"assignments":[4063],"declarations":[{"constant":false,"id":4063,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:17","nodeType":"VariableDeclaration","scope":4141,"src":"13235:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4062,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4067,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4064,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"13255:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4065,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"13259:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:17"},{"assignments":[4069],"declarations":[{"constant":false,"id":4069,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:17","nodeType":"VariableDeclaration","scope":4141,"src":"13274:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4068,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4071,"initialValue":{"id":4070,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"13288:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:17"},{"assignments":[4073],"declarations":[{"constant":false,"id":4073,"mutability":"mutable","name":"x","nameLocation":"13432:1:17","nodeType":"VariableDeclaration","scope":4141,"src":"13425:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4072,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4075,"initialValue":{"hexValue":"30","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:17"},{"assignments":[4077],"declarations":[{"constant":false,"id":4077,"mutability":"mutable","name":"y","nameLocation":"13458:1:17","nodeType":"VariableDeclaration","scope":4141,"src":"13451:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4076,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4079,"initialValue":{"hexValue":"31","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:17"},{"body":{"id":4116,"nodeType":"Block","src":"13501:882:17","statements":[{"assignments":[4084],"declarations":[{"constant":false,"id":4084,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:17","nodeType":"VariableDeclaration","scope":4116,"src":"13519:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4083,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4088,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4085,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"13538:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4086,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"13544:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:17"},{"expression":{"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4089,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"13573:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4090,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"13578:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4091,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4092,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"13678:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4093,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"13923:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4094,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"13929:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4095,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"13941:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4098,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4100,"nodeType":"ExpressionStatement","src":"13572:395:17"},{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4101,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"13987:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4102,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"13990:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4103,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4104,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"14072:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4105,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"14326:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4106,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"14330:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4109,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"14341:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4107,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:17","typeDescriptions":{}}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4115,"nodeType":"ExpressionStatement","src":"13986:382:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4080,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"13485:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4117,"nodeType":"WhileStatement","src":"13478:905:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4118,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"14401:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4123,"nodeType":"IfStatement","src":"14397:22:17","trueBody":{"expression":{"hexValue":"30","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4055,"id":4122,"nodeType":"Return","src":"14411:8:17"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4125,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"14470:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4128,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"14477:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:17","subExpression":{"id":4131,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"14490:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:17","typeDescriptions":{}}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4137,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"14502:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4135,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:17","typeDescriptions":{}}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4124,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"14462:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4055,"id":4140,"nodeType":"Return","src":"14455:50:17"}]}]},"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"12082:553:17","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4143,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:17","nodeType":"FunctionDefinition","parameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"a","nameLocation":"12664:1:17","nodeType":"VariableDeclaration","scope":4143,"src":"12656:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4048,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4051,"mutability":"mutable","name":"n","nameLocation":"12675:1:17","nodeType":"VariableDeclaration","scope":4143,"src":"12667:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:17"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4143,"src":"12701:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:17"},"scope":5014,"src":"12640:1919:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4163,"nodeType":"Block","src":"15159:82:17","statements":[{"id":4162,"nodeType":"UncheckedBlock","src":"15169:66:17","statements":[{"expression":{"arguments":[{"id":4155,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"15212:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4156,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"15215:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4159,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"15222:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4153,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"15200:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5014_$","typeString":"type(library Math)"}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:17","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4200,"src":"15200:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4152,"id":4161,"nodeType":"Return","src":"15193:31:17"}]}]},"documentation":{"id":4144,"nodeType":"StructuredDocumentation","src":"14565:514:17","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4164,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:17","nodeType":"FunctionDefinition","parameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"a","nameLocation":"15113:1:17","nodeType":"VariableDeclaration","scope":4164,"src":"15105:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4148,"mutability":"mutable","name":"p","nameLocation":"15124:1:17","nodeType":"VariableDeclaration","scope":4164,"src":"15116:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:17"},"returnParameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4164,"src":"15150:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:17"},"scope":5014,"src":"15084:157:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4199,"nodeType":"Block","src":"16011:174:17","statements":[{"assignments":[4177,4179],"declarations":[{"constant":false,"id":4177,"mutability":"mutable","name":"success","nameLocation":"16027:7:17","nodeType":"VariableDeclaration","scope":4199,"src":"16022:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4176,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4179,"mutability":"mutable","name":"result","nameLocation":"16044:6:17","nodeType":"VariableDeclaration","scope":4199,"src":"16036:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4178,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4185,"initialValue":{"arguments":[{"id":4181,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"16064:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4182,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"16067:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4183,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"16070:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4180,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4224,4306],"referencedDeclaration":4224,"src":"16054:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:17"},{"condition":{"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:17","subExpression":{"id":4186,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"16087:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4196,"nodeType":"IfStatement","src":"16082:74:17","trueBody":{"id":4195,"nodeType":"Block","src":"16096:60:17","statements":[{"expression":{"arguments":[{"expression":{"id":4191,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"16122:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1955_$","typeString":"type(library Panic)"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1922,"src":"16122:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4188,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"16110:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1955_$","typeString":"type(library Panic)"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1954,"src":"16110:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4194,"nodeType":"ExpressionStatement","src":"16110:35:17"}]}},{"expression":{"id":4197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"16172:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4175,"id":4198,"nodeType":"Return","src":"16165:13:17"}]},"documentation":{"id":4165,"nodeType":"StructuredDocumentation","src":"15247:678:17","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4200,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:17","nodeType":"FunctionDefinition","parameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4167,"mutability":"mutable","name":"b","nameLocation":"15954:1:17","nodeType":"VariableDeclaration","scope":4200,"src":"15946:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4169,"mutability":"mutable","name":"e","nameLocation":"15965:1:17","nodeType":"VariableDeclaration","scope":4200,"src":"15957:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4168,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4171,"mutability":"mutable","name":"m","nameLocation":"15976:1:17","nodeType":"VariableDeclaration","scope":4200,"src":"15968:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:17"},"returnParameters":{"id":4175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4200,"src":"16002:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:17"},"scope":5014,"src":"15930:255:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4223,"nodeType":"Block","src":"17039:1493:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4214,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"17053:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4221,"nodeType":"IfStatement","src":"17049:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4213,"id":4220,"nodeType":"Return","src":"17061:17:17"}},{"AST":{"nativeSrc":"17113:1413:17","nodeType":"YulBlock","src":"17113:1413:17","statements":[{"nativeSrc":"17127:22:17","nodeType":"YulVariableDeclaration","src":"17127:22:17","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:17","nodeType":"YulLiteral","src":"17144:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:17","nodeType":"YulIdentifier","src":"17138:5:17"},"nativeSrc":"17138:11:17","nodeType":"YulFunctionCall","src":"17138:11:17"},"variables":[{"name":"ptr","nativeSrc":"17131:3:17","nodeType":"YulTypedName","src":"17131:3:17","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:17","nodeType":"YulIdentifier","src":"18057:3:17"},{"kind":"number","nativeSrc":"18062:4:17","nodeType":"YulLiteral","src":"18062:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:17","nodeType":"YulIdentifier","src":"18050:6:17"},"nativeSrc":"18050:17:17","nodeType":"YulFunctionCall","src":"18050:17:17"},"nativeSrc":"18050:17:17","nodeType":"YulExpressionStatement","src":"18050:17:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:17","nodeType":"YulIdentifier","src":"18091:3:17"},{"kind":"number","nativeSrc":"18096:4:17","nodeType":"YulLiteral","src":"18096:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:17","nodeType":"YulIdentifier","src":"18087:3:17"},"nativeSrc":"18087:14:17","nodeType":"YulFunctionCall","src":"18087:14:17"},{"kind":"number","nativeSrc":"18103:4:17","nodeType":"YulLiteral","src":"18103:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:17","nodeType":"YulIdentifier","src":"18080:6:17"},"nativeSrc":"18080:28:17","nodeType":"YulFunctionCall","src":"18080:28:17"},"nativeSrc":"18080:28:17","nodeType":"YulExpressionStatement","src":"18080:28:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:17","nodeType":"YulIdentifier","src":"18132:3:17"},{"kind":"number","nativeSrc":"18137:4:17","nodeType":"YulLiteral","src":"18137:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:17","nodeType":"YulIdentifier","src":"18128:3:17"},"nativeSrc":"18128:14:17","nodeType":"YulFunctionCall","src":"18128:14:17"},{"kind":"number","nativeSrc":"18144:4:17","nodeType":"YulLiteral","src":"18144:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:17","nodeType":"YulIdentifier","src":"18121:6:17"},"nativeSrc":"18121:28:17","nodeType":"YulFunctionCall","src":"18121:28:17"},"nativeSrc":"18121:28:17","nodeType":"YulExpressionStatement","src":"18121:28:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:17","nodeType":"YulIdentifier","src":"18173:3:17"},{"kind":"number","nativeSrc":"18178:4:17","nodeType":"YulLiteral","src":"18178:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:17","nodeType":"YulIdentifier","src":"18169:3:17"},"nativeSrc":"18169:14:17","nodeType":"YulFunctionCall","src":"18169:14:17"},{"name":"b","nativeSrc":"18185:1:17","nodeType":"YulIdentifier","src":"18185:1:17"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:17","nodeType":"YulIdentifier","src":"18162:6:17"},"nativeSrc":"18162:25:17","nodeType":"YulFunctionCall","src":"18162:25:17"},"nativeSrc":"18162:25:17","nodeType":"YulExpressionStatement","src":"18162:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:17","nodeType":"YulIdentifier","src":"18211:3:17"},{"kind":"number","nativeSrc":"18216:4:17","nodeType":"YulLiteral","src":"18216:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:17","nodeType":"YulIdentifier","src":"18207:3:17"},"nativeSrc":"18207:14:17","nodeType":"YulFunctionCall","src":"18207:14:17"},{"name":"e","nativeSrc":"18223:1:17","nodeType":"YulIdentifier","src":"18223:1:17"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:17","nodeType":"YulIdentifier","src":"18200:6:17"},"nativeSrc":"18200:25:17","nodeType":"YulFunctionCall","src":"18200:25:17"},"nativeSrc":"18200:25:17","nodeType":"YulExpressionStatement","src":"18200:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:17","nodeType":"YulIdentifier","src":"18249:3:17"},{"kind":"number","nativeSrc":"18254:4:17","nodeType":"YulLiteral","src":"18254:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:17","nodeType":"YulIdentifier","src":"18245:3:17"},"nativeSrc":"18245:14:17","nodeType":"YulFunctionCall","src":"18245:14:17"},{"name":"m","nativeSrc":"18261:1:17","nodeType":"YulIdentifier","src":"18261:1:17"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:17","nodeType":"YulIdentifier","src":"18238:6:17"},"nativeSrc":"18238:25:17","nodeType":"YulFunctionCall","src":"18238:25:17"},"nativeSrc":"18238:25:17","nodeType":"YulExpressionStatement","src":"18238:25:17"},{"nativeSrc":"18425:57:17","nodeType":"YulAssignment","src":"18425:57:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:17","nodeType":"YulIdentifier","src":"18447:3:17"},"nativeSrc":"18447:5:17","nodeType":"YulFunctionCall","src":"18447:5:17"},{"kind":"number","nativeSrc":"18454:4:17","nodeType":"YulLiteral","src":"18454:4:17","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:17","nodeType":"YulIdentifier","src":"18460:3:17"},{"kind":"number","nativeSrc":"18465:4:17","nodeType":"YulLiteral","src":"18465:4:17","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:17","nodeType":"YulLiteral","src":"18471:4:17","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:17","nodeType":"YulLiteral","src":"18477:4:17","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:17","nodeType":"YulIdentifier","src":"18436:10:17"},"nativeSrc":"18436:46:17","nodeType":"YulFunctionCall","src":"18436:46:17"},"variableNames":[{"name":"success","nativeSrc":"18425:7:17","nodeType":"YulIdentifier","src":"18425:7:17"}]},{"nativeSrc":"18495:21:17","nodeType":"YulAssignment","src":"18495:21:17","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:17","nodeType":"YulLiteral","src":"18511:4:17","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:17","nodeType":"YulIdentifier","src":"18505:5:17"},"nativeSrc":"18505:11:17","nodeType":"YulFunctionCall","src":"18505:11:17"},"variableNames":[{"name":"result","nativeSrc":"18495:6:17","nodeType":"YulIdentifier","src":"18495:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4203,"isOffset":false,"isSlot":false,"src":"18185:1:17","valueSize":1},{"declaration":4205,"isOffset":false,"isSlot":false,"src":"18223:1:17","valueSize":1},{"declaration":4207,"isOffset":false,"isSlot":false,"src":"18261:1:17","valueSize":1},{"declaration":4212,"isOffset":false,"isSlot":false,"src":"18495:6:17","valueSize":1},{"declaration":4210,"isOffset":false,"isSlot":false,"src":"18425:7:17","valueSize":1}],"flags":["memory-safe"],"id":4222,"nodeType":"InlineAssembly","src":"17088:1438:17"}]},"documentation":{"id":4201,"nodeType":"StructuredDocumentation","src":"16191:738:17","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4224,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:17","nodeType":"FunctionDefinition","parameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4203,"mutability":"mutable","name":"b","nameLocation":"16961:1:17","nodeType":"VariableDeclaration","scope":4224,"src":"16953:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4202,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4205,"mutability":"mutable","name":"e","nameLocation":"16972:1:17","nodeType":"VariableDeclaration","scope":4224,"src":"16964:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4204,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4207,"mutability":"mutable","name":"m","nameLocation":"16983:1:17","nodeType":"VariableDeclaration","scope":4224,"src":"16975:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4206,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:17"},"returnParameters":{"id":4213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4210,"mutability":"mutable","name":"success","nameLocation":"17014:7:17","nodeType":"VariableDeclaration","scope":4224,"src":"17009:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4209,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4212,"mutability":"mutable","name":"result","nameLocation":"17031:6:17","nodeType":"VariableDeclaration","scope":4224,"src":"17023:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4211,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:17"},"scope":5014,"src":"16934:1598:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4259,"nodeType":"Block","src":"18729:179:17","statements":[{"assignments":[4237,4239],"declarations":[{"constant":false,"id":4237,"mutability":"mutable","name":"success","nameLocation":"18745:7:17","nodeType":"VariableDeclaration","scope":4259,"src":"18740:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4236,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4239,"mutability":"mutable","name":"result","nameLocation":"18767:6:17","nodeType":"VariableDeclaration","scope":4259,"src":"18754:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4238,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4245,"initialValue":{"arguments":[{"id":4241,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"18787:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4242,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"18790:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4243,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"18793:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4240,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4224,4306],"referencedDeclaration":4306,"src":"18777:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:17"},{"condition":{"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:17","subExpression":{"id":4246,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"18810:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4256,"nodeType":"IfStatement","src":"18805:74:17","trueBody":{"id":4255,"nodeType":"Block","src":"18819:60:17","statements":[{"expression":{"arguments":[{"expression":{"id":4251,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"18845:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1955_$","typeString":"type(library Panic)"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1922,"src":"18845:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4248,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"18833:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1955_$","typeString":"type(library Panic)"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1954,"src":"18833:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4254,"nodeType":"ExpressionStatement","src":"18833:35:17"}]}},{"expression":{"id":4257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"18895:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4235,"id":4258,"nodeType":"Return","src":"18888:13:17"}]},"documentation":{"id":4225,"nodeType":"StructuredDocumentation","src":"18538:85:17","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4260,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:17","nodeType":"FunctionDefinition","parameters":{"id":4232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"b","nameLocation":"18657:1:17","nodeType":"VariableDeclaration","scope":4260,"src":"18644:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4226,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4229,"mutability":"mutable","name":"e","nameLocation":"18673:1:17","nodeType":"VariableDeclaration","scope":4260,"src":"18660:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4228,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4231,"mutability":"mutable","name":"m","nameLocation":"18689:1:17","nodeType":"VariableDeclaration","scope":4260,"src":"18676:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4230,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:17"},"returnParameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4260,"src":"18715:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4233,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:17"},"scope":5014,"src":"18628:280:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4305,"nodeType":"Block","src":"19162:771:17","statements":[{"condition":{"arguments":[{"id":4275,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"19187:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4274,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"19176:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4284,"nodeType":"IfStatement","src":"19172:47:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4278,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4273,"id":4283,"nodeType":"Return","src":"19191:28:17"}},{"assignments":[4286],"declarations":[{"constant":false,"id":4286,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:17","nodeType":"VariableDeclaration","scope":4305,"src":"19230:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4289,"initialValue":{"expression":{"id":4287,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"19245:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:17","memberName":"length","nodeType":"MemberAccess","src":"19245:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:17"},{"expression":{"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"19335:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4293,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"19361:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:17","memberName":"length","nodeType":"MemberAccess","src":"19361:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4295,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"19371:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:17","memberName":"length","nodeType":"MemberAccess","src":"19371:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4297,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"19381:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4298,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"19387:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4299,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"19390:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4300,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"19393:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4291,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4303,"nodeType":"ExpressionStatement","src":"19335:60:17"},{"AST":{"nativeSrc":"19431:496:17","nodeType":"YulBlock","src":"19431:496:17","statements":[{"nativeSrc":"19445:32:17","nodeType":"YulVariableDeclaration","src":"19445:32:17","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:17","nodeType":"YulIdentifier","src":"19464:6:17"},{"kind":"number","nativeSrc":"19472:4:17","nodeType":"YulLiteral","src":"19472:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:17","nodeType":"YulIdentifier","src":"19460:3:17"},"nativeSrc":"19460:17:17","nodeType":"YulFunctionCall","src":"19460:17:17"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:17","nodeType":"YulTypedName","src":"19449:7:17","type":""}]},{"nativeSrc":"19567:73:17","nodeType":"YulAssignment","src":"19567:73:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:17","nodeType":"YulIdentifier","src":"19589:3:17"},"nativeSrc":"19589:5:17","nodeType":"YulFunctionCall","src":"19589:5:17"},{"kind":"number","nativeSrc":"19596:4:17","nodeType":"YulLiteral","src":"19596:4:17","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:17","nodeType":"YulIdentifier","src":"19602:7:17"},{"arguments":[{"name":"result","nativeSrc":"19617:6:17","nodeType":"YulIdentifier","src":"19617:6:17"}],"functionName":{"name":"mload","nativeSrc":"19611:5:17","nodeType":"YulIdentifier","src":"19611:5:17"},"nativeSrc":"19611:13:17","nodeType":"YulFunctionCall","src":"19611:13:17"},{"name":"dataPtr","nativeSrc":"19626:7:17","nodeType":"YulIdentifier","src":"19626:7:17"},{"name":"mLen","nativeSrc":"19635:4:17","nodeType":"YulIdentifier","src":"19635:4:17"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:17","nodeType":"YulIdentifier","src":"19578:10:17"},"nativeSrc":"19578:62:17","nodeType":"YulFunctionCall","src":"19578:62:17"},"variableNames":[{"name":"success","nativeSrc":"19567:7:17","nodeType":"YulIdentifier","src":"19567:7:17"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:17","nodeType":"YulIdentifier","src":"19796:6:17"},{"name":"mLen","nativeSrc":"19804:4:17","nodeType":"YulIdentifier","src":"19804:4:17"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:17","nodeType":"YulIdentifier","src":"19789:6:17"},"nativeSrc":"19789:20:17","nodeType":"YulFunctionCall","src":"19789:20:17"},"nativeSrc":"19789:20:17","nodeType":"YulExpressionStatement","src":"19789:20:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:17","nodeType":"YulLiteral","src":"19892:4:17","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:17","nodeType":"YulIdentifier","src":"19902:7:17"},{"name":"mLen","nativeSrc":"19911:4:17","nodeType":"YulIdentifier","src":"19911:4:17"}],"functionName":{"name":"add","nativeSrc":"19898:3:17","nodeType":"YulIdentifier","src":"19898:3:17"},"nativeSrc":"19898:18:17","nodeType":"YulFunctionCall","src":"19898:18:17"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:17","nodeType":"YulIdentifier","src":"19885:6:17"},"nativeSrc":"19885:32:17","nodeType":"YulFunctionCall","src":"19885:32:17"},"nativeSrc":"19885:32:17","nodeType":"YulExpressionStatement","src":"19885:32:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":4286,"isOffset":false,"isSlot":false,"src":"19635:4:17","valueSize":1},{"declaration":4286,"isOffset":false,"isSlot":false,"src":"19804:4:17","valueSize":1},{"declaration":4286,"isOffset":false,"isSlot":false,"src":"19911:4:17","valueSize":1},{"declaration":4272,"isOffset":false,"isSlot":false,"src":"19464:6:17","valueSize":1},{"declaration":4272,"isOffset":false,"isSlot":false,"src":"19617:6:17","valueSize":1},{"declaration":4272,"isOffset":false,"isSlot":false,"src":"19796:6:17","valueSize":1},{"declaration":4270,"isOffset":false,"isSlot":false,"src":"19567:7:17","valueSize":1}],"flags":["memory-safe"],"id":4304,"nodeType":"InlineAssembly","src":"19406:521:17"}]},"documentation":{"id":4261,"nodeType":"StructuredDocumentation","src":"18914:88:17","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4306,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:17","nodeType":"FunctionDefinition","parameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"b","nameLocation":"19048:1:17","nodeType":"VariableDeclaration","scope":4306,"src":"19035:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4262,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4265,"mutability":"mutable","name":"e","nameLocation":"19072:1:17","nodeType":"VariableDeclaration","scope":4306,"src":"19059:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4264,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4267,"mutability":"mutable","name":"m","nameLocation":"19096:1:17","nodeType":"VariableDeclaration","scope":4306,"src":"19083:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4266,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:17"},"returnParameters":{"id":4273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"success","nameLocation":"19132:7:17","nodeType":"VariableDeclaration","scope":4306,"src":"19127:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4269,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4272,"mutability":"mutable","name":"result","nameLocation":"19154:6:17","nodeType":"VariableDeclaration","scope":4306,"src":"19141:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4271,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:17"},"scope":5014,"src":"19007:926:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4338,"nodeType":"Block","src":"20088:176:17","statements":[{"body":{"id":4334,"nodeType":"Block","src":"20145:92:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4325,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"20163:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4327,"indexExpression":{"id":4326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"20173:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4333,"nodeType":"IfStatement","src":"20159:68:17","trueBody":{"id":4332,"nodeType":"Block","src":"20182:45:17","statements":[{"expression":{"hexValue":"66616c7365","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4313,"id":4331,"nodeType":"Return","src":"20200:12:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4318,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"20118:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4319,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"20122:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:17","memberName":"length","nodeType":"MemberAccess","src":"20122:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4335,"initializationExpression":{"assignments":[4315],"declarations":[{"constant":false,"id":4315,"mutability":"mutable","name":"i","nameLocation":"20111:1:17","nodeType":"VariableDeclaration","scope":4335,"src":"20103:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4314,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4317,"initialValue":{"hexValue":"30","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:17","subExpression":{"id":4322,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"20142:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4324,"nodeType":"ExpressionStatement","src":"20140:3:17"},"nodeType":"ForStatement","src":"20098:139:17"},{"expression":{"hexValue":"74727565","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4313,"id":4337,"nodeType":"Return","src":"20246:11:17"}]},"documentation":{"id":4307,"nodeType":"StructuredDocumentation","src":"19939:72:17","text":" @dev Returns whether the provided byte array is zero."},"id":4339,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:17","nodeType":"FunctionDefinition","parameters":{"id":4310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:17","nodeType":"VariableDeclaration","scope":4339,"src":"20036:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4308,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:17"},"returnParameters":{"id":4313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4339,"src":"20082:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4311,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:17"},"scope":5014,"src":"20016:248:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4557,"nodeType":"Block","src":"20624:5124:17","statements":[{"id":4556,"nodeType":"UncheckedBlock","src":"20634:5108:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4347,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"20728:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4353,"nodeType":"IfStatement","src":"20724:53:17","trueBody":{"id":4352,"nodeType":"Block","src":"20736:41:17","statements":[{"expression":{"id":4350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"20761:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4346,"id":4351,"nodeType":"Return","src":"20754:8:17"}]}},{"assignments":[4355],"declarations":[{"constant":false,"id":4355,"mutability":"mutable","name":"aa","nameLocation":"21712:2:17","nodeType":"VariableDeclaration","scope":4556,"src":"21704:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4354,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4357,"initialValue":{"id":4356,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"21717:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:17"},{"assignments":[4359],"declarations":[{"constant":false,"id":4359,"mutability":"mutable","name":"xn","nameLocation":"21740:2:17","nodeType":"VariableDeclaration","scope":4556,"src":"21732:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4358,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4361,"initialValue":{"hexValue":"31","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"21765:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4377,"nodeType":"IfStatement","src":"21761:92:17","trueBody":{"id":4376,"nodeType":"Block","src":"21783:70:17","statements":[{"expression":{"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4368,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"21801:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4371,"nodeType":"ExpressionStatement","src":"21801:10:17"},{"expression":{"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4372,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"21829:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4375,"nodeType":"ExpressionStatement","src":"21829:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4378,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"21870:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4393,"nodeType":"IfStatement","src":"21866:90:17","trueBody":{"id":4392,"nodeType":"Block","src":"21887:69:17","statements":[{"expression":{"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4384,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"21905:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4387,"nodeType":"ExpressionStatement","src":"21905:9:17"},{"expression":{"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4388,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"21932:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4391,"nodeType":"ExpressionStatement","src":"21932:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4394,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"21973:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4409,"nodeType":"IfStatement","src":"21969:90:17","trueBody":{"id":4408,"nodeType":"Block","src":"21990:69:17","statements":[{"expression":{"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4400,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"22008:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4403,"nodeType":"ExpressionStatement","src":"22008:9:17"},{"expression":{"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4404,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"22035:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4407,"nodeType":"ExpressionStatement","src":"22035:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4410,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"22076:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4425,"nodeType":"IfStatement","src":"22072:89:17","trueBody":{"id":4424,"nodeType":"Block","src":"22093:68:17","statements":[{"expression":{"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4416,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"22111:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4419,"nodeType":"ExpressionStatement","src":"22111:9:17"},{"expression":{"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4420,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"22138:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4423,"nodeType":"ExpressionStatement","src":"22138:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4426,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"22178:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4441,"nodeType":"IfStatement","src":"22174:87:17","trueBody":{"id":4440,"nodeType":"Block","src":"22194:67:17","statements":[{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4432,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"22212:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4435,"nodeType":"ExpressionStatement","src":"22212:8:17"},{"expression":{"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4436,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"22238:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4439,"nodeType":"ExpressionStatement","src":"22238:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4442,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"22278:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4457,"nodeType":"IfStatement","src":"22274:87:17","trueBody":{"id":4456,"nodeType":"Block","src":"22294:67:17","statements":[{"expression":{"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4448,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"22312:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4451,"nodeType":"ExpressionStatement","src":"22312:8:17"},{"expression":{"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4452,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"22338:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4455,"nodeType":"ExpressionStatement","src":"22338:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4458,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"22378:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4469,"nodeType":"IfStatement","src":"22374:61:17","trueBody":{"id":4468,"nodeType":"Block","src":"22394:41:17","statements":[{"expression":{"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4464,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"22412:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4467,"nodeType":"ExpressionStatement","src":"22412:8:17"}]}},{"expression":{"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4470,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"22855:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4472,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"22865:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4478,"nodeType":"ExpressionStatement","src":"22855:18:17"},{"expression":{"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4479,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"24760:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4480,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"24766:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"24771:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4482,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"24775:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4489,"nodeType":"ExpressionStatement","src":"24760:23:17"},{"expression":{"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4490,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"24869:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4491,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"24875:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"24880:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4493,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"24884:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4500,"nodeType":"ExpressionStatement","src":"24869:23:17"},{"expression":{"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4501,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"24980:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"24986:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"24991:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4504,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"24995:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4511,"nodeType":"ExpressionStatement","src":"24980:23:17"},{"expression":{"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4512,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"25089:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4513,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"25095:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"25100:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4515,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"25104:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4522,"nodeType":"ExpressionStatement","src":"25089:23:17"},{"expression":{"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4523,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"25199:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4524,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"25205:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"25210:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4526,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"25214:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4533,"nodeType":"ExpressionStatement","src":"25199:23:17"},{"expression":{"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4534,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"25309:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4535,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"25315:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"25320:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4537,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"25324:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4544,"nodeType":"ExpressionStatement","src":"25309:23:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"25698:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4548,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"25719:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4549,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"25724:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4550,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"25728:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4546,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"25703:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"25703:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4346,"id":4555,"nodeType":"Return","src":"25691:40:17"}]}]},"documentation":{"id":4340,"nodeType":"StructuredDocumentation","src":"20270:292:17","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4558,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:17","nodeType":"FunctionDefinition","parameters":{"id":4343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"a","nameLocation":"20589:1:17","nodeType":"VariableDeclaration","scope":4558,"src":"20581:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4341,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:17"},"returnParameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4558,"src":"20615:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4344,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:17"},"scope":5014,"src":"20567:5181:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4591,"nodeType":"Block","src":"25921:171:17","statements":[{"id":4590,"nodeType":"UncheckedBlock","src":"25931:155:17","statements":[{"assignments":[4570],"declarations":[{"constant":false,"id":4570,"mutability":"mutable","name":"result","nameLocation":"25963:6:17","nodeType":"VariableDeclaration","scope":4590,"src":"25955:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4574,"initialValue":{"arguments":[{"id":4572,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"25977:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4571,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4558,4592],"referencedDeclaration":4558,"src":"25972:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4575,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"26000:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4579,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"26042:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}],"id":4578,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"26025:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3405_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"26055:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4582,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"26064:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4584,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"26073:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4576,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"26009:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"26009:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4568,"id":4589,"nodeType":"Return","src":"25993:82:17"}]}]},"documentation":{"id":4559,"nodeType":"StructuredDocumentation","src":"25754:86:17","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4592,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:17","nodeType":"FunctionDefinition","parameters":{"id":4565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4561,"mutability":"mutable","name":"a","nameLocation":"25867:1:17","nodeType":"VariableDeclaration","scope":4592,"src":"25859:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4560,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4564,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:17","nodeType":"VariableDeclaration","scope":4592,"src":"25870:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"},"typeName":{"id":4563,"nodeType":"UserDefinedTypeName","pathNode":{"id":4562,"name":"Rounding","nameLocations":["25870:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3405,"src":"25870:8:17"},"referencedDeclaration":3405,"src":"25870:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:17"},"returnParameters":{"id":4568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4592,"src":"25912:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4566,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:17"},"scope":5014,"src":"25845:247:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4682,"nodeType":"Block","src":"26281:2334:17","statements":[{"expression":{"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4600,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"26363:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"26383:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4601,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"26367:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"26367:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:17","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4610,"nodeType":"ExpressionStatement","src":"26363:64:17"},{"expression":{"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4611,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"26503:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4614,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"26525:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4615,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"26530:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4612,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"26508:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"26508:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:17","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4624,"nodeType":"ExpressionStatement","src":"26503:56:17"},{"expression":{"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4625,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"26634:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4628,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"26656:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4629,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"26661:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4626,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"26639:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"26639:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:17","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4638,"nodeType":"ExpressionStatement","src":"26634:48:17"},{"expression":{"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4639,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"26757:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4642,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"26779:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4643,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"26784:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4645,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:17","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4640,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"26762:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"26762:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4652,"nodeType":"ExpressionStatement","src":"26757:44:17"},{"expression":{"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4653,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"26874:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4656,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"26896:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4657,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"26901:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4654,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"26879:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"26879:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4666,"nodeType":"ExpressionStatement","src":"26874:42:17"},{"expression":{"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4667,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"26988:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4670,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"27010:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4671,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"27015:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4673,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4668,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"26993:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"26993:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4680,"nodeType":"ExpressionStatement","src":"26988:41:17"},{"AST":{"nativeSrc":"28490:119:17","nodeType":"YulBlock","src":"28490:119:17","statements":[{"nativeSrc":"28504:95:17","nodeType":"YulAssignment","src":"28504:95:17","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:17","nodeType":"YulIdentifier","src":"28512:1:17"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:17","nodeType":"YulIdentifier","src":"28524:1:17"},{"name":"x","nativeSrc":"28527:1:17","nodeType":"YulIdentifier","src":"28527:1:17"}],"functionName":{"name":"shr","nativeSrc":"28520:3:17","nodeType":"YulIdentifier","src":"28520:3:17"},"nativeSrc":"28520:9:17","nodeType":"YulFunctionCall","src":"28520:9:17"},{"kind":"number","nativeSrc":"28531:66:17","nodeType":"YulLiteral","src":"28531:66:17","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:17","nodeType":"YulIdentifier","src":"28515:4:17"},"nativeSrc":"28515:83:17","nodeType":"YulFunctionCall","src":"28515:83:17"}],"functionName":{"name":"or","nativeSrc":"28509:2:17","nodeType":"YulIdentifier","src":"28509:2:17"},"nativeSrc":"28509:90:17","nodeType":"YulFunctionCall","src":"28509:90:17"},"variableNames":[{"name":"r","nativeSrc":"28504:1:17","nodeType":"YulIdentifier","src":"28504:1:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4598,"isOffset":false,"isSlot":false,"src":"28504:1:17","valueSize":1},{"declaration":4598,"isOffset":false,"isSlot":false,"src":"28512:1:17","valueSize":1},{"declaration":4598,"isOffset":false,"isSlot":false,"src":"28524:1:17","valueSize":1},{"declaration":4595,"isOffset":false,"isSlot":false,"src":"28527:1:17","valueSize":1}],"flags":["memory-safe"],"id":4681,"nodeType":"InlineAssembly","src":"28465:144:17"}]},"documentation":{"id":4593,"nodeType":"StructuredDocumentation","src":"26098:119:17","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4683,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:17","nodeType":"FunctionDefinition","parameters":{"id":4596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4595,"mutability":"mutable","name":"x","nameLocation":"26244:1:17","nodeType":"VariableDeclaration","scope":4683,"src":"26236:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4594,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:17"},"returnParameters":{"id":4599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4598,"mutability":"mutable","name":"r","nameLocation":"26278:1:17","nodeType":"VariableDeclaration","scope":4683,"src":"26270:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4597,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:17"},"scope":5014,"src":"26222:2393:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4716,"nodeType":"Block","src":"28848:175:17","statements":[{"id":4715,"nodeType":"UncheckedBlock","src":"28858:159:17","statements":[{"assignments":[4695],"declarations":[{"constant":false,"id":4695,"mutability":"mutable","name":"result","nameLocation":"28890:6:17","nodeType":"VariableDeclaration","scope":4715,"src":"28882:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4694,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4699,"initialValue":{"arguments":[{"id":4697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"28904:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4696,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4683,4717],"referencedDeclaration":4683,"src":"28899:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"28931:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4704,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"28973:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}],"id":4703,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"28956:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3405_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"28991:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"29000:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4701,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"28940:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"28940:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4693,"id":4714,"nodeType":"Return","src":"28924:82:17"}]}]},"documentation":{"id":4684,"nodeType":"StructuredDocumentation","src":"28621:142:17","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4717,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:17","nodeType":"FunctionDefinition","parameters":{"id":4690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4686,"mutability":"mutable","name":"value","nameLocation":"28790:5:17","nodeType":"VariableDeclaration","scope":4717,"src":"28782:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4685,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4689,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:17","nodeType":"VariableDeclaration","scope":4717,"src":"28797:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"},"typeName":{"id":4688,"nodeType":"UserDefinedTypeName","pathNode":{"id":4687,"name":"Rounding","nameLocations":["28797:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3405,"src":"28797:8:17"},"referencedDeclaration":3405,"src":"28797:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:17"},"returnParameters":{"id":4693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4717,"src":"28839:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:17"},"scope":5014,"src":"28768:255:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4845,"nodeType":"Block","src":"29216:854:17","statements":[{"assignments":[4726],"declarations":[{"constant":false,"id":4726,"mutability":"mutable","name":"result","nameLocation":"29234:6:17","nodeType":"VariableDeclaration","scope":4845,"src":"29226:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4725,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4728,"initialValue":{"hexValue":"30","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:17"},{"id":4842,"nodeType":"UncheckedBlock","src":"29254:787:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"29282:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4745,"nodeType":"IfStatement","src":"29278:103:17","trueBody":{"id":4744,"nodeType":"Block","src":"29301:80:17","statements":[{"expression":{"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"29319:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4739,"nodeType":"ExpressionStatement","src":"29319:17:17"},{"expression":{"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4740,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"29354:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4743,"nodeType":"ExpressionStatement","src":"29354:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"29398:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4762,"nodeType":"IfStatement","src":"29394:103:17","trueBody":{"id":4761,"nodeType":"Block","src":"29417:80:17","statements":[{"expression":{"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"29435:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4756,"nodeType":"ExpressionStatement","src":"29435:17:17"},{"expression":{"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"29470:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4760,"nodeType":"ExpressionStatement","src":"29470:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"29514:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4779,"nodeType":"IfStatement","src":"29510:103:17","trueBody":{"id":4778,"nodeType":"Block","src":"29533:80:17","statements":[{"expression":{"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"29551:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4773,"nodeType":"ExpressionStatement","src":"29551:17:17"},{"expression":{"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4774,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"29586:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4777,"nodeType":"ExpressionStatement","src":"29586:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"29630:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4796,"nodeType":"IfStatement","src":"29626:100:17","trueBody":{"id":4795,"nodeType":"Block","src":"29648:78:17","statements":[{"expression":{"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"29666:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4790,"nodeType":"ExpressionStatement","src":"29666:16:17"},{"expression":{"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"29700:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4794,"nodeType":"ExpressionStatement","src":"29700:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"29743:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4813,"nodeType":"IfStatement","src":"29739:100:17","trueBody":{"id":4812,"nodeType":"Block","src":"29761:78:17","statements":[{"expression":{"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"29779:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4807,"nodeType":"ExpressionStatement","src":"29779:16:17"},{"expression":{"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"29813:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4811,"nodeType":"ExpressionStatement","src":"29813:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"29856:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4830,"nodeType":"IfStatement","src":"29852:100:17","trueBody":{"id":4829,"nodeType":"Block","src":"29874:78:17","statements":[{"expression":{"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"29892:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4824,"nodeType":"ExpressionStatement","src":"29892:16:17"},{"expression":{"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"29926:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4828,"nodeType":"ExpressionStatement","src":"29926:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"29969:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4841,"nodeType":"IfStatement","src":"29965:66:17","trueBody":{"id":4840,"nodeType":"Block","src":"29987:44:17","statements":[{"expression":{"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4836,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"30005:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4839,"nodeType":"ExpressionStatement","src":"30005:11:17"}]}}]},{"expression":{"id":4843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"30057:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4724,"id":4844,"nodeType":"Return","src":"30050:13:17"}]},"documentation":{"id":4718,"nodeType":"StructuredDocumentation","src":"29029:120:17","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4846,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:17","nodeType":"FunctionDefinition","parameters":{"id":4721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4720,"mutability":"mutable","name":"value","nameLocation":"29177:5:17","nodeType":"VariableDeclaration","scope":4846,"src":"29169:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4719,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:17"},"returnParameters":{"id":4724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4846,"src":"29207:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4722,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:17"},"scope":5014,"src":"29154:916:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4879,"nodeType":"Block","src":"30305:177:17","statements":[{"id":4878,"nodeType":"UncheckedBlock","src":"30315:161:17","statements":[{"assignments":[4858],"declarations":[{"constant":false,"id":4858,"mutability":"mutable","name":"result","nameLocation":"30347:6:17","nodeType":"VariableDeclaration","scope":4878,"src":"30339:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4857,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4862,"initialValue":{"arguments":[{"id":4860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"30362:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4859,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4846,4880],"referencedDeclaration":4846,"src":"30356:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4863,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"30389:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4867,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"30431:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}],"id":4866,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"30414:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3405_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"30450:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"30459:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4864,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"30398:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"30398:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4856,"id":4877,"nodeType":"Return","src":"30382:83:17"}]}]},"documentation":{"id":4847,"nodeType":"StructuredDocumentation","src":"30076:143:17","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4880,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:17","nodeType":"FunctionDefinition","parameters":{"id":4853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4849,"mutability":"mutable","name":"value","nameLocation":"30247:5:17","nodeType":"VariableDeclaration","scope":4880,"src":"30239:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4848,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4852,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:17","nodeType":"VariableDeclaration","scope":4880,"src":"30254:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"},"typeName":{"id":4851,"nodeType":"UserDefinedTypeName","pathNode":{"id":4850,"name":"Rounding","nameLocations":["30254:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3405,"src":"30254:8:17"},"referencedDeclaration":3405,"src":"30254:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:17"},"returnParameters":{"id":4856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4880,"src":"30296:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4854,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:17"},"scope":5014,"src":"30224:258:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4956,"nodeType":"Block","src":"30800:675:17","statements":[{"expression":{"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4888,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"30882:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4891,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"30902:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4889,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"30886:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"30886:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:17","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4898,"nodeType":"ExpressionStatement","src":"30882:64:17"},{"expression":{"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4899,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"31022:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4902,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"31044:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4903,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"31049:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4900,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"31027:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"31027:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:17","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4912,"nodeType":"ExpressionStatement","src":"31022:56:17"},{"expression":{"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4913,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"31153:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4916,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"31175:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4917,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"31180:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4919,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4914,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"31158:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"31158:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:17","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4926,"nodeType":"ExpressionStatement","src":"31153:48:17"},{"expression":{"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4927,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"31276:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4930,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"31298:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4931,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"31303:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4933,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:17","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4928,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"31281:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"31281:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4940,"nodeType":"ExpressionStatement","src":"31276:44:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4941,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"31426:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4947,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"31453:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4948,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"31458:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4945,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"31436:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"31436:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4887,"id":4955,"nodeType":"Return","src":"31418:50:17"}]},"documentation":{"id":4881,"nodeType":"StructuredDocumentation","src":"30488:246:17","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4957,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:17","nodeType":"FunctionDefinition","parameters":{"id":4884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4883,"mutability":"mutable","name":"x","nameLocation":"30763:1:17","nodeType":"VariableDeclaration","scope":4957,"src":"30755:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4882,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:17"},"returnParameters":{"id":4887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4886,"mutability":"mutable","name":"r","nameLocation":"30797:1:17","nodeType":"VariableDeclaration","scope":4957,"src":"30789:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4885,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:17"},"scope":5014,"src":"30739:736:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4993,"nodeType":"Block","src":"31712:184:17","statements":[{"id":4992,"nodeType":"UncheckedBlock","src":"31722:168:17","statements":[{"assignments":[4969],"declarations":[{"constant":false,"id":4969,"mutability":"mutable","name":"result","nameLocation":"31754:6:17","nodeType":"VariableDeclaration","scope":4992,"src":"31746:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4968,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4973,"initialValue":{"arguments":[{"id":4971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"31770:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4970,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4957,4994],"referencedDeclaration":4957,"src":"31763:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4974,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"31797:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4978,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"31839:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}],"id":4977,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"31822:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3405_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4981,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"31858:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"31873:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4975,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"31806:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"31806:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4967,"id":4991,"nodeType":"Return","src":"31790:89:17"}]}]},"documentation":{"id":4958,"nodeType":"StructuredDocumentation","src":"31481:144:17","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4994,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:17","nodeType":"FunctionDefinition","parameters":{"id":4964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4960,"mutability":"mutable","name":"value","nameLocation":"31654:5:17","nodeType":"VariableDeclaration","scope":4994,"src":"31646:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4959,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4963,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:17","nodeType":"VariableDeclaration","scope":4994,"src":"31661:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"},"typeName":{"id":4962,"nodeType":"UserDefinedTypeName","pathNode":{"id":4961,"name":"Rounding","nameLocations":["31661:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3405,"src":"31661:8:17"},"referencedDeclaration":3405,"src":"31661:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:17"},"returnParameters":{"id":4967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4994,"src":"31703:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4965,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:17"},"scope":5014,"src":"31630:266:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5012,"nodeType":"Block","src":"32094:48:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5005,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"32117:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}],"id":5004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5003,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:17","typeDescriptions":{}}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5002,"id":5011,"nodeType":"Return","src":"32104:31:17"}]},"documentation":{"id":4995,"nodeType":"StructuredDocumentation","src":"31902:113:17","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5013,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:17","nodeType":"FunctionDefinition","parameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:17","nodeType":"VariableDeclaration","scope":5013,"src":"32046:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"},"typeName":{"id":4997,"nodeType":"UserDefinedTypeName","pathNode":{"id":4996,"name":"Rounding","nameLocations":["32046:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3405,"src":"32046:8:17"},"referencedDeclaration":3405,"src":"32046:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3405","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:17"},"returnParameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5013,"src":"32088:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5000,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:17"},"scope":5014,"src":"32020:122:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5015,"src":"281:31863:17","usedErrors":[],"usedEvents":[]}],"src":"103:32042:17"},"id":17},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6779]},"id":6780,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5016,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5017,"nodeType":"StructuredDocumentation","src":"218:550:18","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6779,"linearizedBaseContracts":[6779],"name":"SafeCast","nameLocation":"777:8:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5018,"nodeType":"StructuredDocumentation","src":"792:68:18","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5024,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:18","nodeType":"ErrorDefinition","parameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5020,"mutability":"mutable","name":"bits","nameLocation":"908:4:18","nodeType":"VariableDeclaration","scope":5024,"src":"902:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5019,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5022,"mutability":"mutable","name":"value","nameLocation":"922:5:18","nodeType":"VariableDeclaration","scope":5024,"src":"914:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5021,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:18"},"src":"865:64:18"},{"documentation":{"id":5025,"nodeType":"StructuredDocumentation","src":"935:75:18","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5029,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:18","nodeType":"ErrorDefinition","parameters":{"id":5028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5027,"mutability":"mutable","name":"value","nameLocation":"1056:5:18","nodeType":"VariableDeclaration","scope":5029,"src":"1049:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5026,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:18"},"src":"1015:48:18"},{"documentation":{"id":5030,"nodeType":"StructuredDocumentation","src":"1069:67:18","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5036,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:18","nodeType":"ErrorDefinition","parameters":{"id":5035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"bits","nameLocation":"1183:4:18","nodeType":"VariableDeclaration","scope":5036,"src":"1177:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5031,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5034,"mutability":"mutable","name":"value","nameLocation":"1196:5:18","nodeType":"VariableDeclaration","scope":5036,"src":"1189:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5033,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:18"},"src":"1141:62:18"},{"documentation":{"id":5037,"nodeType":"StructuredDocumentation","src":"1209:75:18","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5041,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:18","nodeType":"ErrorDefinition","parameters":{"id":5040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5039,"mutability":"mutable","name":"value","nameLocation":"1331:5:18","nodeType":"VariableDeclaration","scope":5041,"src":"1323:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:18"},"src":"1289:49:18"},{"body":{"id":5068,"nodeType":"Block","src":"1695:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"1709:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5051,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5050,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:18","memberName":"max","nodeType":"MemberAccess","src":"1717:17:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5062,"nodeType":"IfStatement","src":"1705:105:18","trueBody":{"id":5061,"nodeType":"Block","src":"1736:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:18","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"1793:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5056,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"1757:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5060,"nodeType":"RevertStatement","src":"1750:49:18"}]}},{"expression":{"arguments":[{"id":5065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"1834:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5063,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:18","typeDescriptions":{}}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5048,"id":5067,"nodeType":"Return","src":"1819:21:18"}]},"documentation":{"id":5042,"nodeType":"StructuredDocumentation","src":"1344:280:18","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5069,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:18","nodeType":"FunctionDefinition","parameters":{"id":5045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5044,"mutability":"mutable","name":"value","nameLocation":"1656:5:18","nodeType":"VariableDeclaration","scope":5069,"src":"1648:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:18"},"returnParameters":{"id":5048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5069,"src":"1686:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5046,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:18"},"scope":6779,"src":"1629:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5096,"nodeType":"Block","src":"2204:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"2218:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5079,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5078,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:18","memberName":"max","nodeType":"MemberAccess","src":"2226:17:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5090,"nodeType":"IfStatement","src":"2214:105:18","trueBody":{"id":5089,"nodeType":"Block","src":"2245:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:18","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"2302:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5084,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"2266:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5088,"nodeType":"RevertStatement","src":"2259:49:18"}]}},{"expression":{"arguments":[{"id":5093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"2343:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5091,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:18","typeDescriptions":{}}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5076,"id":5095,"nodeType":"Return","src":"2328:21:18"}]},"documentation":{"id":5070,"nodeType":"StructuredDocumentation","src":"1853:280:18","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5097,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:18","nodeType":"FunctionDefinition","parameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5072,"mutability":"mutable","name":"value","nameLocation":"2165:5:18","nodeType":"VariableDeclaration","scope":5097,"src":"2157:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5071,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:18"},"returnParameters":{"id":5076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5097,"src":"2195:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5074,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:18"},"scope":6779,"src":"2138:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5124,"nodeType":"Block","src":"2713:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"2727:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5107,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5106,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:18","memberName":"max","nodeType":"MemberAccess","src":"2735:17:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5118,"nodeType":"IfStatement","src":"2723:105:18","trueBody":{"id":5117,"nodeType":"Block","src":"2754:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:18","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"2811:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5112,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"2775:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5116,"nodeType":"RevertStatement","src":"2768:49:18"}]}},{"expression":{"arguments":[{"id":5121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"2852:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5119,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:18","typeDescriptions":{}}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5104,"id":5123,"nodeType":"Return","src":"2837:21:18"}]},"documentation":{"id":5098,"nodeType":"StructuredDocumentation","src":"2362:280:18","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5125,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:18","nodeType":"FunctionDefinition","parameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"value","nameLocation":"2674:5:18","nodeType":"VariableDeclaration","scope":5125,"src":"2666:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5099,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:18"},"returnParameters":{"id":5104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5125,"src":"2704:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5102,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:18"},"scope":6779,"src":"2647:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5152,"nodeType":"Block","src":"3222:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"3236:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5135,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5134,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:18","memberName":"max","nodeType":"MemberAccess","src":"3244:17:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5146,"nodeType":"IfStatement","src":"3232:105:18","trueBody":{"id":5145,"nodeType":"Block","src":"3263:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:18","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"3320:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5140,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"3284:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5144,"nodeType":"RevertStatement","src":"3277:49:18"}]}},{"expression":{"arguments":[{"id":5149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"3361:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5147,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:18","typeDescriptions":{}}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5132,"id":5151,"nodeType":"Return","src":"3346:21:18"}]},"documentation":{"id":5126,"nodeType":"StructuredDocumentation","src":"2871:280:18","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5153,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:18","nodeType":"FunctionDefinition","parameters":{"id":5129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5128,"mutability":"mutable","name":"value","nameLocation":"3183:5:18","nodeType":"VariableDeclaration","scope":5153,"src":"3175:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:18"},"returnParameters":{"id":5132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5153,"src":"3213:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5130,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:18"},"scope":6779,"src":"3156:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5180,"nodeType":"Block","src":"3731:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"3745:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5163,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5162,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:18","memberName":"max","nodeType":"MemberAccess","src":"3753:17:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5174,"nodeType":"IfStatement","src":"3741:105:18","trueBody":{"id":5173,"nodeType":"Block","src":"3772:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:18","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"3829:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5168,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"3793:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5172,"nodeType":"RevertStatement","src":"3786:49:18"}]}},{"expression":{"arguments":[{"id":5177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"3870:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5175,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:18","typeDescriptions":{}}},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5160,"id":5179,"nodeType":"Return","src":"3855:21:18"}]},"documentation":{"id":5154,"nodeType":"StructuredDocumentation","src":"3380:280:18","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5181,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:18","nodeType":"FunctionDefinition","parameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5156,"mutability":"mutable","name":"value","nameLocation":"3692:5:18","nodeType":"VariableDeclaration","scope":5181,"src":"3684:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5155,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:18"},"returnParameters":{"id":5160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5181,"src":"3722:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5158,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:18"},"scope":6779,"src":"3665:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5208,"nodeType":"Block","src":"4240:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"4254:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5191,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5190,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:18","memberName":"max","nodeType":"MemberAccess","src":"4262:17:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5202,"nodeType":"IfStatement","src":"4250:105:18","trueBody":{"id":5201,"nodeType":"Block","src":"4281:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"4338:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5196,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"4302:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5200,"nodeType":"RevertStatement","src":"4295:49:18"}]}},{"expression":{"arguments":[{"id":5205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"4379:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5203,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:18","typeDescriptions":{}}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5188,"id":5207,"nodeType":"Return","src":"4364:21:18"}]},"documentation":{"id":5182,"nodeType":"StructuredDocumentation","src":"3889:280:18","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5209,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:18","nodeType":"FunctionDefinition","parameters":{"id":5185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5184,"mutability":"mutable","name":"value","nameLocation":"4201:5:18","nodeType":"VariableDeclaration","scope":5209,"src":"4193:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5183,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:18"},"returnParameters":{"id":5188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5209,"src":"4231:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5186,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:18"},"scope":6779,"src":"4174:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5236,"nodeType":"Block","src":"4749:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"4763:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5219,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5218,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:18","memberName":"max","nodeType":"MemberAccess","src":"4771:17:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5230,"nodeType":"IfStatement","src":"4759:105:18","trueBody":{"id":5229,"nodeType":"Block","src":"4790:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:18","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"4847:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5224,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"4811:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5228,"nodeType":"RevertStatement","src":"4804:49:18"}]}},{"expression":{"arguments":[{"id":5233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"4888:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5231,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:18","typeDescriptions":{}}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5216,"id":5235,"nodeType":"Return","src":"4873:21:18"}]},"documentation":{"id":5210,"nodeType":"StructuredDocumentation","src":"4398:280:18","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5237,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:18","nodeType":"FunctionDefinition","parameters":{"id":5213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5212,"mutability":"mutable","name":"value","nameLocation":"4710:5:18","nodeType":"VariableDeclaration","scope":5237,"src":"4702:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5211,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:18"},"returnParameters":{"id":5216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5237,"src":"4740:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5214,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:18"},"scope":6779,"src":"4683:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5264,"nodeType":"Block","src":"5258:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"5272:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5247,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5246,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:18","memberName":"max","nodeType":"MemberAccess","src":"5280:17:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5258,"nodeType":"IfStatement","src":"5268:105:18","trueBody":{"id":5257,"nodeType":"Block","src":"5299:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:18","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"5356:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5252,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"5320:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5256,"nodeType":"RevertStatement","src":"5313:49:18"}]}},{"expression":{"arguments":[{"id":5261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"5397:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5259,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:18","typeDescriptions":{}}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5244,"id":5263,"nodeType":"Return","src":"5382:21:18"}]},"documentation":{"id":5238,"nodeType":"StructuredDocumentation","src":"4907:280:18","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5265,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:18","nodeType":"FunctionDefinition","parameters":{"id":5241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5240,"mutability":"mutable","name":"value","nameLocation":"5219:5:18","nodeType":"VariableDeclaration","scope":5265,"src":"5211:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5239,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:18"},"returnParameters":{"id":5244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5265,"src":"5249:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5242,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:18"},"scope":6779,"src":"5192:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5292,"nodeType":"Block","src":"5767:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"5781:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5275,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5274,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:18","memberName":"max","nodeType":"MemberAccess","src":"5789:17:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5286,"nodeType":"IfStatement","src":"5777:105:18","trueBody":{"id":5285,"nodeType":"Block","src":"5808:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:18","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"5865:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5280,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"5829:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5284,"nodeType":"RevertStatement","src":"5822:49:18"}]}},{"expression":{"arguments":[{"id":5289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"5906:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5287,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:18","typeDescriptions":{}}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5272,"id":5291,"nodeType":"Return","src":"5891:21:18"}]},"documentation":{"id":5266,"nodeType":"StructuredDocumentation","src":"5416:280:18","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5293,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:18","nodeType":"FunctionDefinition","parameters":{"id":5269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5268,"mutability":"mutable","name":"value","nameLocation":"5728:5:18","nodeType":"VariableDeclaration","scope":5293,"src":"5720:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5267,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:18"},"returnParameters":{"id":5272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5293,"src":"5758:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5270,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:18"},"scope":6779,"src":"5701:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5320,"nodeType":"Block","src":"6276:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"6290:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5303,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5302,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:18","memberName":"max","nodeType":"MemberAccess","src":"6298:17:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5314,"nodeType":"IfStatement","src":"6286:105:18","trueBody":{"id":5313,"nodeType":"Block","src":"6317:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:18","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"6374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5308,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"6338:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5312,"nodeType":"RevertStatement","src":"6331:49:18"}]}},{"expression":{"arguments":[{"id":5317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"6415:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5315,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:18","typeDescriptions":{}}},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5300,"id":5319,"nodeType":"Return","src":"6400:21:18"}]},"documentation":{"id":5294,"nodeType":"StructuredDocumentation","src":"5925:280:18","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5321,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:18","nodeType":"FunctionDefinition","parameters":{"id":5297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5296,"mutability":"mutable","name":"value","nameLocation":"6237:5:18","nodeType":"VariableDeclaration","scope":5321,"src":"6229:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5295,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:18"},"returnParameters":{"id":5300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5321,"src":"6267:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5298,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:18"},"scope":6779,"src":"6210:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5348,"nodeType":"Block","src":"6785:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"6799:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5331,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5330,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:18","memberName":"max","nodeType":"MemberAccess","src":"6807:17:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5342,"nodeType":"IfStatement","src":"6795:105:18","trueBody":{"id":5341,"nodeType":"Block","src":"6826:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:18","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"6883:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5336,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"6847:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5340,"nodeType":"RevertStatement","src":"6840:49:18"}]}},{"expression":{"arguments":[{"id":5345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"6924:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5343,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:18","typeDescriptions":{}}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5328,"id":5347,"nodeType":"Return","src":"6909:21:18"}]},"documentation":{"id":5322,"nodeType":"StructuredDocumentation","src":"6434:280:18","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5349,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:18","nodeType":"FunctionDefinition","parameters":{"id":5325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5324,"mutability":"mutable","name":"value","nameLocation":"6746:5:18","nodeType":"VariableDeclaration","scope":5349,"src":"6738:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5323,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:18"},"returnParameters":{"id":5328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5349,"src":"6776:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5326,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:18"},"scope":6779,"src":"6719:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5376,"nodeType":"Block","src":"7294:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"7308:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5359,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5358,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:18","memberName":"max","nodeType":"MemberAccess","src":"7316:17:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5370,"nodeType":"IfStatement","src":"7304:105:18","trueBody":{"id":5369,"nodeType":"Block","src":"7335:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"7392:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5364,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"7356:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5368,"nodeType":"RevertStatement","src":"7349:49:18"}]}},{"expression":{"arguments":[{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"7433:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5371,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:18","typeDescriptions":{}}},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5356,"id":5375,"nodeType":"Return","src":"7418:21:18"}]},"documentation":{"id":5350,"nodeType":"StructuredDocumentation","src":"6943:280:18","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5377,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:18","nodeType":"FunctionDefinition","parameters":{"id":5353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5352,"mutability":"mutable","name":"value","nameLocation":"7255:5:18","nodeType":"VariableDeclaration","scope":5377,"src":"7247:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5351,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:18"},"returnParameters":{"id":5356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5377,"src":"7285:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5354,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:18"},"scope":6779,"src":"7228:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5404,"nodeType":"Block","src":"7803:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"7817:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5387,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5386,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:18","memberName":"max","nodeType":"MemberAccess","src":"7825:17:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5398,"nodeType":"IfStatement","src":"7813:105:18","trueBody":{"id":5397,"nodeType":"Block","src":"7844:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:18","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"7901:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5392,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"7865:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5396,"nodeType":"RevertStatement","src":"7858:49:18"}]}},{"expression":{"arguments":[{"id":5401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"7942:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5399,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:18","typeDescriptions":{}}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5384,"id":5403,"nodeType":"Return","src":"7927:21:18"}]},"documentation":{"id":5378,"nodeType":"StructuredDocumentation","src":"7452:280:18","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5405,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:18","nodeType":"FunctionDefinition","parameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5380,"mutability":"mutable","name":"value","nameLocation":"7764:5:18","nodeType":"VariableDeclaration","scope":5405,"src":"7756:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5379,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:18"},"returnParameters":{"id":5384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5405,"src":"7794:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5382,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:18"},"scope":6779,"src":"7737:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5432,"nodeType":"Block","src":"8312:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"8326:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5415,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5414,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:18","memberName":"max","nodeType":"MemberAccess","src":"8334:17:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5426,"nodeType":"IfStatement","src":"8322:105:18","trueBody":{"id":5425,"nodeType":"Block","src":"8353:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:18","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"8410:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5420,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"8374:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5424,"nodeType":"RevertStatement","src":"8367:49:18"}]}},{"expression":{"arguments":[{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"8451:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5427,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:18","typeDescriptions":{}}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5412,"id":5431,"nodeType":"Return","src":"8436:21:18"}]},"documentation":{"id":5406,"nodeType":"StructuredDocumentation","src":"7961:280:18","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5433,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:18","nodeType":"FunctionDefinition","parameters":{"id":5409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5408,"mutability":"mutable","name":"value","nameLocation":"8273:5:18","nodeType":"VariableDeclaration","scope":5433,"src":"8265:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5407,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:18"},"returnParameters":{"id":5412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5433,"src":"8303:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5410,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:18"},"scope":6779,"src":"8246:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5460,"nodeType":"Block","src":"8821:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"8835:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5443,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5442,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:18","memberName":"max","nodeType":"MemberAccess","src":"8843:17:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5454,"nodeType":"IfStatement","src":"8831:105:18","trueBody":{"id":5453,"nodeType":"Block","src":"8862:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:18","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"8919:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5448,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"8883:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5452,"nodeType":"RevertStatement","src":"8876:49:18"}]}},{"expression":{"arguments":[{"id":5457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"8960:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5455,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:18","typeDescriptions":{}}},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5440,"id":5459,"nodeType":"Return","src":"8945:21:18"}]},"documentation":{"id":5434,"nodeType":"StructuredDocumentation","src":"8470:280:18","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5461,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:18","nodeType":"FunctionDefinition","parameters":{"id":5437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5436,"mutability":"mutable","name":"value","nameLocation":"8782:5:18","nodeType":"VariableDeclaration","scope":5461,"src":"8774:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5435,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:18"},"returnParameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5461,"src":"8812:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5438,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:18"},"scope":6779,"src":"8755:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5488,"nodeType":"Block","src":"9330:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"9344:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5471,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5470,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:18","memberName":"max","nodeType":"MemberAccess","src":"9352:17:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5482,"nodeType":"IfStatement","src":"9340:105:18","trueBody":{"id":5481,"nodeType":"Block","src":"9371:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"9428:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5476,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"9392:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5480,"nodeType":"RevertStatement","src":"9385:49:18"}]}},{"expression":{"arguments":[{"id":5485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"9469:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5483,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:18","typeDescriptions":{}}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5468,"id":5487,"nodeType":"Return","src":"9454:21:18"}]},"documentation":{"id":5462,"nodeType":"StructuredDocumentation","src":"8979:280:18","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5489,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:18","nodeType":"FunctionDefinition","parameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"value","nameLocation":"9291:5:18","nodeType":"VariableDeclaration","scope":5489,"src":"9283:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5463,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:18"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5489,"src":"9321:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5466,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:18"},"scope":6779,"src":"9264:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5516,"nodeType":"Block","src":"9839:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"9853:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5499,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5498,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:18","memberName":"max","nodeType":"MemberAccess","src":"9861:17:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5510,"nodeType":"IfStatement","src":"9849:105:18","trueBody":{"id":5509,"nodeType":"Block","src":"9880:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:18","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"9937:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5504,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"9901:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5508,"nodeType":"RevertStatement","src":"9894:49:18"}]}},{"expression":{"arguments":[{"id":5513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"9978:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5511,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:18","typeDescriptions":{}}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5496,"id":5515,"nodeType":"Return","src":"9963:21:18"}]},"documentation":{"id":5490,"nodeType":"StructuredDocumentation","src":"9488:280:18","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5517,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:18","nodeType":"FunctionDefinition","parameters":{"id":5493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5492,"mutability":"mutable","name":"value","nameLocation":"9800:5:18","nodeType":"VariableDeclaration","scope":5517,"src":"9792:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5491,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:18"},"returnParameters":{"id":5496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5517,"src":"9830:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5494,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:18"},"scope":6779,"src":"9773:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5544,"nodeType":"Block","src":"10348:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"10362:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5527,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5526,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:18","memberName":"max","nodeType":"MemberAccess","src":"10370:17:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5538,"nodeType":"IfStatement","src":"10358:105:18","trueBody":{"id":5537,"nodeType":"Block","src":"10389:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:18","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"10446:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5532,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"10410:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5536,"nodeType":"RevertStatement","src":"10403:49:18"}]}},{"expression":{"arguments":[{"id":5541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"10487:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5539,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:18","typeDescriptions":{}}},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5524,"id":5543,"nodeType":"Return","src":"10472:21:18"}]},"documentation":{"id":5518,"nodeType":"StructuredDocumentation","src":"9997:280:18","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5545,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:18","nodeType":"FunctionDefinition","parameters":{"id":5521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5520,"mutability":"mutable","name":"value","nameLocation":"10309:5:18","nodeType":"VariableDeclaration","scope":5545,"src":"10301:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5519,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:18"},"returnParameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5545,"src":"10339:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5522,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:18"},"scope":6779,"src":"10282:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5572,"nodeType":"Block","src":"10857:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"10871:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5555,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5554,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:18","memberName":"max","nodeType":"MemberAccess","src":"10879:17:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5566,"nodeType":"IfStatement","src":"10867:105:18","trueBody":{"id":5565,"nodeType":"Block","src":"10898:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:18","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"10955:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5560,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"10919:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5564,"nodeType":"RevertStatement","src":"10912:49:18"}]}},{"expression":{"arguments":[{"id":5569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"10996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5567,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:18","typeDescriptions":{}}},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5552,"id":5571,"nodeType":"Return","src":"10981:21:18"}]},"documentation":{"id":5546,"nodeType":"StructuredDocumentation","src":"10506:280:18","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5573,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:18","nodeType":"FunctionDefinition","parameters":{"id":5549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5548,"mutability":"mutable","name":"value","nameLocation":"10818:5:18","nodeType":"VariableDeclaration","scope":5573,"src":"10810:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5547,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:18"},"returnParameters":{"id":5552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5573,"src":"10848:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5550,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:18"},"scope":6779,"src":"10791:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5600,"nodeType":"Block","src":"11360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"11374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5583,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5582,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:18","memberName":"max","nodeType":"MemberAccess","src":"11382:16:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5594,"nodeType":"IfStatement","src":"11370:103:18","trueBody":{"id":5593,"nodeType":"Block","src":"11400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"11456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5588,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"11421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5592,"nodeType":"RevertStatement","src":"11414:48:18"}]}},{"expression":{"arguments":[{"id":5597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"11496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5595,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:18","typeDescriptions":{}}},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5580,"id":5599,"nodeType":"Return","src":"11482:20:18"}]},"documentation":{"id":5574,"nodeType":"StructuredDocumentation","src":"11015:276:18","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5601,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5576,"mutability":"mutable","name":"value","nameLocation":"11322:5:18","nodeType":"VariableDeclaration","scope":5601,"src":"11314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5575,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:18"},"returnParameters":{"id":5580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5601,"src":"11352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5578,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:18"},"scope":6779,"src":"11296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5628,"nodeType":"Block","src":"11860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"11874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5611,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5610,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:18","memberName":"max","nodeType":"MemberAccess","src":"11882:16:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5622,"nodeType":"IfStatement","src":"11870:103:18","trueBody":{"id":5621,"nodeType":"Block","src":"11900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"11956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5616,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"11921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5620,"nodeType":"RevertStatement","src":"11914:48:18"}]}},{"expression":{"arguments":[{"id":5625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"11996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5623,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:18","typeDescriptions":{}}},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5608,"id":5627,"nodeType":"Return","src":"11982:20:18"}]},"documentation":{"id":5602,"nodeType":"StructuredDocumentation","src":"11515:276:18","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5629,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5604,"mutability":"mutable","name":"value","nameLocation":"11822:5:18","nodeType":"VariableDeclaration","scope":5629,"src":"11814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5603,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:18"},"returnParameters":{"id":5608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5629,"src":"11852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5606,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:18"},"scope":6779,"src":"11796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5656,"nodeType":"Block","src":"12360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"12374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5639,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5638,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:18","memberName":"max","nodeType":"MemberAccess","src":"12382:16:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5650,"nodeType":"IfStatement","src":"12370:103:18","trueBody":{"id":5649,"nodeType":"Block","src":"12400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"12456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5644,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"12421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5648,"nodeType":"RevertStatement","src":"12414:48:18"}]}},{"expression":{"arguments":[{"id":5653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"12496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5651,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:18","typeDescriptions":{}}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5636,"id":5655,"nodeType":"Return","src":"12482:20:18"}]},"documentation":{"id":5630,"nodeType":"StructuredDocumentation","src":"12015:276:18","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5657,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5632,"mutability":"mutable","name":"value","nameLocation":"12322:5:18","nodeType":"VariableDeclaration","scope":5657,"src":"12314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:18"},"returnParameters":{"id":5636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5657,"src":"12352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5634,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:18"},"scope":6779,"src":"12296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5684,"nodeType":"Block","src":"12860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"12874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5667,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5666,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:18","memberName":"max","nodeType":"MemberAccess","src":"12882:16:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5678,"nodeType":"IfStatement","src":"12870:103:18","trueBody":{"id":5677,"nodeType":"Block","src":"12900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"12956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5672,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"12921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5676,"nodeType":"RevertStatement","src":"12914:48:18"}]}},{"expression":{"arguments":[{"id":5681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"12996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5679,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:18","typeDescriptions":{}}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5664,"id":5683,"nodeType":"Return","src":"12982:20:18"}]},"documentation":{"id":5658,"nodeType":"StructuredDocumentation","src":"12515:276:18","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5685,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5660,"mutability":"mutable","name":"value","nameLocation":"12822:5:18","nodeType":"VariableDeclaration","scope":5685,"src":"12814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5659,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:18"},"returnParameters":{"id":5664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5685,"src":"12852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5662,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:18"},"scope":6779,"src":"12796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5712,"nodeType":"Block","src":"13360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"13374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5695,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5694,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:18","memberName":"max","nodeType":"MemberAccess","src":"13382:16:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5706,"nodeType":"IfStatement","src":"13370:103:18","trueBody":{"id":5705,"nodeType":"Block","src":"13400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"13456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5700,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"13421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5704,"nodeType":"RevertStatement","src":"13414:48:18"}]}},{"expression":{"arguments":[{"id":5709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"13496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5707,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:18","typeDescriptions":{}}},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5692,"id":5711,"nodeType":"Return","src":"13482:20:18"}]},"documentation":{"id":5686,"nodeType":"StructuredDocumentation","src":"13015:276:18","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5713,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5688,"mutability":"mutable","name":"value","nameLocation":"13322:5:18","nodeType":"VariableDeclaration","scope":5713,"src":"13314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5687,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:18"},"returnParameters":{"id":5692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5713,"src":"13352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5690,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:18"},"scope":6779,"src":"13296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5740,"nodeType":"Block","src":"13860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"13874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5723,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5722,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:18","memberName":"max","nodeType":"MemberAccess","src":"13882:16:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5734,"nodeType":"IfStatement","src":"13870:103:18","trueBody":{"id":5733,"nodeType":"Block","src":"13900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"13956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5728,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"13921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5732,"nodeType":"RevertStatement","src":"13914:48:18"}]}},{"expression":{"arguments":[{"id":5737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"13996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5735,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:18","typeDescriptions":{}}},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5720,"id":5739,"nodeType":"Return","src":"13982:20:18"}]},"documentation":{"id":5714,"nodeType":"StructuredDocumentation","src":"13515:276:18","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5741,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5716,"mutability":"mutable","name":"value","nameLocation":"13822:5:18","nodeType":"VariableDeclaration","scope":5741,"src":"13814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5715,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:18"},"returnParameters":{"id":5720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5741,"src":"13852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5718,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:18"},"scope":6779,"src":"13796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5768,"nodeType":"Block","src":"14360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"14374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5751,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5750,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:18","memberName":"max","nodeType":"MemberAccess","src":"14382:16:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5762,"nodeType":"IfStatement","src":"14370:103:18","trueBody":{"id":5761,"nodeType":"Block","src":"14400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"14456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5756,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"14421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5760,"nodeType":"RevertStatement","src":"14414:48:18"}]}},{"expression":{"arguments":[{"id":5765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"14496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5763,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:18","typeDescriptions":{}}},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5748,"id":5767,"nodeType":"Return","src":"14482:20:18"}]},"documentation":{"id":5742,"nodeType":"StructuredDocumentation","src":"14015:276:18","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5769,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5744,"mutability":"mutable","name":"value","nameLocation":"14322:5:18","nodeType":"VariableDeclaration","scope":5769,"src":"14314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5743,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:18"},"returnParameters":{"id":5748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5769,"src":"14352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5746,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:18"},"scope":6779,"src":"14296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5796,"nodeType":"Block","src":"14860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"14874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5779,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5778,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:18","memberName":"max","nodeType":"MemberAccess","src":"14882:16:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5790,"nodeType":"IfStatement","src":"14870:103:18","trueBody":{"id":5789,"nodeType":"Block","src":"14900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"14956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5784,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"14921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5788,"nodeType":"RevertStatement","src":"14914:48:18"}]}},{"expression":{"arguments":[{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"14996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5791,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:18","typeDescriptions":{}}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5776,"id":5795,"nodeType":"Return","src":"14982:20:18"}]},"documentation":{"id":5770,"nodeType":"StructuredDocumentation","src":"14515:276:18","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5797,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5772,"mutability":"mutable","name":"value","nameLocation":"14822:5:18","nodeType":"VariableDeclaration","scope":5797,"src":"14814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5771,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:18"},"returnParameters":{"id":5776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5797,"src":"14852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5774,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:18"},"scope":6779,"src":"14796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5824,"nodeType":"Block","src":"15360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"15374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5807,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5806,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:18","memberName":"max","nodeType":"MemberAccess","src":"15382:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5818,"nodeType":"IfStatement","src":"15370:103:18","trueBody":{"id":5817,"nodeType":"Block","src":"15400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"15456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5812,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"15421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5816,"nodeType":"RevertStatement","src":"15414:48:18"}]}},{"expression":{"arguments":[{"id":5821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"15496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5819,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:18","typeDescriptions":{}}},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5804,"id":5823,"nodeType":"Return","src":"15482:20:18"}]},"documentation":{"id":5798,"nodeType":"StructuredDocumentation","src":"15015:276:18","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5825,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5800,"mutability":"mutable","name":"value","nameLocation":"15322:5:18","nodeType":"VariableDeclaration","scope":5825,"src":"15314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5799,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:18"},"returnParameters":{"id":5804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5825,"src":"15352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5802,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:18"},"scope":6779,"src":"15296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5852,"nodeType":"Block","src":"15860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"15874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5835,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5834,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:18","memberName":"max","nodeType":"MemberAccess","src":"15882:16:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5846,"nodeType":"IfStatement","src":"15870:103:18","trueBody":{"id":5845,"nodeType":"Block","src":"15900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"15956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5840,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"15921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5844,"nodeType":"RevertStatement","src":"15914:48:18"}]}},{"expression":{"arguments":[{"id":5849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"15996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5847,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:18","typeDescriptions":{}}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5832,"id":5851,"nodeType":"Return","src":"15982:20:18"}]},"documentation":{"id":5826,"nodeType":"StructuredDocumentation","src":"15515:276:18","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5853,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5828,"mutability":"mutable","name":"value","nameLocation":"15822:5:18","nodeType":"VariableDeclaration","scope":5853,"src":"15814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5827,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:18"},"returnParameters":{"id":5832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5853,"src":"15852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5830,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:18"},"scope":6779,"src":"15796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5880,"nodeType":"Block","src":"16360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"16374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5863,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5862,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:18","memberName":"max","nodeType":"MemberAccess","src":"16382:16:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5874,"nodeType":"IfStatement","src":"16370:103:18","trueBody":{"id":5873,"nodeType":"Block","src":"16400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"16456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5868,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"16421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5872,"nodeType":"RevertStatement","src":"16414:48:18"}]}},{"expression":{"arguments":[{"id":5877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"16496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5875,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:18","typeDescriptions":{}}},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5860,"id":5879,"nodeType":"Return","src":"16482:20:18"}]},"documentation":{"id":5854,"nodeType":"StructuredDocumentation","src":"16015:276:18","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5881,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5856,"mutability":"mutable","name":"value","nameLocation":"16322:5:18","nodeType":"VariableDeclaration","scope":5881,"src":"16314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5855,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:18"},"returnParameters":{"id":5860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5881,"src":"16352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5858,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:18"},"scope":6779,"src":"16296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5908,"nodeType":"Block","src":"16854:146:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"16868:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5891,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:18","memberName":"max","nodeType":"MemberAccess","src":"16876:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5902,"nodeType":"IfStatement","src":"16864:101:18","trueBody":{"id":5901,"nodeType":"Block","src":"16893:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"16948:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5896,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"16914:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5900,"nodeType":"RevertStatement","src":"16907:47:18"}]}},{"expression":{"arguments":[{"id":5905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"16987:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5903,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:18","typeDescriptions":{}}},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5888,"id":5907,"nodeType":"Return","src":"16974:19:18"}]},"documentation":{"id":5882,"nodeType":"StructuredDocumentation","src":"16515:272:18","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5909,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:18","nodeType":"FunctionDefinition","parameters":{"id":5885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5884,"mutability":"mutable","name":"value","nameLocation":"16817:5:18","nodeType":"VariableDeclaration","scope":5909,"src":"16809:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5883,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:18"},"returnParameters":{"id":5888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5909,"src":"16847:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5886,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:18"},"scope":6779,"src":"16792:208:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5931,"nodeType":"Block","src":"17236:128:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"17250:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5925,"nodeType":"IfStatement","src":"17246:81:18","trueBody":{"id":5924,"nodeType":"Block","src":"17261:66:18","statements":[{"errorCall":{"arguments":[{"id":5921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"17310:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5920,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"17282:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5923,"nodeType":"RevertStatement","src":"17275:41:18"}]}},{"expression":{"arguments":[{"id":5928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"17351:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5926,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:18","typeDescriptions":{}}},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5916,"id":5930,"nodeType":"Return","src":"17336:21:18"}]},"documentation":{"id":5910,"nodeType":"StructuredDocumentation","src":"17006:160:18","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5932,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:18","nodeType":"FunctionDefinition","parameters":{"id":5913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5912,"mutability":"mutable","name":"value","nameLocation":"17197:5:18","nodeType":"VariableDeclaration","scope":5932,"src":"17190:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5911,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:18"},"returnParameters":{"id":5916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5932,"src":"17227:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5914,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:18"},"scope":6779,"src":"17171:193:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5957,"nodeType":"Block","src":"17761:150:18","statements":[{"expression":{"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5940,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"17771:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"17791:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5941,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:18","typeDescriptions":{}}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5946,"nodeType":"ExpressionStatement","src":"17771:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5947,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"17811:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"17825:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5956,"nodeType":"IfStatement","src":"17807:98:18","trueBody":{"id":5955,"nodeType":"Block","src":"17832:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:18","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"17888:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5950,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"17853:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5954,"nodeType":"RevertStatement","src":"17846:48:18"}]}}]},"documentation":{"id":5933,"nodeType":"StructuredDocumentation","src":"17370:312:18","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5958,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:18","nodeType":"FunctionDefinition","parameters":{"id":5936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5935,"mutability":"mutable","name":"value","nameLocation":"17712:5:18","nodeType":"VariableDeclaration","scope":5958,"src":"17705:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5934,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:18"},"returnParameters":{"id":5939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5938,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:18","nodeType":"VariableDeclaration","scope":5958,"src":"17742:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5937,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:18"},"scope":6779,"src":"17687:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5983,"nodeType":"Block","src":"18308:150:18","statements":[{"expression":{"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5966,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"18318:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"18338:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5967,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:18","typeDescriptions":{}}},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5972,"nodeType":"ExpressionStatement","src":"18318:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5973,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"18358:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"18372:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5982,"nodeType":"IfStatement","src":"18354:98:18","trueBody":{"id":5981,"nodeType":"Block","src":"18379:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:18","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"18435:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5976,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"18400:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5980,"nodeType":"RevertStatement","src":"18393:48:18"}]}}]},"documentation":{"id":5959,"nodeType":"StructuredDocumentation","src":"17917:312:18","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5984,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:18","nodeType":"FunctionDefinition","parameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"value","nameLocation":"18259:5:18","nodeType":"VariableDeclaration","scope":5984,"src":"18252:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5960,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:18"},"returnParameters":{"id":5965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5964,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:18","nodeType":"VariableDeclaration","scope":5984,"src":"18289:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5963,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:18"},"scope":6779,"src":"18234:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6009,"nodeType":"Block","src":"18855:150:18","statements":[{"expression":{"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5992,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"18865:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"18885:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5993,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:18","typeDescriptions":{}}},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5998,"nodeType":"ExpressionStatement","src":"18865:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5999,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"18905:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"18919:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6008,"nodeType":"IfStatement","src":"18901:98:18","trueBody":{"id":6007,"nodeType":"Block","src":"18926:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:18","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"18982:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6002,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"18947:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6006,"nodeType":"RevertStatement","src":"18940:48:18"}]}}]},"documentation":{"id":5985,"nodeType":"StructuredDocumentation","src":"18464:312:18","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6010,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:18","nodeType":"FunctionDefinition","parameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"value","nameLocation":"18806:5:18","nodeType":"VariableDeclaration","scope":6010,"src":"18799:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5986,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:18"},"returnParameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5990,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:18","nodeType":"VariableDeclaration","scope":6010,"src":"18836:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5989,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:18"},"scope":6779,"src":"18781:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6035,"nodeType":"Block","src":"19402:150:18","statements":[{"expression":{"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6018,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"19412:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"19432:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6019,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:18","typeDescriptions":{}}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6024,"nodeType":"ExpressionStatement","src":"19412:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6025,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"19452:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"19466:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6034,"nodeType":"IfStatement","src":"19448:98:18","trueBody":{"id":6033,"nodeType":"Block","src":"19473:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:18","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"19529:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6028,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"19494:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6032,"nodeType":"RevertStatement","src":"19487:48:18"}]}}]},"documentation":{"id":6011,"nodeType":"StructuredDocumentation","src":"19011:312:18","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6036,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:18","nodeType":"FunctionDefinition","parameters":{"id":6014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6013,"mutability":"mutable","name":"value","nameLocation":"19353:5:18","nodeType":"VariableDeclaration","scope":6036,"src":"19346:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6012,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:18"},"returnParameters":{"id":6017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6016,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:18","nodeType":"VariableDeclaration","scope":6036,"src":"19383:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6015,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:18"},"scope":6779,"src":"19328:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6061,"nodeType":"Block","src":"19949:150:18","statements":[{"expression":{"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6044,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"19959:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"19979:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6045,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:18","typeDescriptions":{}}},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6050,"nodeType":"ExpressionStatement","src":"19959:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6051,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"19999:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"20013:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6060,"nodeType":"IfStatement","src":"19995:98:18","trueBody":{"id":6059,"nodeType":"Block","src":"20020:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:18","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"20076:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6054,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"20041:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6058,"nodeType":"RevertStatement","src":"20034:48:18"}]}}]},"documentation":{"id":6037,"nodeType":"StructuredDocumentation","src":"19558:312:18","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6062,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:18","nodeType":"FunctionDefinition","parameters":{"id":6040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6039,"mutability":"mutable","name":"value","nameLocation":"19900:5:18","nodeType":"VariableDeclaration","scope":6062,"src":"19893:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6038,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:18"},"returnParameters":{"id":6043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6042,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:18","nodeType":"VariableDeclaration","scope":6062,"src":"19930:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6041,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:18"},"scope":6779,"src":"19875:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6087,"nodeType":"Block","src":"20496:150:18","statements":[{"expression":{"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6070,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"20506:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"20526:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6071,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:18","typeDescriptions":{}}},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6076,"nodeType":"ExpressionStatement","src":"20506:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6077,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"20546:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"20560:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6086,"nodeType":"IfStatement","src":"20542:98:18","trueBody":{"id":6085,"nodeType":"Block","src":"20567:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"20623:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6080,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"20588:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6084,"nodeType":"RevertStatement","src":"20581:48:18"}]}}]},"documentation":{"id":6063,"nodeType":"StructuredDocumentation","src":"20105:312:18","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6088,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:18","nodeType":"FunctionDefinition","parameters":{"id":6066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6065,"mutability":"mutable","name":"value","nameLocation":"20447:5:18","nodeType":"VariableDeclaration","scope":6088,"src":"20440:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6064,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:18"},"returnParameters":{"id":6069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6068,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:18","nodeType":"VariableDeclaration","scope":6088,"src":"20477:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6067,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:18"},"scope":6779,"src":"20422:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6113,"nodeType":"Block","src":"21043:150:18","statements":[{"expression":{"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6096,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"21053:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"21073:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6097,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:18","typeDescriptions":{}}},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6102,"nodeType":"ExpressionStatement","src":"21053:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6103,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"21093:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"21107:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6112,"nodeType":"IfStatement","src":"21089:98:18","trueBody":{"id":6111,"nodeType":"Block","src":"21114:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:18","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"21170:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6106,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"21135:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6110,"nodeType":"RevertStatement","src":"21128:48:18"}]}}]},"documentation":{"id":6089,"nodeType":"StructuredDocumentation","src":"20652:312:18","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6114,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:18","nodeType":"FunctionDefinition","parameters":{"id":6092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6091,"mutability":"mutable","name":"value","nameLocation":"20994:5:18","nodeType":"VariableDeclaration","scope":6114,"src":"20987:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6090,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:18"},"returnParameters":{"id":6095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6094,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:18","nodeType":"VariableDeclaration","scope":6114,"src":"21024:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6093,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:18"},"scope":6779,"src":"20969:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6139,"nodeType":"Block","src":"21590:150:18","statements":[{"expression":{"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6122,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6120,"src":"21600:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"21620:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6123,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:18","typeDescriptions":{}}},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6128,"nodeType":"ExpressionStatement","src":"21600:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6129,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6120,"src":"21640:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"21654:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6138,"nodeType":"IfStatement","src":"21636:98:18","trueBody":{"id":6137,"nodeType":"Block","src":"21661:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:18","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"21717:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6132,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"21682:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6136,"nodeType":"RevertStatement","src":"21675:48:18"}]}}]},"documentation":{"id":6115,"nodeType":"StructuredDocumentation","src":"21199:312:18","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6140,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:18","nodeType":"FunctionDefinition","parameters":{"id":6118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6117,"mutability":"mutable","name":"value","nameLocation":"21541:5:18","nodeType":"VariableDeclaration","scope":6140,"src":"21534:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6116,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:18"},"returnParameters":{"id":6121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6120,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:18","nodeType":"VariableDeclaration","scope":6140,"src":"21571:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6119,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:18"},"scope":6779,"src":"21516:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6165,"nodeType":"Block","src":"22137:150:18","statements":[{"expression":{"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6148,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"22147:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"22167:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6149,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:18","typeDescriptions":{}}},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6154,"nodeType":"ExpressionStatement","src":"22147:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6155,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"22187:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"22201:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6164,"nodeType":"IfStatement","src":"22183:98:18","trueBody":{"id":6163,"nodeType":"Block","src":"22208:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:18","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"22264:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6158,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"22229:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6162,"nodeType":"RevertStatement","src":"22222:48:18"}]}}]},"documentation":{"id":6141,"nodeType":"StructuredDocumentation","src":"21746:312:18","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6166,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:18","nodeType":"FunctionDefinition","parameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"value","nameLocation":"22088:5:18","nodeType":"VariableDeclaration","scope":6166,"src":"22081:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6142,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:18"},"returnParameters":{"id":6147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6146,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:18","nodeType":"VariableDeclaration","scope":6166,"src":"22118:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6145,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:18"},"scope":6779,"src":"22063:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6191,"nodeType":"Block","src":"22684:150:18","statements":[{"expression":{"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6174,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"22694:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"22714:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6175,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:18","typeDescriptions":{}}},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6180,"nodeType":"ExpressionStatement","src":"22694:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6181,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"22734:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"22748:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6190,"nodeType":"IfStatement","src":"22730:98:18","trueBody":{"id":6189,"nodeType":"Block","src":"22755:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:18","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"22811:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6184,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"22776:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6188,"nodeType":"RevertStatement","src":"22769:48:18"}]}}]},"documentation":{"id":6167,"nodeType":"StructuredDocumentation","src":"22293:312:18","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6192,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:18","nodeType":"FunctionDefinition","parameters":{"id":6170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6169,"mutability":"mutable","name":"value","nameLocation":"22635:5:18","nodeType":"VariableDeclaration","scope":6192,"src":"22628:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6168,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:18"},"returnParameters":{"id":6173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6172,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:18","nodeType":"VariableDeclaration","scope":6192,"src":"22665:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6171,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:18"},"scope":6779,"src":"22610:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6217,"nodeType":"Block","src":"23231:150:18","statements":[{"expression":{"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6200,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6198,"src":"23241:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"23261:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6201,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:18","typeDescriptions":{}}},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6206,"nodeType":"ExpressionStatement","src":"23241:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6207,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6198,"src":"23281:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"23295:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6216,"nodeType":"IfStatement","src":"23277:98:18","trueBody":{"id":6215,"nodeType":"Block","src":"23302:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:18","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"23358:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6210,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"23323:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6214,"nodeType":"RevertStatement","src":"23316:48:18"}]}}]},"documentation":{"id":6193,"nodeType":"StructuredDocumentation","src":"22840:312:18","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6218,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:18","nodeType":"FunctionDefinition","parameters":{"id":6196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6195,"mutability":"mutable","name":"value","nameLocation":"23182:5:18","nodeType":"VariableDeclaration","scope":6218,"src":"23175:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6194,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:18"},"returnParameters":{"id":6199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6198,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:18","nodeType":"VariableDeclaration","scope":6218,"src":"23212:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6197,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:18"},"scope":6779,"src":"23157:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6243,"nodeType":"Block","src":"23778:150:18","statements":[{"expression":{"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6226,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"23788:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"23808:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6227,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:18","typeDescriptions":{}}},"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6232,"nodeType":"ExpressionStatement","src":"23788:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6233,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"23828:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"23842:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6242,"nodeType":"IfStatement","src":"23824:98:18","trueBody":{"id":6241,"nodeType":"Block","src":"23849:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"23905:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6236,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"23870:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6240,"nodeType":"RevertStatement","src":"23863:48:18"}]}}]},"documentation":{"id":6219,"nodeType":"StructuredDocumentation","src":"23387:312:18","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6244,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:18","nodeType":"FunctionDefinition","parameters":{"id":6222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6221,"mutability":"mutable","name":"value","nameLocation":"23729:5:18","nodeType":"VariableDeclaration","scope":6244,"src":"23722:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6220,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:18"},"returnParameters":{"id":6225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6224,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:18","nodeType":"VariableDeclaration","scope":6244,"src":"23759:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6223,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:18"},"scope":6779,"src":"23704:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6269,"nodeType":"Block","src":"24325:150:18","statements":[{"expression":{"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6252,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"24335:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"24355:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6253,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:18","typeDescriptions":{}}},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6258,"nodeType":"ExpressionStatement","src":"24335:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6259,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"24375:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"24389:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6268,"nodeType":"IfStatement","src":"24371:98:18","trueBody":{"id":6267,"nodeType":"Block","src":"24396:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:18","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"24452:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6262,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"24417:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6266,"nodeType":"RevertStatement","src":"24410:48:18"}]}}]},"documentation":{"id":6245,"nodeType":"StructuredDocumentation","src":"23934:312:18","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6270,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:18","nodeType":"FunctionDefinition","parameters":{"id":6248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6247,"mutability":"mutable","name":"value","nameLocation":"24276:5:18","nodeType":"VariableDeclaration","scope":6270,"src":"24269:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6246,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:18"},"returnParameters":{"id":6251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6250,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:18","nodeType":"VariableDeclaration","scope":6270,"src":"24306:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6249,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:18"},"scope":6779,"src":"24251:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6295,"nodeType":"Block","src":"24872:150:18","statements":[{"expression":{"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6278,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"24882:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"24902:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6279,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:18","typeDescriptions":{}}},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6284,"nodeType":"ExpressionStatement","src":"24882:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6285,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"24922:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"24936:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6294,"nodeType":"IfStatement","src":"24918:98:18","trueBody":{"id":6293,"nodeType":"Block","src":"24943:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:18","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"24999:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6288,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"24964:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6292,"nodeType":"RevertStatement","src":"24957:48:18"}]}}]},"documentation":{"id":6271,"nodeType":"StructuredDocumentation","src":"24481:312:18","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6296,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:18","nodeType":"FunctionDefinition","parameters":{"id":6274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6273,"mutability":"mutable","name":"value","nameLocation":"24823:5:18","nodeType":"VariableDeclaration","scope":6296,"src":"24816:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6272,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:18"},"returnParameters":{"id":6277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6276,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:18","nodeType":"VariableDeclaration","scope":6296,"src":"24853:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6275,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:18"},"scope":6779,"src":"24798:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6321,"nodeType":"Block","src":"25419:150:18","statements":[{"expression":{"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6304,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6302,"src":"25429:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"25449:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6305,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:18","typeDescriptions":{}}},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6310,"nodeType":"ExpressionStatement","src":"25429:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6311,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6302,"src":"25469:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"25483:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6320,"nodeType":"IfStatement","src":"25465:98:18","trueBody":{"id":6319,"nodeType":"Block","src":"25490:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:18","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"25546:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6314,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"25511:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6318,"nodeType":"RevertStatement","src":"25504:48:18"}]}}]},"documentation":{"id":6297,"nodeType":"StructuredDocumentation","src":"25028:312:18","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6322,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:18","nodeType":"FunctionDefinition","parameters":{"id":6300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6299,"mutability":"mutable","name":"value","nameLocation":"25370:5:18","nodeType":"VariableDeclaration","scope":6322,"src":"25363:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6298,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:18"},"returnParameters":{"id":6303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6302,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:18","nodeType":"VariableDeclaration","scope":6322,"src":"25400:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6301,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:18"},"scope":6779,"src":"25345:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6347,"nodeType":"Block","src":"25966:150:18","statements":[{"expression":{"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6330,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6328,"src":"25976:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"25996:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6331,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:18","typeDescriptions":{}}},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6336,"nodeType":"ExpressionStatement","src":"25976:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6328,"src":"26016:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"26030:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6346,"nodeType":"IfStatement","src":"26012:98:18","trueBody":{"id":6345,"nodeType":"Block","src":"26037:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"26093:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6340,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"26058:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6344,"nodeType":"RevertStatement","src":"26051:48:18"}]}}]},"documentation":{"id":6323,"nodeType":"StructuredDocumentation","src":"25575:312:18","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6348,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:18","nodeType":"FunctionDefinition","parameters":{"id":6326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6325,"mutability":"mutable","name":"value","nameLocation":"25917:5:18","nodeType":"VariableDeclaration","scope":6348,"src":"25910:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6324,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:18"},"returnParameters":{"id":6329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6328,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:18","nodeType":"VariableDeclaration","scope":6348,"src":"25947:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6327,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:18"},"scope":6779,"src":"25892:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6373,"nodeType":"Block","src":"26513:150:18","statements":[{"expression":{"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6356,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6354,"src":"26523:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"26543:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6357,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:18","typeDescriptions":{}}},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6362,"nodeType":"ExpressionStatement","src":"26523:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6363,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6354,"src":"26563:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"26577:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6372,"nodeType":"IfStatement","src":"26559:98:18","trueBody":{"id":6371,"nodeType":"Block","src":"26584:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:18","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"26640:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6366,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"26605:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6370,"nodeType":"RevertStatement","src":"26598:48:18"}]}}]},"documentation":{"id":6349,"nodeType":"StructuredDocumentation","src":"26122:312:18","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6374,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:18","nodeType":"FunctionDefinition","parameters":{"id":6352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6351,"mutability":"mutable","name":"value","nameLocation":"26464:5:18","nodeType":"VariableDeclaration","scope":6374,"src":"26457:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6350,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:18"},"returnParameters":{"id":6355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6354,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:18","nodeType":"VariableDeclaration","scope":6374,"src":"26494:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6353,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:18"},"scope":6779,"src":"26439:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6399,"nodeType":"Block","src":"27060:150:18","statements":[{"expression":{"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6382,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"27070:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6377,"src":"27090:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6383,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:18","typeDescriptions":{}}},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6388,"nodeType":"ExpressionStatement","src":"27070:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6389,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"27110:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6377,"src":"27124:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6398,"nodeType":"IfStatement","src":"27106:98:18","trueBody":{"id":6397,"nodeType":"Block","src":"27131:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:18","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6377,"src":"27187:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6392,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"27152:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6396,"nodeType":"RevertStatement","src":"27145:48:18"}]}}]},"documentation":{"id":6375,"nodeType":"StructuredDocumentation","src":"26669:312:18","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6400,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:18","nodeType":"FunctionDefinition","parameters":{"id":6378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6377,"mutability":"mutable","name":"value","nameLocation":"27011:5:18","nodeType":"VariableDeclaration","scope":6400,"src":"27004:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6376,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:18"},"returnParameters":{"id":6381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6380,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:18","nodeType":"VariableDeclaration","scope":6400,"src":"27041:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6379,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:18"},"scope":6779,"src":"26986:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6425,"nodeType":"Block","src":"27607:150:18","statements":[{"expression":{"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6408,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"27617:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"27637:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6409,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:18","typeDescriptions":{}}},"id":6412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6414,"nodeType":"ExpressionStatement","src":"27617:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6415,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"27657:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"27671:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6424,"nodeType":"IfStatement","src":"27653:98:18","trueBody":{"id":6423,"nodeType":"Block","src":"27678:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:18","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"27734:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6418,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"27699:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6422,"nodeType":"RevertStatement","src":"27692:48:18"}]}}]},"documentation":{"id":6401,"nodeType":"StructuredDocumentation","src":"27216:312:18","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6426,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:18","nodeType":"FunctionDefinition","parameters":{"id":6404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6403,"mutability":"mutable","name":"value","nameLocation":"27558:5:18","nodeType":"VariableDeclaration","scope":6426,"src":"27551:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6402,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:18"},"returnParameters":{"id":6407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6406,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:18","nodeType":"VariableDeclaration","scope":6426,"src":"27588:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6405,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:18"},"scope":6779,"src":"27533:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6451,"nodeType":"Block","src":"28147:148:18","statements":[{"expression":{"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6434,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6432,"src":"28157:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6429,"src":"28176:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6435,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:18","typeDescriptions":{}}},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6440,"nodeType":"ExpressionStatement","src":"28157:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6441,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6432,"src":"28196:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6429,"src":"28210:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6450,"nodeType":"IfStatement","src":"28192:97:18","trueBody":{"id":6449,"nodeType":"Block","src":"28217:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6429,"src":"28272:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6444,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"28238:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6448,"nodeType":"RevertStatement","src":"28231:47:18"}]}}]},"documentation":{"id":6427,"nodeType":"StructuredDocumentation","src":"27763:307:18","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6452,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:18","nodeType":"FunctionDefinition","parameters":{"id":6430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6429,"mutability":"mutable","name":"value","nameLocation":"28099:5:18","nodeType":"VariableDeclaration","scope":6452,"src":"28092:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6428,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:18"},"returnParameters":{"id":6433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6432,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:18","nodeType":"VariableDeclaration","scope":6452,"src":"28129:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6431,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:18"},"scope":6779,"src":"28075:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6477,"nodeType":"Block","src":"28685:148:18","statements":[{"expression":{"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6460,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6458,"src":"28695:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"28714:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6461,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:18","typeDescriptions":{}}},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6466,"nodeType":"ExpressionStatement","src":"28695:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6458,"src":"28734:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"28748:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6476,"nodeType":"IfStatement","src":"28730:97:18","trueBody":{"id":6475,"nodeType":"Block","src":"28755:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:18","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"28810:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6470,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"28776:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6474,"nodeType":"RevertStatement","src":"28769:47:18"}]}}]},"documentation":{"id":6453,"nodeType":"StructuredDocumentation","src":"28301:307:18","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6478,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:18","nodeType":"FunctionDefinition","parameters":{"id":6456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6455,"mutability":"mutable","name":"value","nameLocation":"28637:5:18","nodeType":"VariableDeclaration","scope":6478,"src":"28630:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6454,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:18"},"returnParameters":{"id":6459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6458,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:18","nodeType":"VariableDeclaration","scope":6478,"src":"28667:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6457,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:18"},"scope":6779,"src":"28613:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6503,"nodeType":"Block","src":"29223:148:18","statements":[{"expression":{"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6486,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"29233:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"29252:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6487,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:18","typeDescriptions":{}}},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6492,"nodeType":"ExpressionStatement","src":"29233:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6493,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"29272:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"29286:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6502,"nodeType":"IfStatement","src":"29268:97:18","trueBody":{"id":6501,"nodeType":"Block","src":"29293:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:18","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"29348:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6496,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"29314:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6500,"nodeType":"RevertStatement","src":"29307:47:18"}]}}]},"documentation":{"id":6479,"nodeType":"StructuredDocumentation","src":"28839:307:18","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6504,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:18","nodeType":"FunctionDefinition","parameters":{"id":6482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6481,"mutability":"mutable","name":"value","nameLocation":"29175:5:18","nodeType":"VariableDeclaration","scope":6504,"src":"29168:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6480,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:18"},"returnParameters":{"id":6485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6484,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:18","nodeType":"VariableDeclaration","scope":6504,"src":"29205:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6483,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:18"},"scope":6779,"src":"29151:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6529,"nodeType":"Block","src":"29761:148:18","statements":[{"expression":{"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6512,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"29771:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"29790:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6513,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:18","typeDescriptions":{}}},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6518,"nodeType":"ExpressionStatement","src":"29771:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6519,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"29810:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"29824:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6528,"nodeType":"IfStatement","src":"29806:97:18","trueBody":{"id":6527,"nodeType":"Block","src":"29831:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:18","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"29886:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6522,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"29852:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6526,"nodeType":"RevertStatement","src":"29845:47:18"}]}}]},"documentation":{"id":6505,"nodeType":"StructuredDocumentation","src":"29377:307:18","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6530,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:18","nodeType":"FunctionDefinition","parameters":{"id":6508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6507,"mutability":"mutable","name":"value","nameLocation":"29713:5:18","nodeType":"VariableDeclaration","scope":6530,"src":"29706:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6506,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:18"},"returnParameters":{"id":6511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6510,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:18","nodeType":"VariableDeclaration","scope":6530,"src":"29743:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6509,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:18"},"scope":6779,"src":"29689:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6555,"nodeType":"Block","src":"30299:148:18","statements":[{"expression":{"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6538,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6536,"src":"30309:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"30328:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6539,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:18","typeDescriptions":{}}},"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6544,"nodeType":"ExpressionStatement","src":"30309:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6545,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6536,"src":"30348:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"30362:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6554,"nodeType":"IfStatement","src":"30344:97:18","trueBody":{"id":6553,"nodeType":"Block","src":"30369:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"30424:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6548,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"30390:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6552,"nodeType":"RevertStatement","src":"30383:47:18"}]}}]},"documentation":{"id":6531,"nodeType":"StructuredDocumentation","src":"29915:307:18","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6556,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:18","nodeType":"FunctionDefinition","parameters":{"id":6534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6533,"mutability":"mutable","name":"value","nameLocation":"30251:5:18","nodeType":"VariableDeclaration","scope":6556,"src":"30244:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6532,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:18"},"returnParameters":{"id":6537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6536,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:18","nodeType":"VariableDeclaration","scope":6556,"src":"30281:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6535,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:18"},"scope":6779,"src":"30227:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6581,"nodeType":"Block","src":"30837:148:18","statements":[{"expression":{"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6564,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6562,"src":"30847:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"30866:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6565,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:18","typeDescriptions":{}}},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6570,"nodeType":"ExpressionStatement","src":"30847:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6571,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6562,"src":"30886:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"30900:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6580,"nodeType":"IfStatement","src":"30882:97:18","trueBody":{"id":6579,"nodeType":"Block","src":"30907:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:18","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"30962:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6574,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"30928:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6578,"nodeType":"RevertStatement","src":"30921:47:18"}]}}]},"documentation":{"id":6557,"nodeType":"StructuredDocumentation","src":"30453:307:18","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6582,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:18","nodeType":"FunctionDefinition","parameters":{"id":6560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6559,"mutability":"mutable","name":"value","nameLocation":"30789:5:18","nodeType":"VariableDeclaration","scope":6582,"src":"30782:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6558,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:18"},"returnParameters":{"id":6563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6562,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:18","nodeType":"VariableDeclaration","scope":6582,"src":"30819:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6561,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:18"},"scope":6779,"src":"30765:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6607,"nodeType":"Block","src":"31375:148:18","statements":[{"expression":{"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6590,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"31385:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"31404:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6591,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:18","typeDescriptions":{}}},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6596,"nodeType":"ExpressionStatement","src":"31385:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6597,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"31424:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"31438:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6606,"nodeType":"IfStatement","src":"31420:97:18","trueBody":{"id":6605,"nodeType":"Block","src":"31445:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"31500:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6600,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"31466:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6604,"nodeType":"RevertStatement","src":"31459:47:18"}]}}]},"documentation":{"id":6583,"nodeType":"StructuredDocumentation","src":"30991:307:18","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6608,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:18","nodeType":"FunctionDefinition","parameters":{"id":6586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6585,"mutability":"mutable","name":"value","nameLocation":"31327:5:18","nodeType":"VariableDeclaration","scope":6608,"src":"31320:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6584,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:18"},"returnParameters":{"id":6589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6588,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:18","nodeType":"VariableDeclaration","scope":6608,"src":"31357:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6587,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:18"},"scope":6779,"src":"31303:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6633,"nodeType":"Block","src":"31913:148:18","statements":[{"expression":{"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6616,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6614,"src":"31923:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"31942:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6617,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:18","typeDescriptions":{}}},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6622,"nodeType":"ExpressionStatement","src":"31923:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6623,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6614,"src":"31962:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"31976:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6632,"nodeType":"IfStatement","src":"31958:97:18","trueBody":{"id":6631,"nodeType":"Block","src":"31983:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"32038:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6626,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"32004:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6630,"nodeType":"RevertStatement","src":"31997:47:18"}]}}]},"documentation":{"id":6609,"nodeType":"StructuredDocumentation","src":"31529:307:18","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6634,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:18","nodeType":"FunctionDefinition","parameters":{"id":6612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6611,"mutability":"mutable","name":"value","nameLocation":"31865:5:18","nodeType":"VariableDeclaration","scope":6634,"src":"31858:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6610,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:18"},"returnParameters":{"id":6615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6614,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:18","nodeType":"VariableDeclaration","scope":6634,"src":"31895:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6613,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:18"},"scope":6779,"src":"31841:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6659,"nodeType":"Block","src":"32451:148:18","statements":[{"expression":{"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6642,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"32461:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"32480:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6643,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:18","typeDescriptions":{}}},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6648,"nodeType":"ExpressionStatement","src":"32461:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6649,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"32500:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"32514:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6658,"nodeType":"IfStatement","src":"32496:97:18","trueBody":{"id":6657,"nodeType":"Block","src":"32521:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"32576:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6652,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"32542:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6656,"nodeType":"RevertStatement","src":"32535:47:18"}]}}]},"documentation":{"id":6635,"nodeType":"StructuredDocumentation","src":"32067:307:18","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6660,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:18","nodeType":"FunctionDefinition","parameters":{"id":6638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6637,"mutability":"mutable","name":"value","nameLocation":"32403:5:18","nodeType":"VariableDeclaration","scope":6660,"src":"32396:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6636,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:18"},"returnParameters":{"id":6641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6640,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:18","nodeType":"VariableDeclaration","scope":6660,"src":"32433:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6639,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:18"},"scope":6779,"src":"32379:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6685,"nodeType":"Block","src":"32989:148:18","statements":[{"expression":{"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6668,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"32999:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"33018:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6669,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:18","typeDescriptions":{}}},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6674,"nodeType":"ExpressionStatement","src":"32999:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6675,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"33038:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"33052:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6684,"nodeType":"IfStatement","src":"33034:97:18","trueBody":{"id":6683,"nodeType":"Block","src":"33059:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"33114:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6678,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"33080:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6682,"nodeType":"RevertStatement","src":"33073:47:18"}]}}]},"documentation":{"id":6661,"nodeType":"StructuredDocumentation","src":"32605:307:18","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6686,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:18","nodeType":"FunctionDefinition","parameters":{"id":6664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6663,"mutability":"mutable","name":"value","nameLocation":"32941:5:18","nodeType":"VariableDeclaration","scope":6686,"src":"32934:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6662,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:18"},"returnParameters":{"id":6667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6666,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:18","nodeType":"VariableDeclaration","scope":6686,"src":"32971:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6665,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:18"},"scope":6779,"src":"32917:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6711,"nodeType":"Block","src":"33527:148:18","statements":[{"expression":{"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6694,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"33537:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"33556:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6695,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:18","typeDescriptions":{}}},"id":6698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6700,"nodeType":"ExpressionStatement","src":"33537:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6701,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"33576:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"33590:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6710,"nodeType":"IfStatement","src":"33572:97:18","trueBody":{"id":6709,"nodeType":"Block","src":"33597:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"33652:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6704,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"33618:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6708,"nodeType":"RevertStatement","src":"33611:47:18"}]}}]},"documentation":{"id":6687,"nodeType":"StructuredDocumentation","src":"33143:307:18","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6712,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:18","nodeType":"FunctionDefinition","parameters":{"id":6690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6689,"mutability":"mutable","name":"value","nameLocation":"33479:5:18","nodeType":"VariableDeclaration","scope":6712,"src":"33472:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6688,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:18"},"returnParameters":{"id":6693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6692,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:18","nodeType":"VariableDeclaration","scope":6712,"src":"33509:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6691,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:18"},"scope":6779,"src":"33455:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6737,"nodeType":"Block","src":"34058:146:18","statements":[{"expression":{"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6720,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"34068:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"34086:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6721,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:18","typeDescriptions":{}}},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6726,"nodeType":"ExpressionStatement","src":"34068:24:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6727,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"34106:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"34120:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6736,"nodeType":"IfStatement","src":"34102:96:18","trueBody":{"id":6735,"nodeType":"Block","src":"34127:71:18","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"34181:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6730,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"34148:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6734,"nodeType":"RevertStatement","src":"34141:46:18"}]}}]},"documentation":{"id":6713,"nodeType":"StructuredDocumentation","src":"33681:302:18","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6738,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:18","nodeType":"FunctionDefinition","parameters":{"id":6716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6715,"mutability":"mutable","name":"value","nameLocation":"34011:5:18","nodeType":"VariableDeclaration","scope":6738,"src":"34004:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6714,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:18"},"returnParameters":{"id":6719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6718,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:18","nodeType":"VariableDeclaration","scope":6738,"src":"34041:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6717,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:18"},"scope":6779,"src":"33988:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6767,"nodeType":"Block","src":"34444:250:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"34557:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6750,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6749,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:18","memberName":"max","nodeType":"MemberAccess","src":"34573:16:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6747,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:18","typeDescriptions":{}}},"id":6754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6761,"nodeType":"IfStatement","src":"34553:105:18","trueBody":{"id":6760,"nodeType":"Block","src":"34592:66:18","statements":[{"errorCall":{"arguments":[{"id":6757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"34641:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6756,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"34613:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6759,"nodeType":"RevertStatement","src":"34606:41:18"}]}},{"expression":{"arguments":[{"id":6764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"34681:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6762,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:18","typeDescriptions":{}}},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6745,"id":6766,"nodeType":"Return","src":"34667:20:18"}]},"documentation":{"id":6739,"nodeType":"StructuredDocumentation","src":"34210:165:18","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6768,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:18","nodeType":"FunctionDefinition","parameters":{"id":6742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6741,"mutability":"mutable","name":"value","nameLocation":"34406:5:18","nodeType":"VariableDeclaration","scope":6768,"src":"34398:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6740,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:18"},"returnParameters":{"id":6745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6768,"src":"34436:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6743,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:18"},"scope":6779,"src":"34380:314:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6777,"nodeType":"Block","src":"34853:87:18","statements":[{"AST":{"nativeSrc":"34888:46:18","nodeType":"YulBlock","src":"34888:46:18","statements":[{"nativeSrc":"34902:22:18","nodeType":"YulAssignment","src":"34902:22:18","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:18","nodeType":"YulIdentifier","src":"34921:1:18"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:18","nodeType":"YulIdentifier","src":"34914:6:18"},"nativeSrc":"34914:9:18","nodeType":"YulFunctionCall","src":"34914:9:18"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:18","nodeType":"YulIdentifier","src":"34907:6:18"},"nativeSrc":"34907:17:18","nodeType":"YulFunctionCall","src":"34907:17:18"},"variableNames":[{"name":"u","nativeSrc":"34902:1:18","nodeType":"YulIdentifier","src":"34902:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6771,"isOffset":false,"isSlot":false,"src":"34921:1:18","valueSize":1},{"declaration":6774,"isOffset":false,"isSlot":false,"src":"34902:1:18","valueSize":1}],"flags":["memory-safe"],"id":6776,"nodeType":"InlineAssembly","src":"34863:71:18"}]},"documentation":{"id":6769,"nodeType":"StructuredDocumentation","src":"34700:90:18","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6778,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:18","nodeType":"FunctionDefinition","parameters":{"id":6772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6771,"mutability":"mutable","name":"b","nameLocation":"34816:1:18","nodeType":"VariableDeclaration","scope":6778,"src":"34811:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6770,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:18"},"returnParameters":{"id":6775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6774,"mutability":"mutable","name":"u","nameLocation":"34850:1:18","nodeType":"VariableDeclaration","scope":6778,"src":"34842:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6773,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:18"},"scope":6779,"src":"34795:145:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6780,"src":"769:34173:18","usedErrors":[5024,5029,5036,5041],"usedEvents":[]}],"src":"192:34751:18"},"id":18},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6779],"SignedMath":[6923]},"id":6924,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6781,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6783,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6924,"sourceUnit":6780,"src":"135:40:19","symbolAliases":[{"foreign":{"id":6782,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"143:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6784,"nodeType":"StructuredDocumentation","src":"177:80:19","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6923,"linearizedBaseContracts":[6923],"name":"SignedMath","nameLocation":"266:10:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":6813,"nodeType":"Block","src":"746:215:19","statements":[{"id":6812,"nodeType":"UncheckedBlock","src":"756:199:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6796,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"894:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6797,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"900:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6798,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"904:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6805,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"932:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6803,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"916:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6779_$","typeString":"type(library SafeCast)"}},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"916:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6801,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:19","typeDescriptions":{}}},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6795,"id":6811,"nodeType":"Return","src":"887:57:19"}]}]},"documentation":{"id":6785,"nodeType":"StructuredDocumentation","src":"283:374:19","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6814,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:19","nodeType":"FunctionDefinition","parameters":{"id":6792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6787,"mutability":"mutable","name":"condition","nameLocation":"684:9:19","nodeType":"VariableDeclaration","scope":6814,"src":"679:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6786,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6789,"mutability":"mutable","name":"a","nameLocation":"702:1:19","nodeType":"VariableDeclaration","scope":6814,"src":"695:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6788,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6791,"mutability":"mutable","name":"b","nameLocation":"712:1:19","nodeType":"VariableDeclaration","scope":6814,"src":"705:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6790,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:19"},"returnParameters":{"id":6795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6814,"src":"738:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6793,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:19"},"scope":6923,"src":"662:299:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6832,"nodeType":"Block","src":"1102:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6825,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"1127:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6826,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"1131:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6828,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"1134:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6829,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"1137:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6824,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"1119:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6823,"id":6831,"nodeType":"Return","src":"1112:27:19"}]},"documentation":{"id":6815,"nodeType":"StructuredDocumentation","src":"967:66:19","text":" @dev Returns the largest of two signed numbers."},"id":6833,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:19","nodeType":"FunctionDefinition","parameters":{"id":6820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6817,"mutability":"mutable","name":"a","nameLocation":"1058:1:19","nodeType":"VariableDeclaration","scope":6833,"src":"1051:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6816,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6819,"mutability":"mutable","name":"b","nameLocation":"1068:1:19","nodeType":"VariableDeclaration","scope":6833,"src":"1061:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6818,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:19"},"returnParameters":{"id":6823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6833,"src":"1094:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6821,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:19"},"scope":6923,"src":"1038:108:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6851,"nodeType":"Block","src":"1288:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6844,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"1313:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6845,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6838,"src":"1317:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6847,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"1320:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6848,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6838,"src":"1323:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6843,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"1305:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6842,"id":6850,"nodeType":"Return","src":"1298:27:19"}]},"documentation":{"id":6834,"nodeType":"StructuredDocumentation","src":"1152:67:19","text":" @dev Returns the smallest of two signed numbers."},"id":6852,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:19","nodeType":"FunctionDefinition","parameters":{"id":6839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6836,"mutability":"mutable","name":"a","nameLocation":"1244:1:19","nodeType":"VariableDeclaration","scope":6852,"src":"1237:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6835,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6838,"mutability":"mutable","name":"b","nameLocation":"1254:1:19","nodeType":"VariableDeclaration","scope":6852,"src":"1247:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6837,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:19"},"returnParameters":{"id":6842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6852,"src":"1280:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6840,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:19"},"scope":6923,"src":"1224:108:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6895,"nodeType":"Block","src":"1537:162:19","statements":[{"assignments":[6863],"declarations":[{"constant":false,"id":6863,"mutability":"mutable","name":"x","nameLocation":"1606:1:19","nodeType":"VariableDeclaration","scope":6895,"src":"1599:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6862,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6876,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6864,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"1611:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6865,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"1615:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6868,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"1622:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6869,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"1626:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:19"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6877,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"1651:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6882,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"1671:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:19","typeDescriptions":{}}},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6878,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:19","typeDescriptions":{}}},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6887,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"1685:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6888,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"1689:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6861,"id":6894,"nodeType":"Return","src":"1644:48:19"}]},"documentation":{"id":6853,"nodeType":"StructuredDocumentation","src":"1338:126:19","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6896,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:19","nodeType":"FunctionDefinition","parameters":{"id":6858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6855,"mutability":"mutable","name":"a","nameLocation":"1493:1:19","nodeType":"VariableDeclaration","scope":6896,"src":"1486:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6854,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6857,"mutability":"mutable","name":"b","nameLocation":"1503:1:19","nodeType":"VariableDeclaration","scope":6896,"src":"1496:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6856,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:19"},"returnParameters":{"id":6861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6896,"src":"1529:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6859,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:19"},"scope":6923,"src":"1469:230:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6921,"nodeType":"Block","src":"1843:767:19","statements":[{"id":6920,"nodeType":"UncheckedBlock","src":"1853:751:19","statements":[{"assignments":[6905],"declarations":[{"constant":false,"id":6905,"mutability":"mutable","name":"mask","nameLocation":"2424:4:19","nodeType":"VariableDeclaration","scope":6920,"src":"2417:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6904,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6909,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6906,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"2431:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6912,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"2576:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6913,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"2580:4:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6916,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"2588:4:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6910,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:19","typeDescriptions":{}}},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6903,"id":6919,"nodeType":"Return","src":"2560:33:19"}]}]},"documentation":{"id":6897,"nodeType":"StructuredDocumentation","src":"1705:78:19","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6922,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:19","nodeType":"FunctionDefinition","parameters":{"id":6900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6899,"mutability":"mutable","name":"n","nameLocation":"1808:1:19","nodeType":"VariableDeclaration","scope":6922,"src":"1801:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6898,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:19"},"returnParameters":{"id":6903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6922,"src":"1834:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6901,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:19"},"scope":6923,"src":"1788:822:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6924,"src":"258:2354:19","usedErrors":[],"usedEvents":[]}],"src":"109:2504:19"},"id":19},"contracts/HealthIDNFT.sol":{"ast":{"absolutePath":"contracts/HealthIDNFT.sol","exportedSymbols":{"AccessControl":[296],"Context":[1903],"ERC165":[3381],"ERC721":[1505],"ERC721URIStorage":[1768],"HealthIDNFT":[7219],"IAccessControl":[379],"IERC165":[3393],"IERC4906":[407],"IERC721Metadata":[1796],"Strings":[3357]},"id":7220,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6925,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":6926,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7220,"sourceUnit":1769,"src":"61:78:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":6927,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7220,"sourceUnit":297,"src":"141:58:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6929,"name":"ERC721URIStorage","nameLocations":["408:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":1768,"src":"408:16:20"},"id":6930,"nodeType":"InheritanceSpecifier","src":"408:16:20"},{"baseName":{"id":6931,"name":"AccessControl","nameLocations":["426:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"426:13:20"},"id":6932,"nodeType":"InheritanceSpecifier","src":"426:13:20"}],"canonicalName":"HealthIDNFT","contractDependencies":[],"contractKind":"contract","documentation":{"id":6928,"nodeType":"StructuredDocumentation","src":"203:179:20","text":" @title HealthIDNFT\n @dev Soulbound NFT contract for health identity tokens\n @notice This contract creates non-transferable NFTs that represent health identities"},"fullyImplemented":true,"id":7219,"linearizedBaseContracts":[7219,296,1768,1505,501,1796,407,1622,3381,3393,379,1903],"name":"HealthIDNFT","nameLocation":"393:11:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":6937,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"496:11:20","nodeType":"VariableDeclaration","scope":7219,"src":"472:62:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"472:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":6935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"520:13:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":6934,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"510:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"510:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"e328400c","id":6942,"mutability":"constant","name":"MULTISIG_ROLE","nameLocation":"565:13:20","nodeType":"VariableDeclaration","scope":7219,"src":"541:66:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"541:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d554c54495349475f524f4c45","id":6940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"591:15:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab","typeString":"literal_string \"MULTISIG_ROLE\""},"value":"MULTISIG_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab","typeString":"literal_string \"MULTISIG_ROLE\""}],"id":6939,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"581:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"581:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"id":6944,"mutability":"mutable","name":"_tokenIdCounter","nameLocation":"686:15:20","nodeType":"VariableDeclaration","scope":7219,"src":"670:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6943,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"errorSelector":"92d14c9e","id":6946,"name":"AdminRequired","nameLocation":"738:13:20","nodeType":"ErrorDefinition","parameters":{"id":6945,"nodeType":"ParameterList","parameters":[],"src":"751:2:20"},"src":"732:22:20"},{"errorSelector":"1a3022a6","id":6948,"name":"SoulboundTransferNotAllowed","nameLocation":"766:27:20","nodeType":"ErrorDefinition","parameters":{"id":6947,"nodeType":"ParameterList","parameters":[],"src":"793:2:20"},"src":"760:36:20"},{"errorSelector":"6b53c368","id":6950,"name":"SoulboundApprovalNotAllowed","nameLocation":"808:27:20","nodeType":"ErrorDefinition","parameters":{"id":6949,"nodeType":"ParameterList","parameters":[],"src":"835:2:20"},"src":"802:36:20"},{"errorSelector":"dd97575f","id":6952,"name":"SoulboundSetApprovalForAllNotAllowed","nameLocation":"850:36:20","nodeType":"ErrorDefinition","parameters":{"id":6951,"nodeType":"ParameterList","parameters":[],"src":"886:2:20"},"src":"844:45:20"},{"errorSelector":"3f6cc768","id":6954,"name":"InvalidTokenId","nameLocation":"901:14:20","nodeType":"ErrorDefinition","parameters":{"id":6953,"nodeType":"ParameterList","parameters":[],"src":"915:2:20"},"src":"895:23:20"},{"errorSelector":"d92e233d","id":6956,"name":"ZeroAddress","nameLocation":"930:11:20","nodeType":"ErrorDefinition","parameters":{"id":6955,"nodeType":"ParameterList","parameters":[],"src":"941:2:20"},"src":"924:20:20"},{"anonymous":false,"eventSelector":"c003d77b1510ac4ae95db12dd6b9f37869ddc183c76c2f6fda6dc5124f5bd218","id":6964,"name":"HealthIDMinted","nameLocation":"973:14:20","nodeType":"EventDefinition","parameters":{"id":6963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6958,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1014:2:20","nodeType":"VariableDeclaration","scope":6964,"src":"998:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6957,"name":"address","nodeType":"ElementaryTypeName","src":"998:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6960,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1043:7:20","nodeType":"VariableDeclaration","scope":6964,"src":"1027:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6962,"indexed":false,"mutability":"mutable","name":"metadataURI","nameLocation":"1068:11:20","nodeType":"VariableDeclaration","scope":6964,"src":"1061:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6961,"name":"string","nodeType":"ElementaryTypeName","src":"1061:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"987:99:20"},"src":"967:120:20"},{"anonymous":false,"eventSelector":"78d07928bd1d46a549dbf60e803372a8dc0bd1dcceb19beeef02777394fd6b74","id":6970,"name":"HealthIDMetadataUpdated","nameLocation":"1099:23:20","nodeType":"EventDefinition","parameters":{"id":6969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6966,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1149:7:20","nodeType":"VariableDeclaration","scope":6970,"src":"1133:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6965,"name":"uint256","nodeType":"ElementaryTypeName","src":"1133:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6968,"indexed":false,"mutability":"mutable","name":"newMetadataURI","nameLocation":"1174:14:20","nodeType":"VariableDeclaration","scope":6970,"src":"1167:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6967,"name":"string","nodeType":"ElementaryTypeName","src":"1167:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1122:73:20"},"src":"1093:103:20"},{"body":{"id":7010,"nodeType":"Block","src":"1420:272:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6980,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"1435:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1452:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6981,"name":"address","nodeType":"ElementaryTypeName","src":"1444:7:20","typeDescriptions":{}}},"id":6984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1444:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1435:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6989,"nodeType":"IfStatement","src":"1431:47:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6986,"name":"AdminRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6946,"src":"1463:13:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1463:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6988,"nodeType":"RevertStatement","src":"1456:22:20"}},{"expression":{"arguments":[{"id":6991,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"1502:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6992,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"1522:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6990,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1491:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1491:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6994,"nodeType":"ExpressionStatement","src":"1491:37:20"},{"expression":{"arguments":[{"id":6996,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"1550:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6997,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"1563:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6995,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1539:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1539:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6999,"nodeType":"ExpressionStatement","src":"1539:30:20"},{"expression":{"arguments":[{"id":7001,"name":"MULTISIG_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"1591:13:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1606:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1610:6:20","memberName":"sender","nodeType":"MemberAccess","src":"1606:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7000,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1580:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1580:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7005,"nodeType":"ExpressionStatement","src":"1580:37:20"},{"expression":{"id":7008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7006,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"1665:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":7007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1683:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1665:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7009,"nodeType":"ExpressionStatement","src":"1665:19:20"}]},"documentation":{"id":6971,"nodeType":"StructuredDocumentation","src":"1204:151:20","text":" @dev Constructor sets up the NFT with name, symbol, and initial roles\n @param admin Address that will have admin privileges"},"id":7011,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4865616c746849444e4654","id":6976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1395:13:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ae24c85c9a522ae306cf586dce9dafbbd8e1643734572747d3ce5f74f015090","typeString":"literal_string \"HealthIDNFT\""},"value":"HealthIDNFT"},{"hexValue":"4845414c5448","id":6977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1410:8:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_88ad4e672f8c8ca6cce86b10b118764bf098c06bb02cd6691dfb6641799afaa0","typeString":"literal_string \"HEALTH\""},"value":"HEALTH"}],"id":6978,"kind":"baseConstructorSpecifier","modifierName":{"id":6975,"name":"ERC721","nameLocations":["1388:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":1505,"src":"1388:6:20"},"nodeType":"ModifierInvocation","src":"1388:31:20"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6973,"mutability":"mutable","name":"admin","nameLocation":"1381:5:20","nodeType":"VariableDeclaration","scope":7011,"src":"1373:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6972,"name":"address","nodeType":"ElementaryTypeName","src":"1373:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1372:15:20"},"returnParameters":{"id":6979,"nodeType":"ParameterList","parameters":[],"src":"1420:0:20"},"scope":7219,"src":"1361:331:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1118],"body":{"id":7055,"nodeType":"Block","src":"1908:293:20","statements":[{"assignments":[7025],"declarations":[{"constant":false,"id":7025,"mutability":"mutable","name":"from","nameLocation":"1927:4:20","nodeType":"VariableDeclaration","scope":7055,"src":"1919:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7024,"name":"address","nodeType":"ElementaryTypeName","src":"1919:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7029,"initialValue":{"arguments":[{"id":7027,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"1943:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7026,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"1934:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1934:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1919:32:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7030,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7025,"src":"2039:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2047:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7031,"name":"address","nodeType":"ElementaryTypeName","src":"2047:7:20","typeDescriptions":{}}},"id":7034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2039:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7036,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"2061:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2075:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2067:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7037,"name":"address","nodeType":"ElementaryTypeName","src":"2067:7:20","typeDescriptions":{}}},"id":7040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2061:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2039:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7047,"nodeType":"IfStatement","src":"2035:107:20","trueBody":{"id":7046,"nodeType":"Block","src":"2079:63:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7043,"name":"SoulboundTransferNotAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"2101:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2101:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7045,"nodeType":"RevertStatement","src":"2094:36:20"}]}},{"expression":{"arguments":[{"id":7050,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"2175:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7051,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"2179:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7052,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"2188:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7048,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2161:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_HealthIDNFT_$7219_$","typeString":"type(contract super HealthIDNFT)"}},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2167:7:20","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1118,"src":"2161:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7023,"id":7054,"nodeType":"Return","src":"2154:39:20"}]},"documentation":{"id":7012,"nodeType":"StructuredDocumentation","src":"1700:72:20","text":" @dev Override _update to enforce soulbound property"},"id":7056,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1787:7:20","nodeType":"FunctionDefinition","overrides":{"id":7020,"nodeType":"OverrideSpecifier","overrides":[],"src":"1881:8:20"},"parameters":{"id":7019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7014,"mutability":"mutable","name":"to","nameLocation":"1813:2:20","nodeType":"VariableDeclaration","scope":7056,"src":"1805:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7013,"name":"address","nodeType":"ElementaryTypeName","src":"1805:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7016,"mutability":"mutable","name":"tokenId","nameLocation":"1834:7:20","nodeType":"VariableDeclaration","scope":7056,"src":"1826:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1826:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7018,"mutability":"mutable","name":"auth","nameLocation":"1860:4:20","nodeType":"VariableDeclaration","scope":7056,"src":"1852:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7017,"name":"address","nodeType":"ElementaryTypeName","src":"1852:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1794:77:20"},"returnParameters":{"id":7023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7056,"src":"1899:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7021,"name":"address","nodeType":"ElementaryTypeName","src":"1899:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1898:9:20"},"scope":7219,"src":"1778:423:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[63,1691],"body":{"id":7072,"nodeType":"Block","src":"2404:62:20","statements":[{"expression":{"arguments":[{"id":7069,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"2446:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":7067,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2422:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_HealthIDNFT_$7219_$","typeString":"type(contract super HealthIDNFT)"}},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2428:17:20","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":63,"src":"2422:23:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2422:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7066,"id":7071,"nodeType":"Return","src":"2415:43:20"}]},"documentation":{"id":7057,"nodeType":"StructuredDocumentation","src":"2209:57:20","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":7073,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2281:17:20","nodeType":"FunctionDefinition","overrides":{"id":7063,"nodeType":"OverrideSpecifier","overrides":[{"id":7061,"name":"ERC721URIStorage","nameLocations":["2356:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":1768,"src":"2356:16:20"},{"id":7062,"name":"AccessControl","nameLocations":["2374:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"2374:13:20"}],"src":"2347:41:20"},"parameters":{"id":7060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7059,"mutability":"mutable","name":"interfaceId","nameLocation":"2316:11:20","nodeType":"VariableDeclaration","scope":7073,"src":"2309:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7058,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2309:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2298:36:20"},"returnParameters":{"id":7066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7073,"src":"2398:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7064,"name":"bool","nodeType":"ElementaryTypeName","src":"2398:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2397:6:20"},"scope":7219,"src":"2272:194:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7114,"nodeType":"Block","src":"2740:240:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"2755:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2769:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7085,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:20","typeDescriptions":{}}},"id":7088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2755:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7093,"nodeType":"IfStatement","src":"2751:42:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7090,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"2780:11:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2780:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7092,"nodeType":"RevertStatement","src":"2773:20:20"}},{"assignments":[7095],"declarations":[{"constant":false,"id":7095,"mutability":"mutable","name":"tokenId","nameLocation":"2814:7:20","nodeType":"VariableDeclaration","scope":7114,"src":"2806:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7094,"name":"uint256","nodeType":"ElementaryTypeName","src":"2806:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7097,"initialValue":{"id":7096,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"2824:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2806:33:20"},{"expression":{"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2850:17:20","subExpression":{"id":7098,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"2850:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7100,"nodeType":"ExpressionStatement","src":"2850:17:20"},{"expression":{"arguments":[{"id":7102,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"2886:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7103,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"2890:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7101,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"2880:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2880:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7105,"nodeType":"ExpressionStatement","src":"2880:18:20"},{"eventCall":{"arguments":[{"id":7107,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"2931:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7108,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"2935:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":7109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2944:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":7106,"name":"HealthIDMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"2916:14:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory)"}},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2916:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7111,"nodeType":"EmitStatement","src":"2911:36:20"},{"expression":{"id":7112,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"2965:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7083,"id":7113,"nodeType":"Return","src":"2958:14:20"}]},"documentation":{"id":7074,"nodeType":"StructuredDocumentation","src":"2474:185:20","text":" @dev Mint a new HealthID NFT with auto-incrementing token ID\n @param to Address to mint the token to\n @return tokenId The ID of the newly minted token"},"functionSelector":"6a627842","id":7115,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7079,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"2709:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7080,"kind":"modifierInvocation","modifierName":{"id":7078,"name":"onlyRole","nameLocations":["2700:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"2700:8:20"},"nodeType":"ModifierInvocation","src":"2700:21:20"}],"name":"mint","nameLocation":"2674:4:20","nodeType":"FunctionDefinition","parameters":{"id":7077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7076,"mutability":"mutable","name":"to","nameLocation":"2687:2:20","nodeType":"VariableDeclaration","scope":7115,"src":"2679:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7075,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2678:12:20"},"returnParameters":{"id":7083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7115,"src":"2731:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2731:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2730:9:20"},"scope":7219,"src":"2665:315:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7163,"nodeType":"Block","src":"3366:294:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7128,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"3381:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3395:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3387:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7129,"name":"address","nodeType":"ElementaryTypeName","src":"3387:7:20","typeDescriptions":{}}},"id":7132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3387:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3381:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7137,"nodeType":"IfStatement","src":"3377:42:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7134,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"3406:11:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7136,"nodeType":"RevertStatement","src":"3399:20:20"}},{"assignments":[7139],"declarations":[{"constant":false,"id":7139,"mutability":"mutable","name":"tokenId","nameLocation":"3440:7:20","nodeType":"VariableDeclaration","scope":7163,"src":"3432:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7138,"name":"uint256","nodeType":"ElementaryTypeName","src":"3432:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7141,"initialValue":{"id":7140,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"3450:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3432:33:20"},{"expression":{"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3476:17:20","subExpression":{"id":7142,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"3476:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7144,"nodeType":"ExpressionStatement","src":"3476:17:20"},{"expression":{"arguments":[{"id":7146,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"3512:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7147,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"3516:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7145,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"3506:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3506:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7149,"nodeType":"ExpressionStatement","src":"3506:18:20"},{"expression":{"arguments":[{"id":7151,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"3548:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7152,"name":"metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"3557:11:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7150,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"3535:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3535:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7154,"nodeType":"ExpressionStatement","src":"3535:34:20"},{"eventCall":{"arguments":[{"id":7156,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"3602:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7157,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"3606:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7158,"name":"metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"3615:11:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7155,"name":"HealthIDMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"3587:14:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory)"}},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3587:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7160,"nodeType":"EmitStatement","src":"3582:45:20"},{"expression":{"id":7161,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"3645:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7127,"id":7162,"nodeType":"Return","src":"3638:14:20"}]},"documentation":{"id":7116,"nodeType":"StructuredDocumentation","src":"2988:233:20","text":" @dev Mint a new HealthID NFT with metadata URI\n @param to Address to mint the token to\n @param metadataURI URI pointing to the token metadata\n @return tokenId The ID of the newly minted token"},"functionSelector":"471d06f4","id":7164,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7123,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"3335:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7124,"kind":"modifierInvocation","modifierName":{"id":7122,"name":"onlyRole","nameLocations":["3326:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"3326:8:20"},"nodeType":"ModifierInvocation","src":"3326:21:20"}],"name":"mintWithMetadata","nameLocation":"3236:16:20","nodeType":"FunctionDefinition","parameters":{"id":7121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7118,"mutability":"mutable","name":"to","nameLocation":"3271:2:20","nodeType":"VariableDeclaration","scope":7164,"src":"3263:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7117,"name":"address","nodeType":"ElementaryTypeName","src":"3263:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7120,"mutability":"mutable","name":"metadataURI","nameLocation":"3298:11:20","nodeType":"VariableDeclaration","scope":7164,"src":"3284:25:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7119,"name":"string","nodeType":"ElementaryTypeName","src":"3284:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3252:64:20"},"returnParameters":{"id":7127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7164,"src":"3357:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7125,"name":"uint256","nodeType":"ElementaryTypeName","src":"3357:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3356:9:20"},"scope":7219,"src":"3227:433:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7197,"nodeType":"Block","src":"3958:187:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7176,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"3982:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7175,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"3973:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4002:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7178,"name":"address","nodeType":"ElementaryTypeName","src":"3994:7:20","typeDescriptions":{}}},"id":7181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3973:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7186,"nodeType":"IfStatement","src":"3969:60:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7183,"name":"InvalidTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6954,"src":"4013:14:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4013:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7185,"nodeType":"RevertStatement","src":"4006:23:20"}},{"expression":{"arguments":[{"id":7188,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"4055:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7189,"name":"metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"4064:11:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7187,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"4042:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":7190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4042:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7191,"nodeType":"ExpressionStatement","src":"4042:34:20"},{"eventCall":{"arguments":[{"id":7193,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"4116:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7194,"name":"metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"4125:11:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7192,"name":"HealthIDMetadataUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"4092:23:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4092:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7196,"nodeType":"EmitStatement","src":"4087:50:20"}]},"documentation":{"id":7165,"nodeType":"StructuredDocumentation","src":"3668:153:20","text":" @dev Update metadata URI for an existing token\n @param tokenId Token ID to update\n @param metadataURI New metadata URI"},"functionSelector":"53c8388e","id":7198,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7172,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"3938:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7173,"kind":"modifierInvocation","modifierName":{"id":7171,"name":"onlyRole","nameLocations":["3929:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"3929:8:20"},"nodeType":"ModifierInvocation","src":"3929:28:20"}],"name":"updateMetadata","nameLocation":"3836:14:20","nodeType":"FunctionDefinition","parameters":{"id":7170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7167,"mutability":"mutable","name":"tokenId","nameLocation":"3869:7:20","nodeType":"VariableDeclaration","scope":7198,"src":"3861:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7166,"name":"uint256","nodeType":"ElementaryTypeName","src":"3861:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7169,"mutability":"mutable","name":"metadataURI","nameLocation":"3901:11:20","nodeType":"VariableDeclaration","scope":7198,"src":"3887:25:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7168,"name":"string","nodeType":"ElementaryTypeName","src":"3887:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3850:69:20"},"returnParameters":{"id":7174,"nodeType":"ParameterList","parameters":[],"src":"3958:0:20"},"scope":7219,"src":"3827:318:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7206,"nodeType":"Block","src":"4349:41:20","statements":[{"expression":{"id":7204,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"4367:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7203,"id":7205,"nodeType":"Return","src":"4360:22:20"}]},"documentation":{"id":7199,"nodeType":"StructuredDocumentation","src":"4153:129:20","text":" @dev Get the current token ID counter value\n @return Current token ID that will be used for next mint"},"functionSelector":"56189236","id":7207,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentTokenId","nameLocation":"4297:17:20","nodeType":"FunctionDefinition","parameters":{"id":7200,"nodeType":"ParameterList","parameters":[],"src":"4314:2:20"},"returnParameters":{"id":7203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7207,"src":"4340:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7201,"name":"uint256","nodeType":"ElementaryTypeName","src":"4340:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4339:9:20"},"scope":7219,"src":"4288:102:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7217,"nodeType":"Block","src":"4557:45:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7213,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"4575:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4593:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4575:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7212,"id":7216,"nodeType":"Return","src":"4568:26:20"}]},"documentation":{"id":7208,"nodeType":"StructuredDocumentation","src":"4398:98:20","text":" @dev Get total number of tokens minted\n @return Total supply of tokens"},"functionSelector":"18160ddd","id":7218,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"4511:11:20","nodeType":"FunctionDefinition","parameters":{"id":7209,"nodeType":"ParameterList","parameters":[],"src":"4522:2:20"},"returnParameters":{"id":7212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7218,"src":"4548:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7210,"name":"uint256","nodeType":"ElementaryTypeName","src":"4548:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4547:9:20"},"scope":7219,"src":"4502:100:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7220,"src":"384:4221:20","usedErrors":[306,309,459,464,473,478,483,490,495,500,6946,6948,6950,6952,6954,6956],"usedEvents":[318,327,336,399,406,1521,1530,1539,6964,6970]}],"src":"33:4574:20"},"id":20}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":27,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)22_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)22_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)22_storage"},"t_struct(RoleData)22_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":19,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"hasRole","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":21,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":581,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":583,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":587,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":591,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":595,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":601,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":581,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":583,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":587,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":591,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":595,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":601,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1670,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b09588a2f572f270015c0893732707caf259545305916e9b865837d6f1ae14364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9588A2F572F270015C08937 ORIGIN PUSH17 0x7CAF259545305916E9B865837D6F1AE143 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"431:1490:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;431:1490:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b09588a2f572f270015c0893732707caf259545305916e9b865837d6f1ae14364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9588A2F572F270015C08937 ORIGIN PUSH17 0x7CAF259545305916E9B865837D6F1AE143 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"431:1490:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220480443931a2b8e6d08b7f7f303a7c4e4fb18367fcb810a9dc62b284df191e4e064736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DIV NUMBER SWAP4 BYTE 0x2B DUP15 PUSH14 0x8B7F7F303A7C4E4FB18367FCB81 EXP SWAP14 0xC6 0x2B 0x28 0x4D CALL SWAP2 0xE4 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220480443931a2b8e6d08b7f7f303a7c4e4fb18367fcb810a9dc62b284df191e4e064736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DIV NUMBER SWAP4 BYTE 0x2B DUP15 PUSH14 0x8B7F7F303A7C4E4FB18367FCB81 EXP SWAP14 0xC6 0x2B 0x28 0x4D CALL SWAP2 0xE4 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d25119d96a0b6c751ed6c6aa81db3c845d0181659d29e3646b022356a5139e5364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 MLOAD NOT 0xD9 PUSH11 0xB6C751ED6C6AA81DB3C84 TSTORE ADD DUP2 PUSH6 0x9D29E3646B02 0x23 JUMP 0xA5 SGT SWAP15 MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"297:18982:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18982:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d25119d96a0b6c751ed6c6aa81db3c845d0181659d29e3646b022356a5139e5364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 MLOAD NOT 0xD9 PUSH11 0xB6C751ED6C6AA81DB3C84 TSTORE ADD DUP2 PUSH6 0x9D29E3646B02 0x23 JUMP 0xA5 SGT SWAP15 MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"297:18982:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e41425f41c1222419b5f7510ef4b5382051038809b54a2c00f0e2d3ac98d815264736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 EQ 0x25 DELEGATECALL SHR SLT 0x22 COINBASE SWAP12 PUSH0 PUSH22 0x10EF4B5382051038809B54A2C00F0E2D3AC98D815264 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e41425f41c1222419b5f7510ef4b5382051038809b54a2c00f0e2d3ac98d815264736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 EQ 0x25 DELEGATECALL SHR SLT 0x22 COINBASE SWAP12 PUSH0 PUSH22 0x10EF4B5382051038809B54A2C00F0E2D3AC98D815264 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f339f8e25e68a389c2a927bb23c6cb93c79c9384ea0005062ee031ef0df1d28e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN CODECOPY 0xF8 0xE2 MCOPY PUSH9 0xA389C2A927BB23C6CB SWAP4 0xC7 SWAP13 SWAP4 DUP5 0xEA STOP SDIV MOD 0x2E 0xE0 BALANCE 0xEF 0xD CALL 0xD2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f339f8e25e68a389c2a927bb23c6cb93c79c9384ea0005062ee031ef0df1d28e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN CODECOPY 0xF8 0xE2 MCOPY PUSH9 0xA389C2A927BB23C6CB SWAP4 0xC7 SWAP13 SWAP4 DUP5 0xEA STOP SDIV MOD 0x2E 0xE0 BALANCE 0xEF 0xD CALL 0xD2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220359be74cda55339d335080ca5f6a3089ca675c8b749bb38b7043fe3d3c5b95b164736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP12 0xE7 0x4C 0xDA SSTORE CALLER SWAP14 CALLER POP DUP1 0xCA PUSH0 PUSH11 0x3089CA675C8B749BB38B70 NUMBER INVALID RETURNDATASIZE EXTCODECOPY JUMPDEST SWAP6 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"258:2354:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220359be74cda55339d335080ca5f6a3089ca675c8b749bb38b7043fe3d3c5b95b164736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP12 0xE7 0x4C 0xDA SSTORE CALLER SWAP14 CALLER POP DUP1 0xCA PUSH0 PUSH11 0x3089CA675C8B749BB38B70 NUMBER INVALID RETURNDATASIZE EXTCODECOPY JUMPDEST SWAP6 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"258:2354:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/HealthIDNFT.sol":{"HealthIDNFT":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"AdminRequired","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"InvalidTokenId","type":"error"},{"inputs":[],"name":"SoulboundApprovalNotAllowed","type":"error"},{"inputs":[],"name":"SoulboundSetApprovalForAllNotAllowed","type":"error"},{"inputs":[],"name":"SoulboundTransferNotAllowed","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"newMetadataURI","type":"string"}],"name":"HealthIDMetadataUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"metadataURI","type":"string"}],"name":"HealthIDMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MULTISIG_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"metadataURI","type":"string"}],"name":"mintWithMetadata","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"metadataURI","type":"string"}],"name":"updateMetadata","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_618":{"entryPoint":null,"id":618,"parameterSlots":2,"returnSlots":0},"@_7011":{"entryPoint":null,"id":7011,"parameterSlots":1,"returnSlots":0},"@_grantRole_257":{"entryPoint":293,"id":257,"parameterSlots":2,"returnSlots":1},"@_msgSender_1885":{"entryPoint":null,"id":1885,"parameterSlots":0,"returnSlots":1},"@hasRole_81":{"entryPoint":null,"id":81,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":469,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":597,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":676,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":539,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":517,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2947:21","nodeType":"YulBlock","src":"0:2947:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"95:209:21","nodeType":"YulBlock","src":"95:209:21","statements":[{"body":{"nativeSrc":"141:16:21","nodeType":"YulBlock","src":"141:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"150:1:21","nodeType":"YulLiteral","src":"150:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"153:1:21","nodeType":"YulLiteral","src":"153:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"143:6:21","nodeType":"YulIdentifier","src":"143:6:21"},"nativeSrc":"143:12:21","nodeType":"YulFunctionCall","src":"143:12:21"},"nativeSrc":"143:12:21","nodeType":"YulExpressionStatement","src":"143:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"116:7:21","nodeType":"YulIdentifier","src":"116:7:21"},{"name":"headStart","nativeSrc":"125:9:21","nodeType":"YulIdentifier","src":"125:9:21"}],"functionName":{"name":"sub","nativeSrc":"112:3:21","nodeType":"YulIdentifier","src":"112:3:21"},"nativeSrc":"112:23:21","nodeType":"YulFunctionCall","src":"112:23:21"},{"kind":"number","nativeSrc":"137:2:21","nodeType":"YulLiteral","src":"137:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"108:3:21","nodeType":"YulIdentifier","src":"108:3:21"},"nativeSrc":"108:32:21","nodeType":"YulFunctionCall","src":"108:32:21"},"nativeSrc":"105:52:21","nodeType":"YulIf","src":"105:52:21"},{"nativeSrc":"166:29:21","nodeType":"YulVariableDeclaration","src":"166:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"185:9:21","nodeType":"YulIdentifier","src":"185:9:21"}],"functionName":{"name":"mload","nativeSrc":"179:5:21","nodeType":"YulIdentifier","src":"179:5:21"},"nativeSrc":"179:16:21","nodeType":"YulFunctionCall","src":"179:16:21"},"variables":[{"name":"value","nativeSrc":"170:5:21","nodeType":"YulTypedName","src":"170:5:21","type":""}]},{"body":{"nativeSrc":"258:16:21","nodeType":"YulBlock","src":"258:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"267:1:21","nodeType":"YulLiteral","src":"267:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"270:1:21","nodeType":"YulLiteral","src":"270:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"260:6:21","nodeType":"YulIdentifier","src":"260:6:21"},"nativeSrc":"260:12:21","nodeType":"YulFunctionCall","src":"260:12:21"},"nativeSrc":"260:12:21","nodeType":"YulExpressionStatement","src":"260:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"217:5:21","nodeType":"YulIdentifier","src":"217:5:21"},{"arguments":[{"name":"value","nativeSrc":"228:5:21","nodeType":"YulIdentifier","src":"228:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"243:3:21","nodeType":"YulLiteral","src":"243:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"248:1:21","nodeType":"YulLiteral","src":"248:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"239:3:21","nodeType":"YulIdentifier","src":"239:3:21"},"nativeSrc":"239:11:21","nodeType":"YulFunctionCall","src":"239:11:21"},{"kind":"number","nativeSrc":"252:1:21","nodeType":"YulLiteral","src":"252:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"235:3:21","nodeType":"YulIdentifier","src":"235:3:21"},"nativeSrc":"235:19:21","nodeType":"YulFunctionCall","src":"235:19:21"}],"functionName":{"name":"and","nativeSrc":"224:3:21","nodeType":"YulIdentifier","src":"224:3:21"},"nativeSrc":"224:31:21","nodeType":"YulFunctionCall","src":"224:31:21"}],"functionName":{"name":"eq","nativeSrc":"214:2:21","nodeType":"YulIdentifier","src":"214:2:21"},"nativeSrc":"214:42:21","nodeType":"YulFunctionCall","src":"214:42:21"}],"functionName":{"name":"iszero","nativeSrc":"207:6:21","nodeType":"YulIdentifier","src":"207:6:21"},"nativeSrc":"207:50:21","nodeType":"YulFunctionCall","src":"207:50:21"},"nativeSrc":"204:70:21","nodeType":"YulIf","src":"204:70:21"},{"nativeSrc":"283:15:21","nodeType":"YulAssignment","src":"283:15:21","value":{"name":"value","nativeSrc":"293:5:21","nodeType":"YulIdentifier","src":"293:5:21"},"variableNames":[{"name":"value0","nativeSrc":"283:6:21","nodeType":"YulIdentifier","src":"283:6:21"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"14:290:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"61:9:21","nodeType":"YulTypedName","src":"61:9:21","type":""},{"name":"dataEnd","nativeSrc":"72:7:21","nodeType":"YulTypedName","src":"72:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"84:6:21","nodeType":"YulTypedName","src":"84:6:21","type":""}],"src":"14:290:21"},{"body":{"nativeSrc":"341:95:21","nodeType":"YulBlock","src":"341:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"358:1:21","nodeType":"YulLiteral","src":"358:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"365:3:21","nodeType":"YulLiteral","src":"365:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"370:10:21","nodeType":"YulLiteral","src":"370:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"361:3:21","nodeType":"YulIdentifier","src":"361:3:21"},"nativeSrc":"361:20:21","nodeType":"YulFunctionCall","src":"361:20:21"}],"functionName":{"name":"mstore","nativeSrc":"351:6:21","nodeType":"YulIdentifier","src":"351:6:21"},"nativeSrc":"351:31:21","nodeType":"YulFunctionCall","src":"351:31:21"},"nativeSrc":"351:31:21","nodeType":"YulExpressionStatement","src":"351:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"398:1:21","nodeType":"YulLiteral","src":"398:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"401:4:21","nodeType":"YulLiteral","src":"401:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"391:6:21","nodeType":"YulIdentifier","src":"391:6:21"},"nativeSrc":"391:15:21","nodeType":"YulFunctionCall","src":"391:15:21"},"nativeSrc":"391:15:21","nodeType":"YulExpressionStatement","src":"391:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"422:1:21","nodeType":"YulLiteral","src":"422:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"425:4:21","nodeType":"YulLiteral","src":"425:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"415:6:21","nodeType":"YulIdentifier","src":"415:6:21"},"nativeSrc":"415:15:21","nodeType":"YulFunctionCall","src":"415:15:21"},"nativeSrc":"415:15:21","nodeType":"YulExpressionStatement","src":"415:15:21"}]},"name":"panic_error_0x41","nativeSrc":"309:127:21","nodeType":"YulFunctionDefinition","src":"309:127:21"},{"body":{"nativeSrc":"496:325:21","nodeType":"YulBlock","src":"496:325:21","statements":[{"nativeSrc":"506:22:21","nodeType":"YulAssignment","src":"506:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"520:1:21","nodeType":"YulLiteral","src":"520:1:21","type":"","value":"1"},{"name":"data","nativeSrc":"523:4:21","nodeType":"YulIdentifier","src":"523:4:21"}],"functionName":{"name":"shr","nativeSrc":"516:3:21","nodeType":"YulIdentifier","src":"516:3:21"},"nativeSrc":"516:12:21","nodeType":"YulFunctionCall","src":"516:12:21"},"variableNames":[{"name":"length","nativeSrc":"506:6:21","nodeType":"YulIdentifier","src":"506:6:21"}]},{"nativeSrc":"537:38:21","nodeType":"YulVariableDeclaration","src":"537:38:21","value":{"arguments":[{"name":"data","nativeSrc":"567:4:21","nodeType":"YulIdentifier","src":"567:4:21"},{"kind":"number","nativeSrc":"573:1:21","nodeType":"YulLiteral","src":"573:1:21","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"563:3:21","nodeType":"YulIdentifier","src":"563:3:21"},"nativeSrc":"563:12:21","nodeType":"YulFunctionCall","src":"563:12:21"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"541:18:21","nodeType":"YulTypedName","src":"541:18:21","type":""}]},{"body":{"nativeSrc":"614:31:21","nodeType":"YulBlock","src":"614:31:21","statements":[{"nativeSrc":"616:27:21","nodeType":"YulAssignment","src":"616:27:21","value":{"arguments":[{"name":"length","nativeSrc":"630:6:21","nodeType":"YulIdentifier","src":"630:6:21"},{"kind":"number","nativeSrc":"638:4:21","nodeType":"YulLiteral","src":"638:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"626:3:21","nodeType":"YulIdentifier","src":"626:3:21"},"nativeSrc":"626:17:21","nodeType":"YulFunctionCall","src":"626:17:21"},"variableNames":[{"name":"length","nativeSrc":"616:6:21","nodeType":"YulIdentifier","src":"616:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"594:18:21","nodeType":"YulIdentifier","src":"594:18:21"}],"functionName":{"name":"iszero","nativeSrc":"587:6:21","nodeType":"YulIdentifier","src":"587:6:21"},"nativeSrc":"587:26:21","nodeType":"YulFunctionCall","src":"587:26:21"},"nativeSrc":"584:61:21","nodeType":"YulIf","src":"584:61:21"},{"body":{"nativeSrc":"704:111:21","nodeType":"YulBlock","src":"704:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"725:1:21","nodeType":"YulLiteral","src":"725:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"732:3:21","nodeType":"YulLiteral","src":"732:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"737:10:21","nodeType":"YulLiteral","src":"737:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"728:3:21","nodeType":"YulIdentifier","src":"728:3:21"},"nativeSrc":"728:20:21","nodeType":"YulFunctionCall","src":"728:20:21"}],"functionName":{"name":"mstore","nativeSrc":"718:6:21","nodeType":"YulIdentifier","src":"718:6:21"},"nativeSrc":"718:31:21","nodeType":"YulFunctionCall","src":"718:31:21"},"nativeSrc":"718:31:21","nodeType":"YulExpressionStatement","src":"718:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"769:1:21","nodeType":"YulLiteral","src":"769:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"772:4:21","nodeType":"YulLiteral","src":"772:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"762:6:21","nodeType":"YulIdentifier","src":"762:6:21"},"nativeSrc":"762:15:21","nodeType":"YulFunctionCall","src":"762:15:21"},"nativeSrc":"762:15:21","nodeType":"YulExpressionStatement","src":"762:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"797:1:21","nodeType":"YulLiteral","src":"797:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"800:4:21","nodeType":"YulLiteral","src":"800:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"790:6:21","nodeType":"YulIdentifier","src":"790:6:21"},"nativeSrc":"790:15:21","nodeType":"YulFunctionCall","src":"790:15:21"},"nativeSrc":"790:15:21","nodeType":"YulExpressionStatement","src":"790:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"660:18:21","nodeType":"YulIdentifier","src":"660:18:21"},{"arguments":[{"name":"length","nativeSrc":"683:6:21","nodeType":"YulIdentifier","src":"683:6:21"},{"kind":"number","nativeSrc":"691:2:21","nodeType":"YulLiteral","src":"691:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"680:2:21","nodeType":"YulIdentifier","src":"680:2:21"},"nativeSrc":"680:14:21","nodeType":"YulFunctionCall","src":"680:14:21"}],"functionName":{"name":"eq","nativeSrc":"657:2:21","nodeType":"YulIdentifier","src":"657:2:21"},"nativeSrc":"657:38:21","nodeType":"YulFunctionCall","src":"657:38:21"},"nativeSrc":"654:161:21","nodeType":"YulIf","src":"654:161:21"}]},"name":"extract_byte_array_length","nativeSrc":"441:380:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"476:4:21","nodeType":"YulTypedName","src":"476:4:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"485:6:21","nodeType":"YulTypedName","src":"485:6:21","type":""}],"src":"441:380:21"},{"body":{"nativeSrc":"882:65:21","nodeType":"YulBlock","src":"882:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"899:1:21","nodeType":"YulLiteral","src":"899:1:21","type":"","value":"0"},{"name":"ptr","nativeSrc":"902:3:21","nodeType":"YulIdentifier","src":"902:3:21"}],"functionName":{"name":"mstore","nativeSrc":"892:6:21","nodeType":"YulIdentifier","src":"892:6:21"},"nativeSrc":"892:14:21","nodeType":"YulFunctionCall","src":"892:14:21"},"nativeSrc":"892:14:21","nodeType":"YulExpressionStatement","src":"892:14:21"},{"nativeSrc":"915:26:21","nodeType":"YulAssignment","src":"915:26:21","value":{"arguments":[{"kind":"number","nativeSrc":"933:1:21","nodeType":"YulLiteral","src":"933:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"936:4:21","nodeType":"YulLiteral","src":"936:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"923:9:21","nodeType":"YulIdentifier","src":"923:9:21"},"nativeSrc":"923:18:21","nodeType":"YulFunctionCall","src":"923:18:21"},"variableNames":[{"name":"data","nativeSrc":"915:4:21","nodeType":"YulIdentifier","src":"915:4:21"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"826:121:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"865:3:21","nodeType":"YulTypedName","src":"865:3:21","type":""}],"returnVariables":[{"name":"data","nativeSrc":"873:4:21","nodeType":"YulTypedName","src":"873:4:21","type":""}],"src":"826:121:21"},{"body":{"nativeSrc":"1033:437:21","nodeType":"YulBlock","src":"1033:437:21","statements":[{"body":{"nativeSrc":"1066:398:21","nodeType":"YulBlock","src":"1066:398:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1087:1:21","nodeType":"YulLiteral","src":"1087:1:21","type":"","value":"0"},{"name":"array","nativeSrc":"1090:5:21","nodeType":"YulIdentifier","src":"1090:5:21"}],"functionName":{"name":"mstore","nativeSrc":"1080:6:21","nodeType":"YulIdentifier","src":"1080:6:21"},"nativeSrc":"1080:16:21","nodeType":"YulFunctionCall","src":"1080:16:21"},"nativeSrc":"1080:16:21","nodeType":"YulExpressionStatement","src":"1080:16:21"},{"nativeSrc":"1109:30:21","nodeType":"YulVariableDeclaration","src":"1109:30:21","value":{"arguments":[{"kind":"number","nativeSrc":"1131:1:21","nodeType":"YulLiteral","src":"1131:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1134:4:21","nodeType":"YulLiteral","src":"1134:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1121:9:21","nodeType":"YulIdentifier","src":"1121:9:21"},"nativeSrc":"1121:18:21","nodeType":"YulFunctionCall","src":"1121:18:21"},"variables":[{"name":"data","nativeSrc":"1113:4:21","nodeType":"YulTypedName","src":"1113:4:21","type":""}]},{"nativeSrc":"1152:57:21","nodeType":"YulVariableDeclaration","src":"1152:57:21","value":{"arguments":[{"name":"data","nativeSrc":"1175:4:21","nodeType":"YulIdentifier","src":"1175:4:21"},{"arguments":[{"kind":"number","nativeSrc":"1185:1:21","nodeType":"YulLiteral","src":"1185:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"1192:10:21","nodeType":"YulIdentifier","src":"1192:10:21"},{"kind":"number","nativeSrc":"1204:2:21","nodeType":"YulLiteral","src":"1204:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1188:3:21","nodeType":"YulIdentifier","src":"1188:3:21"},"nativeSrc":"1188:19:21","nodeType":"YulFunctionCall","src":"1188:19:21"}],"functionName":{"name":"shr","nativeSrc":"1181:3:21","nodeType":"YulIdentifier","src":"1181:3:21"},"nativeSrc":"1181:27:21","nodeType":"YulFunctionCall","src":"1181:27:21"}],"functionName":{"name":"add","nativeSrc":"1171:3:21","nodeType":"YulIdentifier","src":"1171:3:21"},"nativeSrc":"1171:38:21","nodeType":"YulFunctionCall","src":"1171:38:21"},"variables":[{"name":"deleteStart","nativeSrc":"1156:11:21","nodeType":"YulTypedName","src":"1156:11:21","type":""}]},{"body":{"nativeSrc":"1246:23:21","nodeType":"YulBlock","src":"1246:23:21","statements":[{"nativeSrc":"1248:19:21","nodeType":"YulAssignment","src":"1248:19:21","value":{"name":"data","nativeSrc":"1263:4:21","nodeType":"YulIdentifier","src":"1263:4:21"},"variableNames":[{"name":"deleteStart","nativeSrc":"1248:11:21","nodeType":"YulIdentifier","src":"1248:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"1228:10:21","nodeType":"YulIdentifier","src":"1228:10:21"},{"kind":"number","nativeSrc":"1240:4:21","nodeType":"YulLiteral","src":"1240:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"1225:2:21","nodeType":"YulIdentifier","src":"1225:2:21"},"nativeSrc":"1225:20:21","nodeType":"YulFunctionCall","src":"1225:20:21"},"nativeSrc":"1222:47:21","nodeType":"YulIf","src":"1222:47:21"},{"nativeSrc":"1282:41:21","nodeType":"YulVariableDeclaration","src":"1282:41:21","value":{"arguments":[{"name":"data","nativeSrc":"1296:4:21","nodeType":"YulIdentifier","src":"1296:4:21"},{"arguments":[{"kind":"number","nativeSrc":"1306:1:21","nodeType":"YulLiteral","src":"1306:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1313:3:21","nodeType":"YulIdentifier","src":"1313:3:21"},{"kind":"number","nativeSrc":"1318:2:21","nodeType":"YulLiteral","src":"1318:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1309:3:21","nodeType":"YulIdentifier","src":"1309:3:21"},"nativeSrc":"1309:12:21","nodeType":"YulFunctionCall","src":"1309:12:21"}],"functionName":{"name":"shr","nativeSrc":"1302:3:21","nodeType":"YulIdentifier","src":"1302:3:21"},"nativeSrc":"1302:20:21","nodeType":"YulFunctionCall","src":"1302:20:21"}],"functionName":{"name":"add","nativeSrc":"1292:3:21","nodeType":"YulIdentifier","src":"1292:3:21"},"nativeSrc":"1292:31:21","nodeType":"YulFunctionCall","src":"1292:31:21"},"variables":[{"name":"_1","nativeSrc":"1286:2:21","nodeType":"YulTypedName","src":"1286:2:21","type":""}]},{"nativeSrc":"1336:24:21","nodeType":"YulVariableDeclaration","src":"1336:24:21","value":{"name":"deleteStart","nativeSrc":"1349:11:21","nodeType":"YulIdentifier","src":"1349:11:21"},"variables":[{"name":"start","nativeSrc":"1340:5:21","nodeType":"YulTypedName","src":"1340:5:21","type":""}]},{"body":{"nativeSrc":"1434:20:21","nodeType":"YulBlock","src":"1434:20:21","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1443:5:21","nodeType":"YulIdentifier","src":"1443:5:21"},{"kind":"number","nativeSrc":"1450:1:21","nodeType":"YulLiteral","src":"1450:1:21","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"1436:6:21","nodeType":"YulIdentifier","src":"1436:6:21"},"nativeSrc":"1436:16:21","nodeType":"YulFunctionCall","src":"1436:16:21"},"nativeSrc":"1436:16:21","nodeType":"YulExpressionStatement","src":"1436:16:21"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1384:5:21","nodeType":"YulIdentifier","src":"1384:5:21"},{"name":"_1","nativeSrc":"1391:2:21","nodeType":"YulIdentifier","src":"1391:2:21"}],"functionName":{"name":"lt","nativeSrc":"1381:2:21","nodeType":"YulIdentifier","src":"1381:2:21"},"nativeSrc":"1381:13:21","nodeType":"YulFunctionCall","src":"1381:13:21"},"nativeSrc":"1373:81:21","nodeType":"YulForLoop","post":{"nativeSrc":"1395:26:21","nodeType":"YulBlock","src":"1395:26:21","statements":[{"nativeSrc":"1397:22:21","nodeType":"YulAssignment","src":"1397:22:21","value":{"arguments":[{"name":"start","nativeSrc":"1410:5:21","nodeType":"YulIdentifier","src":"1410:5:21"},{"kind":"number","nativeSrc":"1417:1:21","nodeType":"YulLiteral","src":"1417:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1406:3:21","nodeType":"YulIdentifier","src":"1406:3:21"},"nativeSrc":"1406:13:21","nodeType":"YulFunctionCall","src":"1406:13:21"},"variableNames":[{"name":"start","nativeSrc":"1397:5:21","nodeType":"YulIdentifier","src":"1397:5:21"}]}]},"pre":{"nativeSrc":"1377:3:21","nodeType":"YulBlock","src":"1377:3:21","statements":[]},"src":"1373:81:21"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"1049:3:21","nodeType":"YulIdentifier","src":"1049:3:21"},{"kind":"number","nativeSrc":"1054:2:21","nodeType":"YulLiteral","src":"1054:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1046:2:21","nodeType":"YulIdentifier","src":"1046:2:21"},"nativeSrc":"1046:11:21","nodeType":"YulFunctionCall","src":"1046:11:21"},"nativeSrc":"1043:421:21","nodeType":"YulIf","src":"1043:421:21"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"952:518:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"1005:5:21","nodeType":"YulTypedName","src":"1005:5:21","type":""},{"name":"len","nativeSrc":"1012:3:21","nodeType":"YulTypedName","src":"1012:3:21","type":""},{"name":"startIndex","nativeSrc":"1017:10:21","nodeType":"YulTypedName","src":"1017:10:21","type":""}],"src":"952:518:21"},{"body":{"nativeSrc":"1560:81:21","nodeType":"YulBlock","src":"1560:81:21","statements":[{"nativeSrc":"1570:65:21","nodeType":"YulAssignment","src":"1570:65:21","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1585:4:21","nodeType":"YulIdentifier","src":"1585:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1603:1:21","nodeType":"YulLiteral","src":"1603:1:21","type":"","value":"3"},{"name":"len","nativeSrc":"1606:3:21","nodeType":"YulIdentifier","src":"1606:3:21"}],"functionName":{"name":"shl","nativeSrc":"1599:3:21","nodeType":"YulIdentifier","src":"1599:3:21"},"nativeSrc":"1599:11:21","nodeType":"YulFunctionCall","src":"1599:11:21"},{"arguments":[{"kind":"number","nativeSrc":"1616:1:21","nodeType":"YulLiteral","src":"1616:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1612:3:21","nodeType":"YulIdentifier","src":"1612:3:21"},"nativeSrc":"1612:6:21","nodeType":"YulFunctionCall","src":"1612:6:21"}],"functionName":{"name":"shr","nativeSrc":"1595:3:21","nodeType":"YulIdentifier","src":"1595:3:21"},"nativeSrc":"1595:24:21","nodeType":"YulFunctionCall","src":"1595:24:21"}],"functionName":{"name":"not","nativeSrc":"1591:3:21","nodeType":"YulIdentifier","src":"1591:3:21"},"nativeSrc":"1591:29:21","nodeType":"YulFunctionCall","src":"1591:29:21"}],"functionName":{"name":"and","nativeSrc":"1581:3:21","nodeType":"YulIdentifier","src":"1581:3:21"},"nativeSrc":"1581:40:21","nodeType":"YulFunctionCall","src":"1581:40:21"},{"arguments":[{"kind":"number","nativeSrc":"1627:1:21","nodeType":"YulLiteral","src":"1627:1:21","type":"","value":"1"},{"name":"len","nativeSrc":"1630:3:21","nodeType":"YulIdentifier","src":"1630:3:21"}],"functionName":{"name":"shl","nativeSrc":"1623:3:21","nodeType":"YulIdentifier","src":"1623:3:21"},"nativeSrc":"1623:11:21","nodeType":"YulFunctionCall","src":"1623:11:21"}],"functionName":{"name":"or","nativeSrc":"1578:2:21","nodeType":"YulIdentifier","src":"1578:2:21"},"nativeSrc":"1578:57:21","nodeType":"YulFunctionCall","src":"1578:57:21"},"variableNames":[{"name":"used","nativeSrc":"1570:4:21","nodeType":"YulIdentifier","src":"1570:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1475:166:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1537:4:21","nodeType":"YulTypedName","src":"1537:4:21","type":""},{"name":"len","nativeSrc":"1543:3:21","nodeType":"YulTypedName","src":"1543:3:21","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1551:4:21","nodeType":"YulTypedName","src":"1551:4:21","type":""}],"src":"1475:166:21"},{"body":{"nativeSrc":"1742:1203:21","nodeType":"YulBlock","src":"1742:1203:21","statements":[{"nativeSrc":"1752:24:21","nodeType":"YulVariableDeclaration","src":"1752:24:21","value":{"arguments":[{"name":"src","nativeSrc":"1772:3:21","nodeType":"YulIdentifier","src":"1772:3:21"}],"functionName":{"name":"mload","nativeSrc":"1766:5:21","nodeType":"YulIdentifier","src":"1766:5:21"},"nativeSrc":"1766:10:21","nodeType":"YulFunctionCall","src":"1766:10:21"},"variables":[{"name":"newLen","nativeSrc":"1756:6:21","nodeType":"YulTypedName","src":"1756:6:21","type":""}]},{"body":{"nativeSrc":"1819:22:21","nodeType":"YulBlock","src":"1819:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1821:16:21","nodeType":"YulIdentifier","src":"1821:16:21"},"nativeSrc":"1821:18:21","nodeType":"YulFunctionCall","src":"1821:18:21"},"nativeSrc":"1821:18:21","nodeType":"YulExpressionStatement","src":"1821:18:21"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"1791:6:21","nodeType":"YulIdentifier","src":"1791:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1807:2:21","nodeType":"YulLiteral","src":"1807:2:21","type":"","value":"64"},{"kind":"number","nativeSrc":"1811:1:21","nodeType":"YulLiteral","src":"1811:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1803:3:21","nodeType":"YulIdentifier","src":"1803:3:21"},"nativeSrc":"1803:10:21","nodeType":"YulFunctionCall","src":"1803:10:21"},{"kind":"number","nativeSrc":"1815:1:21","nodeType":"YulLiteral","src":"1815:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1799:3:21","nodeType":"YulIdentifier","src":"1799:3:21"},"nativeSrc":"1799:18:21","nodeType":"YulFunctionCall","src":"1799:18:21"}],"functionName":{"name":"gt","nativeSrc":"1788:2:21","nodeType":"YulIdentifier","src":"1788:2:21"},"nativeSrc":"1788:30:21","nodeType":"YulFunctionCall","src":"1788:30:21"},"nativeSrc":"1785:56:21","nodeType":"YulIf","src":"1785:56:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"1894:4:21","nodeType":"YulIdentifier","src":"1894:4:21"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"1932:4:21","nodeType":"YulIdentifier","src":"1932:4:21"}],"functionName":{"name":"sload","nativeSrc":"1926:5:21","nodeType":"YulIdentifier","src":"1926:5:21"},"nativeSrc":"1926:11:21","nodeType":"YulFunctionCall","src":"1926:11:21"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"1900:25:21","nodeType":"YulIdentifier","src":"1900:25:21"},"nativeSrc":"1900:38:21","nodeType":"YulFunctionCall","src":"1900:38:21"},{"name":"newLen","nativeSrc":"1940:6:21","nodeType":"YulIdentifier","src":"1940:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1850:43:21","nodeType":"YulIdentifier","src":"1850:43:21"},"nativeSrc":"1850:97:21","nodeType":"YulFunctionCall","src":"1850:97:21"},"nativeSrc":"1850:97:21","nodeType":"YulExpressionStatement","src":"1850:97:21"},{"nativeSrc":"1956:18:21","nodeType":"YulVariableDeclaration","src":"1956:18:21","value":{"kind":"number","nativeSrc":"1973:1:21","nodeType":"YulLiteral","src":"1973:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"1960:9:21","nodeType":"YulTypedName","src":"1960:9:21","type":""}]},{"nativeSrc":"1983:17:21","nodeType":"YulAssignment","src":"1983:17:21","value":{"kind":"number","nativeSrc":"1996:4:21","nodeType":"YulLiteral","src":"1996:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"1983:9:21","nodeType":"YulIdentifier","src":"1983:9:21"}]},{"cases":[{"body":{"nativeSrc":"2046:642:21","nodeType":"YulBlock","src":"2046:642:21","statements":[{"nativeSrc":"2060:35:21","nodeType":"YulVariableDeclaration","src":"2060:35:21","value":{"arguments":[{"name":"newLen","nativeSrc":"2079:6:21","nodeType":"YulIdentifier","src":"2079:6:21"},{"arguments":[{"kind":"number","nativeSrc":"2091:2:21","nodeType":"YulLiteral","src":"2091:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2087:3:21","nodeType":"YulIdentifier","src":"2087:3:21"},"nativeSrc":"2087:7:21","nodeType":"YulFunctionCall","src":"2087:7:21"}],"functionName":{"name":"and","nativeSrc":"2075:3:21","nodeType":"YulIdentifier","src":"2075:3:21"},"nativeSrc":"2075:20:21","nodeType":"YulFunctionCall","src":"2075:20:21"},"variables":[{"name":"loopEnd","nativeSrc":"2064:7:21","nodeType":"YulTypedName","src":"2064:7:21","type":""}]},{"nativeSrc":"2108:49:21","nodeType":"YulVariableDeclaration","src":"2108:49:21","value":{"arguments":[{"name":"slot","nativeSrc":"2152:4:21","nodeType":"YulIdentifier","src":"2152:4:21"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"2122:29:21","nodeType":"YulIdentifier","src":"2122:29:21"},"nativeSrc":"2122:35:21","nodeType":"YulFunctionCall","src":"2122:35:21"},"variables":[{"name":"dstPtr","nativeSrc":"2112:6:21","nodeType":"YulTypedName","src":"2112:6:21","type":""}]},{"nativeSrc":"2170:10:21","nodeType":"YulVariableDeclaration","src":"2170:10:21","value":{"kind":"number","nativeSrc":"2179:1:21","nodeType":"YulLiteral","src":"2179:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2174:1:21","nodeType":"YulTypedName","src":"2174:1:21","type":""}]},{"body":{"nativeSrc":"2250:165:21","nodeType":"YulBlock","src":"2250:165:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2275:6:21","nodeType":"YulIdentifier","src":"2275:6:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2293:3:21","nodeType":"YulIdentifier","src":"2293:3:21"},{"name":"srcOffset","nativeSrc":"2298:9:21","nodeType":"YulIdentifier","src":"2298:9:21"}],"functionName":{"name":"add","nativeSrc":"2289:3:21","nodeType":"YulIdentifier","src":"2289:3:21"},"nativeSrc":"2289:19:21","nodeType":"YulFunctionCall","src":"2289:19:21"}],"functionName":{"name":"mload","nativeSrc":"2283:5:21","nodeType":"YulIdentifier","src":"2283:5:21"},"nativeSrc":"2283:26:21","nodeType":"YulFunctionCall","src":"2283:26:21"}],"functionName":{"name":"sstore","nativeSrc":"2268:6:21","nodeType":"YulIdentifier","src":"2268:6:21"},"nativeSrc":"2268:42:21","nodeType":"YulFunctionCall","src":"2268:42:21"},"nativeSrc":"2268:42:21","nodeType":"YulExpressionStatement","src":"2268:42:21"},{"nativeSrc":"2327:24:21","nodeType":"YulAssignment","src":"2327:24:21","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2341:6:21","nodeType":"YulIdentifier","src":"2341:6:21"},{"kind":"number","nativeSrc":"2349:1:21","nodeType":"YulLiteral","src":"2349:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2337:3:21","nodeType":"YulIdentifier","src":"2337:3:21"},"nativeSrc":"2337:14:21","nodeType":"YulFunctionCall","src":"2337:14:21"},"variableNames":[{"name":"dstPtr","nativeSrc":"2327:6:21","nodeType":"YulIdentifier","src":"2327:6:21"}]},{"nativeSrc":"2368:33:21","nodeType":"YulAssignment","src":"2368:33:21","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2385:9:21","nodeType":"YulIdentifier","src":"2385:9:21"},{"kind":"number","nativeSrc":"2396:4:21","nodeType":"YulLiteral","src":"2396:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2381:3:21","nodeType":"YulIdentifier","src":"2381:3:21"},"nativeSrc":"2381:20:21","nodeType":"YulFunctionCall","src":"2381:20:21"},"variableNames":[{"name":"srcOffset","nativeSrc":"2368:9:21","nodeType":"YulIdentifier","src":"2368:9:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2204:1:21","nodeType":"YulIdentifier","src":"2204:1:21"},{"name":"loopEnd","nativeSrc":"2207:7:21","nodeType":"YulIdentifier","src":"2207:7:21"}],"functionName":{"name":"lt","nativeSrc":"2201:2:21","nodeType":"YulIdentifier","src":"2201:2:21"},"nativeSrc":"2201:14:21","nodeType":"YulFunctionCall","src":"2201:14:21"},"nativeSrc":"2193:222:21","nodeType":"YulForLoop","post":{"nativeSrc":"2216:21:21","nodeType":"YulBlock","src":"2216:21:21","statements":[{"nativeSrc":"2218:17:21","nodeType":"YulAssignment","src":"2218:17:21","value":{"arguments":[{"name":"i","nativeSrc":"2227:1:21","nodeType":"YulIdentifier","src":"2227:1:21"},{"kind":"number","nativeSrc":"2230:4:21","nodeType":"YulLiteral","src":"2230:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2223:3:21","nodeType":"YulIdentifier","src":"2223:3:21"},"nativeSrc":"2223:12:21","nodeType":"YulFunctionCall","src":"2223:12:21"},"variableNames":[{"name":"i","nativeSrc":"2218:1:21","nodeType":"YulIdentifier","src":"2218:1:21"}]}]},"pre":{"nativeSrc":"2197:3:21","nodeType":"YulBlock","src":"2197:3:21","statements":[]},"src":"2193:222:21"},{"body":{"nativeSrc":"2463:166:21","nodeType":"YulBlock","src":"2463:166:21","statements":[{"nativeSrc":"2481:43:21","nodeType":"YulVariableDeclaration","src":"2481:43:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2508:3:21","nodeType":"YulIdentifier","src":"2508:3:21"},{"name":"srcOffset","nativeSrc":"2513:9:21","nodeType":"YulIdentifier","src":"2513:9:21"}],"functionName":{"name":"add","nativeSrc":"2504:3:21","nodeType":"YulIdentifier","src":"2504:3:21"},"nativeSrc":"2504:19:21","nodeType":"YulFunctionCall","src":"2504:19:21"}],"functionName":{"name":"mload","nativeSrc":"2498:5:21","nodeType":"YulIdentifier","src":"2498:5:21"},"nativeSrc":"2498:26:21","nodeType":"YulFunctionCall","src":"2498:26:21"},"variables":[{"name":"lastValue","nativeSrc":"2485:9:21","nodeType":"YulTypedName","src":"2485:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2548:6:21","nodeType":"YulIdentifier","src":"2548:6:21"},{"arguments":[{"name":"lastValue","nativeSrc":"2560:9:21","nodeType":"YulIdentifier","src":"2560:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2587:1:21","nodeType":"YulLiteral","src":"2587:1:21","type":"","value":"3"},{"name":"newLen","nativeSrc":"2590:6:21","nodeType":"YulIdentifier","src":"2590:6:21"}],"functionName":{"name":"shl","nativeSrc":"2583:3:21","nodeType":"YulIdentifier","src":"2583:3:21"},"nativeSrc":"2583:14:21","nodeType":"YulFunctionCall","src":"2583:14:21"},{"kind":"number","nativeSrc":"2599:3:21","nodeType":"YulLiteral","src":"2599:3:21","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2579:3:21","nodeType":"YulIdentifier","src":"2579:3:21"},"nativeSrc":"2579:24:21","nodeType":"YulFunctionCall","src":"2579:24:21"},{"arguments":[{"kind":"number","nativeSrc":"2609:1:21","nodeType":"YulLiteral","src":"2609:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2605:3:21","nodeType":"YulIdentifier","src":"2605:3:21"},"nativeSrc":"2605:6:21","nodeType":"YulFunctionCall","src":"2605:6:21"}],"functionName":{"name":"shr","nativeSrc":"2575:3:21","nodeType":"YulIdentifier","src":"2575:3:21"},"nativeSrc":"2575:37:21","nodeType":"YulFunctionCall","src":"2575:37:21"}],"functionName":{"name":"not","nativeSrc":"2571:3:21","nodeType":"YulIdentifier","src":"2571:3:21"},"nativeSrc":"2571:42:21","nodeType":"YulFunctionCall","src":"2571:42:21"}],"functionName":{"name":"and","nativeSrc":"2556:3:21","nodeType":"YulIdentifier","src":"2556:3:21"},"nativeSrc":"2556:58:21","nodeType":"YulFunctionCall","src":"2556:58:21"}],"functionName":{"name":"sstore","nativeSrc":"2541:6:21","nodeType":"YulIdentifier","src":"2541:6:21"},"nativeSrc":"2541:74:21","nodeType":"YulFunctionCall","src":"2541:74:21"},"nativeSrc":"2541:74:21","nodeType":"YulExpressionStatement","src":"2541:74:21"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2434:7:21","nodeType":"YulIdentifier","src":"2434:7:21"},{"name":"newLen","nativeSrc":"2443:6:21","nodeType":"YulIdentifier","src":"2443:6:21"}],"functionName":{"name":"lt","nativeSrc":"2431:2:21","nodeType":"YulIdentifier","src":"2431:2:21"},"nativeSrc":"2431:19:21","nodeType":"YulFunctionCall","src":"2431:19:21"},"nativeSrc":"2428:201:21","nodeType":"YulIf","src":"2428:201:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2649:4:21","nodeType":"YulIdentifier","src":"2649:4:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2663:1:21","nodeType":"YulLiteral","src":"2663:1:21","type":"","value":"1"},{"name":"newLen","nativeSrc":"2666:6:21","nodeType":"YulIdentifier","src":"2666:6:21"}],"functionName":{"name":"shl","nativeSrc":"2659:3:21","nodeType":"YulIdentifier","src":"2659:3:21"},"nativeSrc":"2659:14:21","nodeType":"YulFunctionCall","src":"2659:14:21"},{"kind":"number","nativeSrc":"2675:1:21","nodeType":"YulLiteral","src":"2675:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2655:3:21","nodeType":"YulIdentifier","src":"2655:3:21"},"nativeSrc":"2655:22:21","nodeType":"YulFunctionCall","src":"2655:22:21"}],"functionName":{"name":"sstore","nativeSrc":"2642:6:21","nodeType":"YulIdentifier","src":"2642:6:21"},"nativeSrc":"2642:36:21","nodeType":"YulFunctionCall","src":"2642:36:21"},"nativeSrc":"2642:36:21","nodeType":"YulExpressionStatement","src":"2642:36:21"}]},"nativeSrc":"2039:649:21","nodeType":"YulCase","src":"2039:649:21","value":{"kind":"number","nativeSrc":"2044:1:21","nodeType":"YulLiteral","src":"2044:1:21","type":"","value":"1"}},{"body":{"nativeSrc":"2705:234:21","nodeType":"YulBlock","src":"2705:234:21","statements":[{"nativeSrc":"2719:14:21","nodeType":"YulVariableDeclaration","src":"2719:14:21","value":{"kind":"number","nativeSrc":"2732:1:21","nodeType":"YulLiteral","src":"2732:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2723:5:21","nodeType":"YulTypedName","src":"2723:5:21","type":""}]},{"body":{"nativeSrc":"2768:67:21","nodeType":"YulBlock","src":"2768:67:21","statements":[{"nativeSrc":"2786:35:21","nodeType":"YulAssignment","src":"2786:35:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2805:3:21","nodeType":"YulIdentifier","src":"2805:3:21"},{"name":"srcOffset","nativeSrc":"2810:9:21","nodeType":"YulIdentifier","src":"2810:9:21"}],"functionName":{"name":"add","nativeSrc":"2801:3:21","nodeType":"YulIdentifier","src":"2801:3:21"},"nativeSrc":"2801:19:21","nodeType":"YulFunctionCall","src":"2801:19:21"}],"functionName":{"name":"mload","nativeSrc":"2795:5:21","nodeType":"YulIdentifier","src":"2795:5:21"},"nativeSrc":"2795:26:21","nodeType":"YulFunctionCall","src":"2795:26:21"},"variableNames":[{"name":"value","nativeSrc":"2786:5:21","nodeType":"YulIdentifier","src":"2786:5:21"}]}]},"condition":{"name":"newLen","nativeSrc":"2749:6:21","nodeType":"YulIdentifier","src":"2749:6:21"},"nativeSrc":"2746:89:21","nodeType":"YulIf","src":"2746:89:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2855:4:21","nodeType":"YulIdentifier","src":"2855:4:21"},{"arguments":[{"name":"value","nativeSrc":"2914:5:21","nodeType":"YulIdentifier","src":"2914:5:21"},{"name":"newLen","nativeSrc":"2921:6:21","nodeType":"YulIdentifier","src":"2921:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2861:52:21","nodeType":"YulIdentifier","src":"2861:52:21"},"nativeSrc":"2861:67:21","nodeType":"YulFunctionCall","src":"2861:67:21"}],"functionName":{"name":"sstore","nativeSrc":"2848:6:21","nodeType":"YulIdentifier","src":"2848:6:21"},"nativeSrc":"2848:81:21","nodeType":"YulFunctionCall","src":"2848:81:21"},"nativeSrc":"2848:81:21","nodeType":"YulExpressionStatement","src":"2848:81:21"}]},"nativeSrc":"2697:242:21","nodeType":"YulCase","src":"2697:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"2019:6:21","nodeType":"YulIdentifier","src":"2019:6:21"},{"kind":"number","nativeSrc":"2027:2:21","nodeType":"YulLiteral","src":"2027:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2016:2:21","nodeType":"YulIdentifier","src":"2016:2:21"},"nativeSrc":"2016:14:21","nodeType":"YulFunctionCall","src":"2016:14:21"},"nativeSrc":"2009:930:21","nodeType":"YulSwitch","src":"2009:930:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1646:1299:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1727:4:21","nodeType":"YulTypedName","src":"1727:4:21","type":""},{"name":"src","nativeSrc":"1733:3:21","nodeType":"YulTypedName","src":"1733:3:21","type":""}],"src":"1646:1299:21"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051611cd4380380611cd483398101604081905261002f916101d5565b6040518060400160405280600b81526020016a1219585b1d1a125113919560aa1b815250604051806040016040528060068152602001650908a8298a8960d31b815250816000908161008191906102a4565b50600161008e82826102a4565b5050506001600160a01b0381166100b857604051634968a64f60e11b815260040160405180910390fd5b6100c3600082610125565b506100ee7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a682610125565b506101197fa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab33610125565b50506001600855610362565b60008281526007602090815260408083206001600160a01b038516845290915281205460ff166101cb5760008381526007602090815260408083206001600160a01b03861684529091529020805460ff191660011790556101833390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016101cf565b5060005b92915050565b6000602082840312156101e757600080fd5b81516001600160a01b03811681146101fe57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061022f57607f821691505b60208210810361024f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561029f57806000526020600020601f840160051c8101602085101561027c5750805b601f840160051c820191505b8181101561029c5760008155600101610288565b50505b505050565b81516001600160401b038111156102bd576102bd610205565b6102d1816102cb845461021b565b84610255565b6020601f82116001811461030557600083156102ed5750848201515b600019600385901b1c1916600184901b17845561029c565b600084815260208120601f198516915b828110156103355787850151825560209485019460019092019101610315565b50848210156103535786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b611963806103716000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80636352211e116100de578063a22cb46511610097578063d539139311610071578063d539139314610358578063d547741f1461037f578063e328400c14610392578063e985e9c5146103b957600080fd5b8063a22cb4651461031f578063b88d4fde14610332578063c87b56dd1461034557600080fd5b80636352211e146102c35780636a627842146102d657806370a08231146102e957806391d14854146102fc57806395d89b411461030f578063a217fddf1461031757600080fd5b8063248a9ca31161014b57806342842e0e1161012557806342842e0e14610282578063471d06f41461029557806353c8388e146102a857806356189236146102bb57600080fd5b8063248a9ca3146102395780632f2ff15d1461025c57806336568abe1461026f57600080fd5b806301ffc9a71461019357806306fdde03146101bb578063081812fc146101d0578063095ea7b3146101fb57806318160ddd1461021057806323b872dd14610226575b600080fd5b6101a66101a13660046113b4565b6103cc565b60405190151581526020015b60405180910390f35b6101c36103dd565b6040516101b29190611421565b6101e36101de366004611434565b61046f565b6040516001600160a01b0390911681526020016101b2565b61020e610209366004611469565b610498565b005b6102186104a7565b6040519081526020016101b2565b61020e610234366004611493565b6104bd565b610218610247366004611434565b60009081526007602052604090206001015490565b61020e61026a3660046114d0565b61054d565b61020e61027d3660046114d0565b610572565b61020e610290366004611493565b6105aa565b6102186102a33660046115ac565b6105c5565b61020e6102b63660046115fa565b61068d565b600854610218565b6101e36102d1366004611434565b610714565b6102186102e436600461162b565b61071f565b6102186102f736600461162b565b6107e8565b6101a661030a3660046114d0565b610830565b6101c361085b565b610218600081565b61020e61032d366004611646565b61086a565b61020e610340366004611682565b610875565b6101c3610353366004611434565b61088d565b6102187f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61020e61038d3660046114d0565b61099e565b6102187fa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab81565b6101a66103c73660046116fe565b6109c3565b60006103d7826109f1565b92915050565b6060600080546103ec90611728565b80601f016020809104026020016040519081016040528092919081815260200182805461041890611728565b80156104655780601f1061043a57610100808354040283529160200191610465565b820191906000526020600020905b81548152906001019060200180831161044857829003601f168201915b5050505050905090565b600061047a82610a16565b506000828152600460205260409020546001600160a01b03166103d7565b6104a3828233610a4f565b5050565b600060016008546104b89190611772565b905090565b6001600160a01b0382166104ec57604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006104f9838333610a5c565b9050836001600160a01b0316816001600160a01b031614610547576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016104e3565b50505050565b60008281526007602052604090206001015461056881610abd565b6105478383610aca565b6001600160a01b038116331461059b5760405163334bd91960e11b815260040160405180910390fd5b6105a58282610b5e565b505050565b6105a583838360405180602001604052806000815250610875565b60007f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66105f181610abd565b6001600160a01b0384166106185760405163d92e233d60e01b815260040160405180910390fd5b60088054908190600061062a83611785565b91905055506106398582610bcb565b6106438185610c30565b80856001600160a01b03167fc003d77b1510ac4ae95db12dd6b9f37869ddc183c76c2f6fda6dc5124f5bd2188660405161067d9190611421565b60405180910390a3949350505050565b600061069881610abd565b6000838152600260205260409020546001600160a01b03166106cd576040516307ed98ed60e31b815260040160405180910390fd5b6106d78383610c30565b827f78d07928bd1d46a549dbf60e803372a8dc0bd1dcceb19beeef02777394fd6b74836040516107079190611421565b60405180910390a2505050565b60006103d782610a16565b60007f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661074b81610abd565b6001600160a01b0383166107725760405163d92e233d60e01b815260040160405180910390fd5b60088054908190600061078483611785565b91905055506107938482610bcb565b80846001600160a01b03167fc003d77b1510ac4ae95db12dd6b9f37869ddc183c76c2f6fda6dc5124f5bd2186040516107d790602080825260009082015260400190565b60405180910390a391505b50919050565b60006001600160a01b038216610814576040516322718ad960e21b8152600060048201526024016104e3565b506001600160a01b031660009081526003602052604090205490565b60009182526007602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600180546103ec90611728565b6104a3338383610c80565b6108808484846104bd565b6105473385858585610d1f565b606061089882610a16565b50600082815260066020526040812080546108b290611728565b80601f01602080910402602001604051908101604052809291908181526020018280546108de90611728565b801561092b5780601f106109005761010080835404028352916020019161092b565b820191906000526020600020905b81548152906001019060200180831161090e57829003601f168201915b50505050509050600061094960408051602081019091526000815290565b9050805160000361095b575092915050565b81511561098d57808260405160200161097592919061179e565b60405160208183030381529060405292505050919050565b61099684610e4a565b949350505050565b6000828152600760205260409020600101546109b981610abd565b6105478383610b5e565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b03198216637965db0b60e01b14806103d757506103d782610ebf565b6000818152600260205260408120546001600160a01b0316806103d757604051637e27328960e01b8152600481018490526024016104e3565b6105a58383836001610ee4565b6000828152600260205260408120546001600160a01b03168015801590610a8b57506001600160a01b03851615155b15610aa957604051630d18115360e11b815260040160405180910390fd5b610ab4858585610fea565b95945050505050565b610ac781336110e3565b50565b6000610ad68383610830565b610b565760008381526007602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610b0e3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016103d7565b5060006103d7565b6000610b6a8383610830565b15610b565760008381526007602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016103d7565b6001600160a01b038216610bf557604051633250574960e11b8152600060048201526024016104e3565b6000610c0383836000610a5c565b90506001600160a01b038116156105a5576040516339e3563760e11b8152600060048201526024016104e3565b6000828152600660205260409020610c488282611814565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6001600160a01b038216610cb257604051630b61174360e31b81526001600160a01b03831660048201526024016104e3565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610e4357604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610d619088908890879087906004016118d3565b6020604051808303816000875af1925050508015610d9c575060408051601f3d908101601f19168201909252610d9991810190611910565b60015b610e05573d808015610dca576040519150601f19603f3d011682016040523d82523d6000602084013e610dcf565b606091505b508051600003610dfd57604051633250574960e11b81526001600160a01b03851660048201526024016104e3565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610e4157604051633250574960e11b81526001600160a01b03851660048201526024016104e3565b505b5050505050565b6060610e5582610a16565b506000610e6d60408051602081019091526000815290565b90506000815111610e8d5760405180602001604052806000815250610eb8565b80610e978461111c565b604051602001610ea892919061179e565b6040516020818303038152906040525b9392505050565b60006001600160e01b03198216632483248360e11b14806103d757506103d7826111af565b8080610ef857506001600160a01b03821615155b15610fba576000610f0884610a16565b90506001600160a01b03831615801590610f345750826001600160a01b0316816001600160a01b031614155b8015610f475750610f4581846109c3565b155b15610f705760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016104e3565b8115610fb85783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152600260205260408120546001600160a01b0390811690831615611017576110178184866111ff565b6001600160a01b0381161561105557611034600085600080610ee4565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615611084576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6110ed8282610830565b6104a35760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016104e3565b6060600061112983611263565b600101905060008167ffffffffffffffff811115611149576111496114fc565b6040519080825280601f01601f191660200182016040528015611173576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461117d57509392505050565b60006001600160e01b031982166380ac58cd60e01b14806111e057506001600160e01b03198216635b5e139f60e01b145b806103d757506301ffc9a760e01b6001600160e01b03198316146103d7565b61120a83838361133b565b6105a5576001600160a01b03831661123857604051637e27328960e01b8152600481018290526024016104e3565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016104e3565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112a25772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106112ce576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106112ec57662386f26fc10000830492506010015b6305f5e1008310611304576305f5e100830492506008015b612710831061131857612710830492506004015b6064831061132a576064830492506002015b600a83106103d75760010192915050565b60006001600160a01b038316158015906109965750826001600160a01b0316846001600160a01b03161480611375575061137584846109c3565b806109965750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b031981168114610ac757600080fd5b6000602082840312156113c657600080fd5b8135610eb88161139e565b60005b838110156113ec5781810151838201526020016113d4565b50506000910152565b6000815180845261140d8160208601602086016113d1565b601f01601f19169290920160200192915050565b602081526000610eb860208301846113f5565b60006020828403121561144657600080fd5b5035919050565b80356001600160a01b038116811461146457600080fd5b919050565b6000806040838503121561147c57600080fd5b6114858361144d565b946020939093013593505050565b6000806000606084860312156114a857600080fd5b6114b18461144d565b92506114bf6020850161144d565b929592945050506040919091013590565b600080604083850312156114e357600080fd5b823591506114f36020840161144d565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561152d5761152d6114fc565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff8211171561155c5761155c6114fc565b60405283815290508082840185101561157457600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261159d57600080fd5b610eb883833560208501611512565b600080604083850312156115bf57600080fd5b6115c88361144d565b9150602083013567ffffffffffffffff8111156115e457600080fd5b6115f08582860161158c565b9150509250929050565b6000806040838503121561160d57600080fd5b82359150602083013567ffffffffffffffff8111156115e457600080fd5b60006020828403121561163d57600080fd5b610eb88261144d565b6000806040838503121561165957600080fd5b6116628361144d565b91506020830135801515811461167757600080fd5b809150509250929050565b6000806000806080858703121561169857600080fd5b6116a18561144d565b93506116af6020860161144d565b925060408501359150606085013567ffffffffffffffff8111156116d257600080fd5b8501601f810187136116e357600080fd5b6116f287823560208401611512565b91505092959194509250565b6000806040838503121561171157600080fd5b61171a8361144d565b91506114f36020840161144d565b600181811c9082168061173c57607f821691505b6020821081036107e257634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156103d7576103d761175c565b6000600182016117975761179761175c565b5060010190565b600083516117b08184602088016113d1565b8351908301906117c48183602088016113d1565b01949350505050565b601f8211156105a557806000526020600020601f840160051c810160208510156117f45750805b601f840160051c820191505b81811015610e435760008155600101611800565b815167ffffffffffffffff81111561182e5761182e6114fc565b6118428161183c8454611728565b846117cd565b6020601f821160018114611876576000831561185e5750848201515b600019600385901b1c1916600184901b178455610e43565b600084815260208120601f198516915b828110156118a65787850151825560209485019460019092019101611886565b50848210156118c45786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611906908301846113f5565b9695505050505050565b60006020828403121561192257600080fd5b8151610eb88161139e56fea264697066735822122040feed207f3358b155ae69680f0579bd826e939a50ff86c920c58aa807056ce364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1CD4 CODESIZE SUB DUP1 PUSH2 0x1CD4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x1219585B1D1A1251139195 PUSH1 0xAA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x908A8298A89 PUSH1 0xD3 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x2A4 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x8E DUP3 DUP3 PUSH2 0x2A4 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4968A64F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC3 PUSH1 0x0 DUP3 PUSH2 0x125 JUMP JUMPDEST POP PUSH2 0xEE PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0x125 JUMP JUMPDEST POP PUSH2 0x119 PUSH32 0xA5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB CALLER PUSH2 0x125 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x8 SSTORE PUSH2 0x362 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1CB JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x183 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x1CF JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x22F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x29F JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x288 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2BD JUMPI PUSH2 0x2BD PUSH2 0x205 JUMP JUMPDEST PUSH2 0x2D1 DUP2 PUSH2 0x2CB DUP5 SLOAD PUSH2 0x21B JUMP JUMPDEST DUP5 PUSH2 0x255 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x305 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x2ED JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x29C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x335 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x315 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x353 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1963 DUP1 PUSH2 0x371 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xE328400C EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x471D06F4 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x53C8388E EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x56189236 EQ PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x226 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x218 PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x218 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x1434 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH2 0x20E PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x218 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AC JUMP JUMPDEST PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x218 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST PUSH2 0x218 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x162B JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH2 0x218 PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x162B JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x218 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x1646 JUMP JUMPDEST PUSH2 0x86A JUMP JUMPDEST PUSH2 0x20E PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x1682 JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x88D JUMP JUMPDEST PUSH2 0x218 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x99E JUMP JUMPDEST PUSH2 0x218 PUSH32 0xA5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB DUP2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D7 DUP3 PUSH2 0x9F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3EC SWAP1 PUSH2 0x1728 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x418 SWAP1 PUSH2 0x1728 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x465 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x465 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x448 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47A DUP3 PUSH2 0xA16 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3D7 JUMP JUMPDEST PUSH2 0x4A3 DUP3 DUP3 CALLER PUSH2 0xA4F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 SLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1772 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4F9 DUP4 DUP4 CALLER PUSH2 0xA5C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x568 DUP2 PUSH2 0xABD JUMP JUMPDEST PUSH2 0x547 DUP4 DUP4 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A5 DUP3 DUP3 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5A5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x875 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x5F1 DUP2 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0x62A DUP4 PUSH2 0x1785 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x639 DUP6 DUP3 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x643 DUP2 DUP6 PUSH2 0xC30 JUMP JUMPDEST DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC003D77B1510AC4AE95DB12DD6B9F37869DDC183C76C2F6FDA6DC5124F5BD218 DUP7 PUSH1 0x40 MLOAD PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x698 DUP2 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6CD JUMPI PUSH1 0x40 MLOAD PUSH4 0x7ED98ED PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D7 DUP4 DUP4 PUSH2 0xC30 JUMP JUMPDEST DUP3 PUSH32 0x78D07928BD1D46A549DBF60E803372A8DC0BD1DCCEB19BEEEF02777394FD6B74 DUP4 PUSH1 0x40 MLOAD PUSH2 0x707 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D7 DUP3 PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x74B DUP2 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0x784 DUP4 PUSH2 0x1785 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x793 DUP5 DUP3 PUSH2 0xBCB JUMP JUMPDEST DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC003D77B1510AC4AE95DB12DD6B9F37869DDC183C76C2F6FDA6DC5124F5BD218 PUSH1 0x40 MLOAD PUSH2 0x7D7 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x3EC SWAP1 PUSH2 0x1728 JUMP JUMPDEST PUSH2 0x4A3 CALLER DUP4 DUP4 PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x880 DUP5 DUP5 DUP5 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x547 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0xD1F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x898 DUP3 PUSH2 0xA16 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x8B2 SWAP1 PUSH2 0x1728 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8DE SWAP1 PUSH2 0x1728 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x92B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x900 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x949 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x95B JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x98D JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x975 SWAP3 SWAP2 SWAP1 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x996 DUP5 PUSH2 0xE4A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x9B9 DUP2 PUSH2 0xABD JUMP JUMPDEST PUSH2 0x547 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3D7 JUMPI POP PUSH2 0x3D7 DUP3 PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x5A5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xA8B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD181153 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB4 DUP6 DUP6 DUP6 PUSH2 0xFEA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAC7 DUP2 CALLER PUSH2 0x10E3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD6 DUP4 DUP4 PUSH2 0x830 JUMP JUMPDEST PUSH2 0xB56 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xB0E CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3D7 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6A DUP4 DUP4 PUSH2 0x830 JUMP JUMPDEST ISZERO PUSH2 0xB56 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC03 DUP4 DUP4 PUSH1 0x0 PUSH2 0xA5C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xC48 DUP3 DUP3 PUSH2 0x1814 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xE43 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xD61 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD9C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD99 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1910 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE05 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xDCA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xE41 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE55 DUP3 PUSH2 0xA16 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xE6D PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xE8D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xEB8 JUMP JUMPDEST DUP1 PUSH2 0xE97 DUP5 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEA8 SWAP3 SWAP2 SWAP1 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3D7 JUMPI POP PUSH2 0x3D7 DUP3 PUSH2 0x11AF JUMP JUMPDEST DUP1 DUP1 PUSH2 0xEF8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xFBA JUMPI PUSH1 0x0 PUSH2 0xF08 DUP5 PUSH2 0xA16 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF34 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xF47 JUMPI POP PUSH2 0xF45 DUP2 DUP5 PUSH2 0x9C3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xF70 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xFB8 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x1017 JUMPI PUSH2 0x1017 DUP2 DUP5 DUP7 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1055 JUMPI PUSH2 0x1034 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x1084 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x10ED DUP3 DUP3 PUSH2 0x830 JUMP JUMPDEST PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1129 DUP4 PUSH2 0x1263 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1149 JUMPI PUSH2 0x1149 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1173 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x117D JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x11E0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3D7 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3D7 JUMP JUMPDEST PUSH2 0x120A DUP4 DUP4 DUP4 PUSH2 0x133B JUMP JUMPDEST PUSH2 0x5A5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1238 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x12A2 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x12CE JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x12EC JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1304 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1318 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x132A JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3D7 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x996 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1375 JUMPI POP PUSH2 0x1375 DUP5 DUP5 PUSH2 0x9C3 JUMP JUMPDEST DUP1 PUSH2 0x996 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xAC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEB8 DUP2 PUSH2 0x139E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13EC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13D4 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x140D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xEB8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x147C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1485 DUP4 PUSH2 0x144D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B1 DUP5 PUSH2 0x144D JUMP JUMPDEST SWAP3 POP PUSH2 0x14BF PUSH1 0x20 DUP6 ADD PUSH2 0x144D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x14F3 PUSH1 0x20 DUP5 ADD PUSH2 0x144D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x152D JUMPI PUSH2 0x152D PUSH2 0x14FC JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x155C JUMPI PUSH2 0x155C PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x1574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x159D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB8 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15C8 DUP4 PUSH2 0x144D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F0 DUP6 DUP3 DUP7 ADD PUSH2 0x158C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x160D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x163D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB8 DUP3 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1662 DUP4 PUSH2 0x144D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A1 DUP6 PUSH2 0x144D JUMP JUMPDEST SWAP4 POP PUSH2 0x16AF PUSH1 0x20 DUP7 ADD PUSH2 0x144D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x16E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16F2 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1512 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171A DUP4 PUSH2 0x144D JUMP JUMPDEST SWAP2 POP PUSH2 0x14F3 PUSH1 0x20 DUP5 ADD PUSH2 0x144D JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x173C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3D7 JUMPI PUSH2 0x3D7 PUSH2 0x175C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1797 JUMPI PUSH2 0x1797 PUSH2 0x175C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x17B0 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x13D1 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x17C4 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x13D1 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5A5 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x17F4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1800 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x182E JUMPI PUSH2 0x182E PUSH2 0x14FC JUMP JUMPDEST PUSH2 0x1842 DUP2 PUSH2 0x183C DUP5 SLOAD PUSH2 0x1728 JUMP JUMPDEST DUP5 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1876 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x185E JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x18A6 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1886 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x18C4 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1906 SWAP1 DUP4 ADD DUP5 PUSH2 0x13F5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xEB8 DUP2 PUSH2 0x139E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH INVALID 0xED KECCAK256 PUSH32 0x3358B155AE69680F0579BD826E939A50FF86C920C58AA807056CE364736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"384:4221:20:-:0;;;1361:331;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1380:113:6;;;;;;;;;;;;;-1:-1:-1;;;1380:113:6;;;;;;;;;;;;;;;;-1:-1:-1;;;1380:113:6;;;1454:5;1446;:13;;;;;;:::i;:::-;-1:-1:-1;1469:7:6;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;;;;;;;1435:19:20;::::1;1431:47;;1463:15;;-1:-1:-1::0;;;1463:15:20::1;;;;;;;;;;;1431:47;1491:37;2241:4:0;1522:5:20::0;1491:10:::1;:37::i;:::-;-1:-1:-1::0;1539:30:20::1;510:24;1563:5:::0;1539:10:::1;:30::i;:::-;-1:-1:-1::0;1580:37:20::1;581:26;1606:10;1580;:37::i;:::-;-1:-1:-1::0;;1683:1:20::1;1665:15;:19:::0;384:4221;;6155:316:0;6232:4;2930:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2930:29:0;;;;;;;;;;;;6248:217;;6291:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6291:29:0;;;;;;;;;:36;;-1:-1:-1;;6291:36:0;6323:4;6291:36;;;6373:12;735:10:12;;656:96;6373:12:0;-1:-1:-1;;;;;6346:40:0;6364:7;-1:-1:-1;;;;;6346:40:0;6358:4;6346:40;;;;;;;;;;-1:-1:-1;6407:4:0;6400:11;;6248:217;-1:-1:-1;6449:5:0;6248:217;6155:316;;;;:::o;14:290:21:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:21;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:21:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:21;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1299::-;1766:10;;-1:-1:-1;;;;;1788:30:21;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;1996:4;2027:2;2016:14;;2044:1;2039:649;;;;2732:1;2749:6;2746:89;;;-1:-1:-1;2801:19:21;;;2795:26;2746:89;-1:-1:-1;;1603:1:21;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2848:81;;2009:930;;2039:649;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2075:20:21;;;2193:222;2207:7;2204:1;2201:14;2193:222;;;2289:19;;;2283:26;2268:42;;2396:4;2381:20;;;;2349:1;2337:14;;;;2223:12;2193:222;;;2197:3;2443:6;2434:7;2431:19;2428:201;;;2504:19;;;2498:26;-1:-1:-1;;2587:1:21;2583:14;;;2599:3;2579:24;2575:37;2571:42;2556:58;2541:74;;2428:201;-1:-1:-1;;;;2675:1:21;2659:14;;;2655:22;2642:36;;-1:-1:-1;1646:1299:21:o;:::-;384:4221:20;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_30":{"entryPoint":null,"id":30,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_6937":{"entryPoint":null,"id":6937,"parameterSlots":0,"returnSlots":0},"@MULTISIG_ROLE_6942":{"entryPoint":null,"id":6942,"parameterSlots":0,"returnSlots":0},"@_approve_1372":{"entryPoint":2639,"id":1372,"parameterSlots":3,"returnSlots":0},"@_approve_1438":{"entryPoint":3812,"id":1438,"parameterSlots":4,"returnSlots":0},"@_baseURI_753":{"entryPoint":null,"id":753,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_1012":{"entryPoint":4607,"id":1012,"parameterSlots":3,"returnSlots":0},"@_checkRole_115":{"entryPoint":4323,"id":115,"parameterSlots":2,"returnSlots":0},"@_checkRole_94":{"entryPoint":2749,"id":94,"parameterSlots":1,"returnSlots":0},"@_getApproved_939":{"entryPoint":null,"id":939,"parameterSlots":1,"returnSlots":1},"@_grantRole_257":{"entryPoint":2762,"id":257,"parameterSlots":2,"returnSlots":1},"@_isAuthorized_975":{"entryPoint":4923,"id":975,"parameterSlots":3,"returnSlots":1},"@_mint_1168":{"entryPoint":3019,"id":1168,"parameterSlots":2,"returnSlots":0},"@_msgSender_1885":{"entryPoint":null,"id":1885,"parameterSlots":0,"returnSlots":1},"@_ownerOf_926":{"entryPoint":null,"id":926,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1504":{"entryPoint":2582,"id":1504,"parameterSlots":1,"returnSlots":1},"@_revokeRole_295":{"entryPoint":2910,"id":295,"parameterSlots":2,"returnSlots":1},"@_setApprovalForAll_1475":{"entryPoint":3200,"id":1475,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_1767":{"entryPoint":3120,"id":1767,"parameterSlots":2,"returnSlots":0},"@_update_1118":{"entryPoint":4074,"id":1118,"parameterSlots":3,"returnSlots":1},"@_update_7056":{"entryPoint":2652,"id":7056,"parameterSlots":3,"returnSlots":1},"@approve_769":{"entryPoint":1176,"id":769,"parameterSlots":2,"returnSlots":0},"@balanceOf_677":{"entryPoint":2024,"id":677,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_1872":{"entryPoint":3359,"id":1872,"parameterSlots":5,"returnSlots":0},"@getApproved_786":{"entryPoint":1135,"id":786,"parameterSlots":1,"returnSlots":1},"@getCurrentTokenId_7207":{"entryPoint":null,"id":7207,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_129":{"entryPoint":null,"id":129,"parameterSlots":1,"returnSlots":1},"@grantRole_148":{"entryPoint":1357,"id":148,"parameterSlots":2,"returnSlots":0},"@hasRole_81":{"entryPoint":2096,"id":81,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_819":{"entryPoint":2499,"id":819,"parameterSlots":2,"returnSlots":1},"@log10_4846":{"entryPoint":4707,"id":4846,"parameterSlots":1,"returnSlots":1},"@mintWithMetadata_7164":{"entryPoint":1477,"id":7164,"parameterSlots":2,"returnSlots":1},"@mint_7115":{"entryPoint":1823,"id":7115,"parameterSlots":1,"returnSlots":1},"@name_699":{"entryPoint":989,"id":699,"parameterSlots":0,"returnSlots":1},"@ownerOf_690":{"entryPoint":1812,"id":690,"parameterSlots":1,"returnSlots":1},"@renounceRole_190":{"entryPoint":1394,"id":190,"parameterSlots":2,"returnSlots":0},"@revokeRole_167":{"entryPoint":2462,"id":167,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_883":{"entryPoint":1450,"id":883,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_913":{"entryPoint":2165,"id":913,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_802":{"entryPoint":2154,"id":802,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1691":{"entryPoint":3775,"id":1691,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3380":{"entryPoint":null,"id":3380,"parameterSlots":1,"returnSlots":1},"@supportsInterface_63":{"entryPoint":2545,"id":63,"parameterSlots":1,"returnSlots":1},"@supportsInterface_649":{"entryPoint":4527,"id":649,"parameterSlots":1,"returnSlots":1},"@supportsInterface_7073":{"entryPoint":972,"id":7073,"parameterSlots":1,"returnSlots":1},"@symbol_708":{"entryPoint":2139,"id":708,"parameterSlots":0,"returnSlots":1},"@toString_2069":{"entryPoint":4380,"id":2069,"parameterSlots":1,"returnSlots":1},"@tokenURI_1748":{"entryPoint":2189,"id":1748,"parameterSlots":1,"returnSlots":1},"@tokenURI_744":{"entryPoint":3658,"id":744,"parameterSlots":1,"returnSlots":1},"@totalSupply_7218":{"entryPoint":1191,"id":7218,"parameterSlots":0,"returnSlots":1},"@transferFrom_865":{"entryPoint":1213,"id":865,"parameterSlots":3,"returnSlots":0},"@updateMetadata_7198":{"entryPoint":1677,"id":7198,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":5197,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":5394,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":5516,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5675,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5886,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5267,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5762,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5702,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":5548,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5225,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":5328,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5044,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":6416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5172,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":5626,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_string":{"entryPoint":5109,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6046,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6355,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5153,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6002,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":6093,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":6164,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5073,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5928,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":6021,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5980,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5372,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":5022,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:12508:21","nodeType":"YulBlock","src":"0:12508:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"58:87:21","nodeType":"YulBlock","src":"58:87:21","statements":[{"body":{"nativeSrc":"123:16:21","nodeType":"YulBlock","src":"123:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"132:1:21","nodeType":"YulLiteral","src":"132:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"135:1:21","nodeType":"YulLiteral","src":"135:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"125:6:21","nodeType":"YulIdentifier","src":"125:6:21"},"nativeSrc":"125:12:21","nodeType":"YulFunctionCall","src":"125:12:21"},"nativeSrc":"125:12:21","nodeType":"YulExpressionStatement","src":"125:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"81:5:21","nodeType":"YulIdentifier","src":"81:5:21"},{"arguments":[{"name":"value","nativeSrc":"92:5:21","nodeType":"YulIdentifier","src":"92:5:21"},{"arguments":[{"kind":"number","nativeSrc":"103:3:21","nodeType":"YulLiteral","src":"103:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"108:10:21","nodeType":"YulLiteral","src":"108:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"99:3:21","nodeType":"YulIdentifier","src":"99:3:21"},"nativeSrc":"99:20:21","nodeType":"YulFunctionCall","src":"99:20:21"}],"functionName":{"name":"and","nativeSrc":"88:3:21","nodeType":"YulIdentifier","src":"88:3:21"},"nativeSrc":"88:32:21","nodeType":"YulFunctionCall","src":"88:32:21"}],"functionName":{"name":"eq","nativeSrc":"78:2:21","nodeType":"YulIdentifier","src":"78:2:21"},"nativeSrc":"78:43:21","nodeType":"YulFunctionCall","src":"78:43:21"}],"functionName":{"name":"iszero","nativeSrc":"71:6:21","nodeType":"YulIdentifier","src":"71:6:21"},"nativeSrc":"71:51:21","nodeType":"YulFunctionCall","src":"71:51:21"},"nativeSrc":"68:71:21","nodeType":"YulIf","src":"68:71:21"}]},"name":"validator_revert_bytes4","nativeSrc":"14:131:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"47:5:21","nodeType":"YulTypedName","src":"47:5:21","type":""}],"src":"14:131:21"},{"body":{"nativeSrc":"219:176:21","nodeType":"YulBlock","src":"219:176:21","statements":[{"body":{"nativeSrc":"265:16:21","nodeType":"YulBlock","src":"265:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"274:1:21","nodeType":"YulLiteral","src":"274:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"277:1:21","nodeType":"YulLiteral","src":"277:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"267:6:21","nodeType":"YulIdentifier","src":"267:6:21"},"nativeSrc":"267:12:21","nodeType":"YulFunctionCall","src":"267:12:21"},"nativeSrc":"267:12:21","nodeType":"YulExpressionStatement","src":"267:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"240:7:21","nodeType":"YulIdentifier","src":"240:7:21"},{"name":"headStart","nativeSrc":"249:9:21","nodeType":"YulIdentifier","src":"249:9:21"}],"functionName":{"name":"sub","nativeSrc":"236:3:21","nodeType":"YulIdentifier","src":"236:3:21"},"nativeSrc":"236:23:21","nodeType":"YulFunctionCall","src":"236:23:21"},{"kind":"number","nativeSrc":"261:2:21","nodeType":"YulLiteral","src":"261:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"232:3:21","nodeType":"YulIdentifier","src":"232:3:21"},"nativeSrc":"232:32:21","nodeType":"YulFunctionCall","src":"232:32:21"},"nativeSrc":"229:52:21","nodeType":"YulIf","src":"229:52:21"},{"nativeSrc":"290:36:21","nodeType":"YulVariableDeclaration","src":"290:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"316:9:21","nodeType":"YulIdentifier","src":"316:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"303:12:21","nodeType":"YulIdentifier","src":"303:12:21"},"nativeSrc":"303:23:21","nodeType":"YulFunctionCall","src":"303:23:21"},"variables":[{"name":"value","nativeSrc":"294:5:21","nodeType":"YulTypedName","src":"294:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"359:5:21","nodeType":"YulIdentifier","src":"359:5:21"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"335:23:21","nodeType":"YulIdentifier","src":"335:23:21"},"nativeSrc":"335:30:21","nodeType":"YulFunctionCall","src":"335:30:21"},"nativeSrc":"335:30:21","nodeType":"YulExpressionStatement","src":"335:30:21"},{"nativeSrc":"374:15:21","nodeType":"YulAssignment","src":"374:15:21","value":{"name":"value","nativeSrc":"384:5:21","nodeType":"YulIdentifier","src":"384:5:21"},"variableNames":[{"name":"value0","nativeSrc":"374:6:21","nodeType":"YulIdentifier","src":"374:6:21"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"150:245:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"185:9:21","nodeType":"YulTypedName","src":"185:9:21","type":""},{"name":"dataEnd","nativeSrc":"196:7:21","nodeType":"YulTypedName","src":"196:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"208:6:21","nodeType":"YulTypedName","src":"208:6:21","type":""}],"src":"150:245:21"},{"body":{"nativeSrc":"495:92:21","nodeType":"YulBlock","src":"495:92:21","statements":[{"nativeSrc":"505:26:21","nodeType":"YulAssignment","src":"505:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"517:9:21","nodeType":"YulIdentifier","src":"517:9:21"},{"kind":"number","nativeSrc":"528:2:21","nodeType":"YulLiteral","src":"528:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"513:3:21","nodeType":"YulIdentifier","src":"513:3:21"},"nativeSrc":"513:18:21","nodeType":"YulFunctionCall","src":"513:18:21"},"variableNames":[{"name":"tail","nativeSrc":"505:4:21","nodeType":"YulIdentifier","src":"505:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"547:9:21","nodeType":"YulIdentifier","src":"547:9:21"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"572:6:21","nodeType":"YulIdentifier","src":"572:6:21"}],"functionName":{"name":"iszero","nativeSrc":"565:6:21","nodeType":"YulIdentifier","src":"565:6:21"},"nativeSrc":"565:14:21","nodeType":"YulFunctionCall","src":"565:14:21"}],"functionName":{"name":"iszero","nativeSrc":"558:6:21","nodeType":"YulIdentifier","src":"558:6:21"},"nativeSrc":"558:22:21","nodeType":"YulFunctionCall","src":"558:22:21"}],"functionName":{"name":"mstore","nativeSrc":"540:6:21","nodeType":"YulIdentifier","src":"540:6:21"},"nativeSrc":"540:41:21","nodeType":"YulFunctionCall","src":"540:41:21"},"nativeSrc":"540:41:21","nodeType":"YulExpressionStatement","src":"540:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"400:187:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"464:9:21","nodeType":"YulTypedName","src":"464:9:21","type":""},{"name":"value0","nativeSrc":"475:6:21","nodeType":"YulTypedName","src":"475:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"486:4:21","nodeType":"YulTypedName","src":"486:4:21","type":""}],"src":"400:187:21"},{"body":{"nativeSrc":"658:184:21","nodeType":"YulBlock","src":"658:184:21","statements":[{"nativeSrc":"668:10:21","nodeType":"YulVariableDeclaration","src":"668:10:21","value":{"kind":"number","nativeSrc":"677:1:21","nodeType":"YulLiteral","src":"677:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"672:1:21","nodeType":"YulTypedName","src":"672:1:21","type":""}]},{"body":{"nativeSrc":"737:63:21","nodeType":"YulBlock","src":"737:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"762:3:21","nodeType":"YulIdentifier","src":"762:3:21"},{"name":"i","nativeSrc":"767:1:21","nodeType":"YulIdentifier","src":"767:1:21"}],"functionName":{"name":"add","nativeSrc":"758:3:21","nodeType":"YulIdentifier","src":"758:3:21"},"nativeSrc":"758:11:21","nodeType":"YulFunctionCall","src":"758:11:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"781:3:21","nodeType":"YulIdentifier","src":"781:3:21"},{"name":"i","nativeSrc":"786:1:21","nodeType":"YulIdentifier","src":"786:1:21"}],"functionName":{"name":"add","nativeSrc":"777:3:21","nodeType":"YulIdentifier","src":"777:3:21"},"nativeSrc":"777:11:21","nodeType":"YulFunctionCall","src":"777:11:21"}],"functionName":{"name":"mload","nativeSrc":"771:5:21","nodeType":"YulIdentifier","src":"771:5:21"},"nativeSrc":"771:18:21","nodeType":"YulFunctionCall","src":"771:18:21"}],"functionName":{"name":"mstore","nativeSrc":"751:6:21","nodeType":"YulIdentifier","src":"751:6:21"},"nativeSrc":"751:39:21","nodeType":"YulFunctionCall","src":"751:39:21"},"nativeSrc":"751:39:21","nodeType":"YulExpressionStatement","src":"751:39:21"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"698:1:21","nodeType":"YulIdentifier","src":"698:1:21"},{"name":"length","nativeSrc":"701:6:21","nodeType":"YulIdentifier","src":"701:6:21"}],"functionName":{"name":"lt","nativeSrc":"695:2:21","nodeType":"YulIdentifier","src":"695:2:21"},"nativeSrc":"695:13:21","nodeType":"YulFunctionCall","src":"695:13:21"},"nativeSrc":"687:113:21","nodeType":"YulForLoop","post":{"nativeSrc":"709:19:21","nodeType":"YulBlock","src":"709:19:21","statements":[{"nativeSrc":"711:15:21","nodeType":"YulAssignment","src":"711:15:21","value":{"arguments":[{"name":"i","nativeSrc":"720:1:21","nodeType":"YulIdentifier","src":"720:1:21"},{"kind":"number","nativeSrc":"723:2:21","nodeType":"YulLiteral","src":"723:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"716:3:21","nodeType":"YulIdentifier","src":"716:3:21"},"nativeSrc":"716:10:21","nodeType":"YulFunctionCall","src":"716:10:21"},"variableNames":[{"name":"i","nativeSrc":"711:1:21","nodeType":"YulIdentifier","src":"711:1:21"}]}]},"pre":{"nativeSrc":"691:3:21","nodeType":"YulBlock","src":"691:3:21","statements":[]},"src":"687:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"820:3:21","nodeType":"YulIdentifier","src":"820:3:21"},{"name":"length","nativeSrc":"825:6:21","nodeType":"YulIdentifier","src":"825:6:21"}],"functionName":{"name":"add","nativeSrc":"816:3:21","nodeType":"YulIdentifier","src":"816:3:21"},"nativeSrc":"816:16:21","nodeType":"YulFunctionCall","src":"816:16:21"},{"kind":"number","nativeSrc":"834:1:21","nodeType":"YulLiteral","src":"834:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"809:6:21","nodeType":"YulIdentifier","src":"809:6:21"},"nativeSrc":"809:27:21","nodeType":"YulFunctionCall","src":"809:27:21"},"nativeSrc":"809:27:21","nodeType":"YulExpressionStatement","src":"809:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"592:250:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"636:3:21","nodeType":"YulTypedName","src":"636:3:21","type":""},{"name":"dst","nativeSrc":"641:3:21","nodeType":"YulTypedName","src":"641:3:21","type":""},{"name":"length","nativeSrc":"646:6:21","nodeType":"YulTypedName","src":"646:6:21","type":""}],"src":"592:250:21"},{"body":{"nativeSrc":"897:221:21","nodeType":"YulBlock","src":"897:221:21","statements":[{"nativeSrc":"907:26:21","nodeType":"YulVariableDeclaration","src":"907:26:21","value":{"arguments":[{"name":"value","nativeSrc":"927:5:21","nodeType":"YulIdentifier","src":"927:5:21"}],"functionName":{"name":"mload","nativeSrc":"921:5:21","nodeType":"YulIdentifier","src":"921:5:21"},"nativeSrc":"921:12:21","nodeType":"YulFunctionCall","src":"921:12:21"},"variables":[{"name":"length","nativeSrc":"911:6:21","nodeType":"YulTypedName","src":"911:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"949:3:21","nodeType":"YulIdentifier","src":"949:3:21"},{"name":"length","nativeSrc":"954:6:21","nodeType":"YulIdentifier","src":"954:6:21"}],"functionName":{"name":"mstore","nativeSrc":"942:6:21","nodeType":"YulIdentifier","src":"942:6:21"},"nativeSrc":"942:19:21","nodeType":"YulFunctionCall","src":"942:19:21"},"nativeSrc":"942:19:21","nodeType":"YulExpressionStatement","src":"942:19:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1009:5:21","nodeType":"YulIdentifier","src":"1009:5:21"},{"kind":"number","nativeSrc":"1016:4:21","nodeType":"YulLiteral","src":"1016:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1005:3:21","nodeType":"YulIdentifier","src":"1005:3:21"},"nativeSrc":"1005:16:21","nodeType":"YulFunctionCall","src":"1005:16:21"},{"arguments":[{"name":"pos","nativeSrc":"1027:3:21","nodeType":"YulIdentifier","src":"1027:3:21"},{"kind":"number","nativeSrc":"1032:4:21","nodeType":"YulLiteral","src":"1032:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1023:3:21","nodeType":"YulIdentifier","src":"1023:3:21"},"nativeSrc":"1023:14:21","nodeType":"YulFunctionCall","src":"1023:14:21"},{"name":"length","nativeSrc":"1039:6:21","nodeType":"YulIdentifier","src":"1039:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"970:34:21","nodeType":"YulIdentifier","src":"970:34:21"},"nativeSrc":"970:76:21","nodeType":"YulFunctionCall","src":"970:76:21"},"nativeSrc":"970:76:21","nodeType":"YulExpressionStatement","src":"970:76:21"},{"nativeSrc":"1055:57:21","nodeType":"YulAssignment","src":"1055:57:21","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"1070:3:21","nodeType":"YulIdentifier","src":"1070:3:21"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1083:6:21","nodeType":"YulIdentifier","src":"1083:6:21"},{"kind":"number","nativeSrc":"1091:2:21","nodeType":"YulLiteral","src":"1091:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1079:3:21","nodeType":"YulIdentifier","src":"1079:3:21"},"nativeSrc":"1079:15:21","nodeType":"YulFunctionCall","src":"1079:15:21"},{"arguments":[{"kind":"number","nativeSrc":"1100:2:21","nodeType":"YulLiteral","src":"1100:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1096:3:21","nodeType":"YulIdentifier","src":"1096:3:21"},"nativeSrc":"1096:7:21","nodeType":"YulFunctionCall","src":"1096:7:21"}],"functionName":{"name":"and","nativeSrc":"1075:3:21","nodeType":"YulIdentifier","src":"1075:3:21"},"nativeSrc":"1075:29:21","nodeType":"YulFunctionCall","src":"1075:29:21"}],"functionName":{"name":"add","nativeSrc":"1066:3:21","nodeType":"YulIdentifier","src":"1066:3:21"},"nativeSrc":"1066:39:21","nodeType":"YulFunctionCall","src":"1066:39:21"},{"kind":"number","nativeSrc":"1107:4:21","nodeType":"YulLiteral","src":"1107:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1062:3:21","nodeType":"YulIdentifier","src":"1062:3:21"},"nativeSrc":"1062:50:21","nodeType":"YulFunctionCall","src":"1062:50:21"},"variableNames":[{"name":"end","nativeSrc":"1055:3:21","nodeType":"YulIdentifier","src":"1055:3:21"}]}]},"name":"abi_encode_string","nativeSrc":"847:271:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"874:5:21","nodeType":"YulTypedName","src":"874:5:21","type":""},{"name":"pos","nativeSrc":"881:3:21","nodeType":"YulTypedName","src":"881:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"889:3:21","nodeType":"YulTypedName","src":"889:3:21","type":""}],"src":"847:271:21"},{"body":{"nativeSrc":"1244:99:21","nodeType":"YulBlock","src":"1244:99:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1261:9:21","nodeType":"YulIdentifier","src":"1261:9:21"},{"kind":"number","nativeSrc":"1272:2:21","nodeType":"YulLiteral","src":"1272:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1254:6:21","nodeType":"YulIdentifier","src":"1254:6:21"},"nativeSrc":"1254:21:21","nodeType":"YulFunctionCall","src":"1254:21:21"},"nativeSrc":"1254:21:21","nodeType":"YulExpressionStatement","src":"1254:21:21"},{"nativeSrc":"1284:53:21","nodeType":"YulAssignment","src":"1284:53:21","value":{"arguments":[{"name":"value0","nativeSrc":"1310:6:21","nodeType":"YulIdentifier","src":"1310:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"1322:9:21","nodeType":"YulIdentifier","src":"1322:9:21"},{"kind":"number","nativeSrc":"1333:2:21","nodeType":"YulLiteral","src":"1333:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1318:3:21","nodeType":"YulIdentifier","src":"1318:3:21"},"nativeSrc":"1318:18:21","nodeType":"YulFunctionCall","src":"1318:18:21"}],"functionName":{"name":"abi_encode_string","nativeSrc":"1292:17:21","nodeType":"YulIdentifier","src":"1292:17:21"},"nativeSrc":"1292:45:21","nodeType":"YulFunctionCall","src":"1292:45:21"},"variableNames":[{"name":"tail","nativeSrc":"1284:4:21","nodeType":"YulIdentifier","src":"1284:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1123:220:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1213:9:21","nodeType":"YulTypedName","src":"1213:9:21","type":""},{"name":"value0","nativeSrc":"1224:6:21","nodeType":"YulTypedName","src":"1224:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1235:4:21","nodeType":"YulTypedName","src":"1235:4:21","type":""}],"src":"1123:220:21"},{"body":{"nativeSrc":"1418:156:21","nodeType":"YulBlock","src":"1418:156:21","statements":[{"body":{"nativeSrc":"1464:16:21","nodeType":"YulBlock","src":"1464:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1473:1:21","nodeType":"YulLiteral","src":"1473:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1476:1:21","nodeType":"YulLiteral","src":"1476:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1466:6:21","nodeType":"YulIdentifier","src":"1466:6:21"},"nativeSrc":"1466:12:21","nodeType":"YulFunctionCall","src":"1466:12:21"},"nativeSrc":"1466:12:21","nodeType":"YulExpressionStatement","src":"1466:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1439:7:21","nodeType":"YulIdentifier","src":"1439:7:21"},{"name":"headStart","nativeSrc":"1448:9:21","nodeType":"YulIdentifier","src":"1448:9:21"}],"functionName":{"name":"sub","nativeSrc":"1435:3:21","nodeType":"YulIdentifier","src":"1435:3:21"},"nativeSrc":"1435:23:21","nodeType":"YulFunctionCall","src":"1435:23:21"},{"kind":"number","nativeSrc":"1460:2:21","nodeType":"YulLiteral","src":"1460:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1431:3:21","nodeType":"YulIdentifier","src":"1431:3:21"},"nativeSrc":"1431:32:21","nodeType":"YulFunctionCall","src":"1431:32:21"},"nativeSrc":"1428:52:21","nodeType":"YulIf","src":"1428:52:21"},{"nativeSrc":"1489:14:21","nodeType":"YulVariableDeclaration","src":"1489:14:21","value":{"kind":"number","nativeSrc":"1502:1:21","nodeType":"YulLiteral","src":"1502:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1493:5:21","nodeType":"YulTypedName","src":"1493:5:21","type":""}]},{"nativeSrc":"1512:32:21","nodeType":"YulAssignment","src":"1512:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1534:9:21","nodeType":"YulIdentifier","src":"1534:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"1521:12:21","nodeType":"YulIdentifier","src":"1521:12:21"},"nativeSrc":"1521:23:21","nodeType":"YulFunctionCall","src":"1521:23:21"},"variableNames":[{"name":"value","nativeSrc":"1512:5:21","nodeType":"YulIdentifier","src":"1512:5:21"}]},{"nativeSrc":"1553:15:21","nodeType":"YulAssignment","src":"1553:15:21","value":{"name":"value","nativeSrc":"1563:5:21","nodeType":"YulIdentifier","src":"1563:5:21"},"variableNames":[{"name":"value0","nativeSrc":"1553:6:21","nodeType":"YulIdentifier","src":"1553:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1348:226:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1384:9:21","nodeType":"YulTypedName","src":"1384:9:21","type":""},{"name":"dataEnd","nativeSrc":"1395:7:21","nodeType":"YulTypedName","src":"1395:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1407:6:21","nodeType":"YulTypedName","src":"1407:6:21","type":""}],"src":"1348:226:21"},{"body":{"nativeSrc":"1680:102:21","nodeType":"YulBlock","src":"1680:102:21","statements":[{"nativeSrc":"1690:26:21","nodeType":"YulAssignment","src":"1690:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1702:9:21","nodeType":"YulIdentifier","src":"1702:9:21"},{"kind":"number","nativeSrc":"1713:2:21","nodeType":"YulLiteral","src":"1713:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1698:3:21","nodeType":"YulIdentifier","src":"1698:3:21"},"nativeSrc":"1698:18:21","nodeType":"YulFunctionCall","src":"1698:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1690:4:21","nodeType":"YulIdentifier","src":"1690:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1732:9:21","nodeType":"YulIdentifier","src":"1732:9:21"},{"arguments":[{"name":"value0","nativeSrc":"1747:6:21","nodeType":"YulIdentifier","src":"1747:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1763:3:21","nodeType":"YulLiteral","src":"1763:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"1768:1:21","nodeType":"YulLiteral","src":"1768:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1759:3:21","nodeType":"YulIdentifier","src":"1759:3:21"},"nativeSrc":"1759:11:21","nodeType":"YulFunctionCall","src":"1759:11:21"},{"kind":"number","nativeSrc":"1772:1:21","nodeType":"YulLiteral","src":"1772:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1755:3:21","nodeType":"YulIdentifier","src":"1755:3:21"},"nativeSrc":"1755:19:21","nodeType":"YulFunctionCall","src":"1755:19:21"}],"functionName":{"name":"and","nativeSrc":"1743:3:21","nodeType":"YulIdentifier","src":"1743:3:21"},"nativeSrc":"1743:32:21","nodeType":"YulFunctionCall","src":"1743:32:21"}],"functionName":{"name":"mstore","nativeSrc":"1725:6:21","nodeType":"YulIdentifier","src":"1725:6:21"},"nativeSrc":"1725:51:21","nodeType":"YulFunctionCall","src":"1725:51:21"},"nativeSrc":"1725:51:21","nodeType":"YulExpressionStatement","src":"1725:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1579:203:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1649:9:21","nodeType":"YulTypedName","src":"1649:9:21","type":""},{"name":"value0","nativeSrc":"1660:6:21","nodeType":"YulTypedName","src":"1660:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1671:4:21","nodeType":"YulTypedName","src":"1671:4:21","type":""}],"src":"1579:203:21"},{"body":{"nativeSrc":"1836:124:21","nodeType":"YulBlock","src":"1836:124:21","statements":[{"nativeSrc":"1846:29:21","nodeType":"YulAssignment","src":"1846:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"1868:6:21","nodeType":"YulIdentifier","src":"1868:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"1855:12:21","nodeType":"YulIdentifier","src":"1855:12:21"},"nativeSrc":"1855:20:21","nodeType":"YulFunctionCall","src":"1855:20:21"},"variableNames":[{"name":"value","nativeSrc":"1846:5:21","nodeType":"YulIdentifier","src":"1846:5:21"}]},{"body":{"nativeSrc":"1938:16:21","nodeType":"YulBlock","src":"1938:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1947:1:21","nodeType":"YulLiteral","src":"1947:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1950:1:21","nodeType":"YulLiteral","src":"1950:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1940:6:21","nodeType":"YulIdentifier","src":"1940:6:21"},"nativeSrc":"1940:12:21","nodeType":"YulFunctionCall","src":"1940:12:21"},"nativeSrc":"1940:12:21","nodeType":"YulExpressionStatement","src":"1940:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1897:5:21","nodeType":"YulIdentifier","src":"1897:5:21"},{"arguments":[{"name":"value","nativeSrc":"1908:5:21","nodeType":"YulIdentifier","src":"1908:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1923:3:21","nodeType":"YulLiteral","src":"1923:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"1928:1:21","nodeType":"YulLiteral","src":"1928:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1919:3:21","nodeType":"YulIdentifier","src":"1919:3:21"},"nativeSrc":"1919:11:21","nodeType":"YulFunctionCall","src":"1919:11:21"},{"kind":"number","nativeSrc":"1932:1:21","nodeType":"YulLiteral","src":"1932:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1915:3:21","nodeType":"YulIdentifier","src":"1915:3:21"},"nativeSrc":"1915:19:21","nodeType":"YulFunctionCall","src":"1915:19:21"}],"functionName":{"name":"and","nativeSrc":"1904:3:21","nodeType":"YulIdentifier","src":"1904:3:21"},"nativeSrc":"1904:31:21","nodeType":"YulFunctionCall","src":"1904:31:21"}],"functionName":{"name":"eq","nativeSrc":"1894:2:21","nodeType":"YulIdentifier","src":"1894:2:21"},"nativeSrc":"1894:42:21","nodeType":"YulFunctionCall","src":"1894:42:21"}],"functionName":{"name":"iszero","nativeSrc":"1887:6:21","nodeType":"YulIdentifier","src":"1887:6:21"},"nativeSrc":"1887:50:21","nodeType":"YulFunctionCall","src":"1887:50:21"},"nativeSrc":"1884:70:21","nodeType":"YulIf","src":"1884:70:21"}]},"name":"abi_decode_address","nativeSrc":"1787:173:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1815:6:21","nodeType":"YulTypedName","src":"1815:6:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1826:5:21","nodeType":"YulTypedName","src":"1826:5:21","type":""}],"src":"1787:173:21"},{"body":{"nativeSrc":"2052:213:21","nodeType":"YulBlock","src":"2052:213:21","statements":[{"body":{"nativeSrc":"2098:16:21","nodeType":"YulBlock","src":"2098:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2107:1:21","nodeType":"YulLiteral","src":"2107:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2110:1:21","nodeType":"YulLiteral","src":"2110:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2100:6:21","nodeType":"YulIdentifier","src":"2100:6:21"},"nativeSrc":"2100:12:21","nodeType":"YulFunctionCall","src":"2100:12:21"},"nativeSrc":"2100:12:21","nodeType":"YulExpressionStatement","src":"2100:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2073:7:21","nodeType":"YulIdentifier","src":"2073:7:21"},{"name":"headStart","nativeSrc":"2082:9:21","nodeType":"YulIdentifier","src":"2082:9:21"}],"functionName":{"name":"sub","nativeSrc":"2069:3:21","nodeType":"YulIdentifier","src":"2069:3:21"},"nativeSrc":"2069:23:21","nodeType":"YulFunctionCall","src":"2069:23:21"},{"kind":"number","nativeSrc":"2094:2:21","nodeType":"YulLiteral","src":"2094:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2065:3:21","nodeType":"YulIdentifier","src":"2065:3:21"},"nativeSrc":"2065:32:21","nodeType":"YulFunctionCall","src":"2065:32:21"},"nativeSrc":"2062:52:21","nodeType":"YulIf","src":"2062:52:21"},{"nativeSrc":"2123:39:21","nodeType":"YulAssignment","src":"2123:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2152:9:21","nodeType":"YulIdentifier","src":"2152:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2133:18:21","nodeType":"YulIdentifier","src":"2133:18:21"},"nativeSrc":"2133:29:21","nodeType":"YulFunctionCall","src":"2133:29:21"},"variableNames":[{"name":"value0","nativeSrc":"2123:6:21","nodeType":"YulIdentifier","src":"2123:6:21"}]},{"nativeSrc":"2171:14:21","nodeType":"YulVariableDeclaration","src":"2171:14:21","value":{"kind":"number","nativeSrc":"2184:1:21","nodeType":"YulLiteral","src":"2184:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2175:5:21","nodeType":"YulTypedName","src":"2175:5:21","type":""}]},{"nativeSrc":"2194:41:21","nodeType":"YulAssignment","src":"2194:41:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2220:9:21","nodeType":"YulIdentifier","src":"2220:9:21"},{"kind":"number","nativeSrc":"2231:2:21","nodeType":"YulLiteral","src":"2231:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2216:3:21","nodeType":"YulIdentifier","src":"2216:3:21"},"nativeSrc":"2216:18:21","nodeType":"YulFunctionCall","src":"2216:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"2203:12:21","nodeType":"YulIdentifier","src":"2203:12:21"},"nativeSrc":"2203:32:21","nodeType":"YulFunctionCall","src":"2203:32:21"},"variableNames":[{"name":"value","nativeSrc":"2194:5:21","nodeType":"YulIdentifier","src":"2194:5:21"}]},{"nativeSrc":"2244:15:21","nodeType":"YulAssignment","src":"2244:15:21","value":{"name":"value","nativeSrc":"2254:5:21","nodeType":"YulIdentifier","src":"2254:5:21"},"variableNames":[{"name":"value1","nativeSrc":"2244:6:21","nodeType":"YulIdentifier","src":"2244:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1965:300:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2010:9:21","nodeType":"YulTypedName","src":"2010:9:21","type":""},{"name":"dataEnd","nativeSrc":"2021:7:21","nodeType":"YulTypedName","src":"2021:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2033:6:21","nodeType":"YulTypedName","src":"2033:6:21","type":""},{"name":"value1","nativeSrc":"2041:6:21","nodeType":"YulTypedName","src":"2041:6:21","type":""}],"src":"1965:300:21"},{"body":{"nativeSrc":"2371:76:21","nodeType":"YulBlock","src":"2371:76:21","statements":[{"nativeSrc":"2381:26:21","nodeType":"YulAssignment","src":"2381:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2393:9:21","nodeType":"YulIdentifier","src":"2393:9:21"},{"kind":"number","nativeSrc":"2404:2:21","nodeType":"YulLiteral","src":"2404:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2389:3:21","nodeType":"YulIdentifier","src":"2389:3:21"},"nativeSrc":"2389:18:21","nodeType":"YulFunctionCall","src":"2389:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2381:4:21","nodeType":"YulIdentifier","src":"2381:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2423:9:21","nodeType":"YulIdentifier","src":"2423:9:21"},{"name":"value0","nativeSrc":"2434:6:21","nodeType":"YulIdentifier","src":"2434:6:21"}],"functionName":{"name":"mstore","nativeSrc":"2416:6:21","nodeType":"YulIdentifier","src":"2416:6:21"},"nativeSrc":"2416:25:21","nodeType":"YulFunctionCall","src":"2416:25:21"},"nativeSrc":"2416:25:21","nodeType":"YulExpressionStatement","src":"2416:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"2270:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2340:9:21","nodeType":"YulTypedName","src":"2340:9:21","type":""},{"name":"value0","nativeSrc":"2351:6:21","nodeType":"YulTypedName","src":"2351:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2362:4:21","nodeType":"YulTypedName","src":"2362:4:21","type":""}],"src":"2270:177:21"},{"body":{"nativeSrc":"2556:270:21","nodeType":"YulBlock","src":"2556:270:21","statements":[{"body":{"nativeSrc":"2602:16:21","nodeType":"YulBlock","src":"2602:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2611:1:21","nodeType":"YulLiteral","src":"2611:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2614:1:21","nodeType":"YulLiteral","src":"2614:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2604:6:21","nodeType":"YulIdentifier","src":"2604:6:21"},"nativeSrc":"2604:12:21","nodeType":"YulFunctionCall","src":"2604:12:21"},"nativeSrc":"2604:12:21","nodeType":"YulExpressionStatement","src":"2604:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2577:7:21","nodeType":"YulIdentifier","src":"2577:7:21"},{"name":"headStart","nativeSrc":"2586:9:21","nodeType":"YulIdentifier","src":"2586:9:21"}],"functionName":{"name":"sub","nativeSrc":"2573:3:21","nodeType":"YulIdentifier","src":"2573:3:21"},"nativeSrc":"2573:23:21","nodeType":"YulFunctionCall","src":"2573:23:21"},{"kind":"number","nativeSrc":"2598:2:21","nodeType":"YulLiteral","src":"2598:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2569:3:21","nodeType":"YulIdentifier","src":"2569:3:21"},"nativeSrc":"2569:32:21","nodeType":"YulFunctionCall","src":"2569:32:21"},"nativeSrc":"2566:52:21","nodeType":"YulIf","src":"2566:52:21"},{"nativeSrc":"2627:39:21","nodeType":"YulAssignment","src":"2627:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2656:9:21","nodeType":"YulIdentifier","src":"2656:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2637:18:21","nodeType":"YulIdentifier","src":"2637:18:21"},"nativeSrc":"2637:29:21","nodeType":"YulFunctionCall","src":"2637:29:21"},"variableNames":[{"name":"value0","nativeSrc":"2627:6:21","nodeType":"YulIdentifier","src":"2627:6:21"}]},{"nativeSrc":"2675:48:21","nodeType":"YulAssignment","src":"2675:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2708:9:21","nodeType":"YulIdentifier","src":"2708:9:21"},{"kind":"number","nativeSrc":"2719:2:21","nodeType":"YulLiteral","src":"2719:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2704:3:21","nodeType":"YulIdentifier","src":"2704:3:21"},"nativeSrc":"2704:18:21","nodeType":"YulFunctionCall","src":"2704:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2685:18:21","nodeType":"YulIdentifier","src":"2685:18:21"},"nativeSrc":"2685:38:21","nodeType":"YulFunctionCall","src":"2685:38:21"},"variableNames":[{"name":"value1","nativeSrc":"2675:6:21","nodeType":"YulIdentifier","src":"2675:6:21"}]},{"nativeSrc":"2732:14:21","nodeType":"YulVariableDeclaration","src":"2732:14:21","value":{"kind":"number","nativeSrc":"2745:1:21","nodeType":"YulLiteral","src":"2745:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2736:5:21","nodeType":"YulTypedName","src":"2736:5:21","type":""}]},{"nativeSrc":"2755:41:21","nodeType":"YulAssignment","src":"2755:41:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2781:9:21","nodeType":"YulIdentifier","src":"2781:9:21"},{"kind":"number","nativeSrc":"2792:2:21","nodeType":"YulLiteral","src":"2792:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2777:3:21","nodeType":"YulIdentifier","src":"2777:3:21"},"nativeSrc":"2777:18:21","nodeType":"YulFunctionCall","src":"2777:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"2764:12:21","nodeType":"YulIdentifier","src":"2764:12:21"},"nativeSrc":"2764:32:21","nodeType":"YulFunctionCall","src":"2764:32:21"},"variableNames":[{"name":"value","nativeSrc":"2755:5:21","nodeType":"YulIdentifier","src":"2755:5:21"}]},{"nativeSrc":"2805:15:21","nodeType":"YulAssignment","src":"2805:15:21","value":{"name":"value","nativeSrc":"2815:5:21","nodeType":"YulIdentifier","src":"2815:5:21"},"variableNames":[{"name":"value2","nativeSrc":"2805:6:21","nodeType":"YulIdentifier","src":"2805:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"2452:374:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2506:9:21","nodeType":"YulTypedName","src":"2506:9:21","type":""},{"name":"dataEnd","nativeSrc":"2517:7:21","nodeType":"YulTypedName","src":"2517:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2529:6:21","nodeType":"YulTypedName","src":"2529:6:21","type":""},{"name":"value1","nativeSrc":"2537:6:21","nodeType":"YulTypedName","src":"2537:6:21","type":""},{"name":"value2","nativeSrc":"2545:6:21","nodeType":"YulTypedName","src":"2545:6:21","type":""}],"src":"2452:374:21"},{"body":{"nativeSrc":"2901:156:21","nodeType":"YulBlock","src":"2901:156:21","statements":[{"body":{"nativeSrc":"2947:16:21","nodeType":"YulBlock","src":"2947:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2956:1:21","nodeType":"YulLiteral","src":"2956:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2959:1:21","nodeType":"YulLiteral","src":"2959:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2949:6:21","nodeType":"YulIdentifier","src":"2949:6:21"},"nativeSrc":"2949:12:21","nodeType":"YulFunctionCall","src":"2949:12:21"},"nativeSrc":"2949:12:21","nodeType":"YulExpressionStatement","src":"2949:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2922:7:21","nodeType":"YulIdentifier","src":"2922:7:21"},{"name":"headStart","nativeSrc":"2931:9:21","nodeType":"YulIdentifier","src":"2931:9:21"}],"functionName":{"name":"sub","nativeSrc":"2918:3:21","nodeType":"YulIdentifier","src":"2918:3:21"},"nativeSrc":"2918:23:21","nodeType":"YulFunctionCall","src":"2918:23:21"},{"kind":"number","nativeSrc":"2943:2:21","nodeType":"YulLiteral","src":"2943:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2914:3:21","nodeType":"YulIdentifier","src":"2914:3:21"},"nativeSrc":"2914:32:21","nodeType":"YulFunctionCall","src":"2914:32:21"},"nativeSrc":"2911:52:21","nodeType":"YulIf","src":"2911:52:21"},{"nativeSrc":"2972:14:21","nodeType":"YulVariableDeclaration","src":"2972:14:21","value":{"kind":"number","nativeSrc":"2985:1:21","nodeType":"YulLiteral","src":"2985:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2976:5:21","nodeType":"YulTypedName","src":"2976:5:21","type":""}]},{"nativeSrc":"2995:32:21","nodeType":"YulAssignment","src":"2995:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3017:9:21","nodeType":"YulIdentifier","src":"3017:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"3004:12:21","nodeType":"YulIdentifier","src":"3004:12:21"},"nativeSrc":"3004:23:21","nodeType":"YulFunctionCall","src":"3004:23:21"},"variableNames":[{"name":"value","nativeSrc":"2995:5:21","nodeType":"YulIdentifier","src":"2995:5:21"}]},{"nativeSrc":"3036:15:21","nodeType":"YulAssignment","src":"3036:15:21","value":{"name":"value","nativeSrc":"3046:5:21","nodeType":"YulIdentifier","src":"3046:5:21"},"variableNames":[{"name":"value0","nativeSrc":"3036:6:21","nodeType":"YulIdentifier","src":"3036:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"2831:226:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2867:9:21","nodeType":"YulTypedName","src":"2867:9:21","type":""},{"name":"dataEnd","nativeSrc":"2878:7:21","nodeType":"YulTypedName","src":"2878:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2890:6:21","nodeType":"YulTypedName","src":"2890:6:21","type":""}],"src":"2831:226:21"},{"body":{"nativeSrc":"3163:76:21","nodeType":"YulBlock","src":"3163:76:21","statements":[{"nativeSrc":"3173:26:21","nodeType":"YulAssignment","src":"3173:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3185:9:21","nodeType":"YulIdentifier","src":"3185:9:21"},{"kind":"number","nativeSrc":"3196:2:21","nodeType":"YulLiteral","src":"3196:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3181:3:21","nodeType":"YulIdentifier","src":"3181:3:21"},"nativeSrc":"3181:18:21","nodeType":"YulFunctionCall","src":"3181:18:21"},"variableNames":[{"name":"tail","nativeSrc":"3173:4:21","nodeType":"YulIdentifier","src":"3173:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3215:9:21","nodeType":"YulIdentifier","src":"3215:9:21"},{"name":"value0","nativeSrc":"3226:6:21","nodeType":"YulIdentifier","src":"3226:6:21"}],"functionName":{"name":"mstore","nativeSrc":"3208:6:21","nodeType":"YulIdentifier","src":"3208:6:21"},"nativeSrc":"3208:25:21","nodeType":"YulFunctionCall","src":"3208:25:21"},"nativeSrc":"3208:25:21","nodeType":"YulExpressionStatement","src":"3208:25:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"3062:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3132:9:21","nodeType":"YulTypedName","src":"3132:9:21","type":""},{"name":"value0","nativeSrc":"3143:6:21","nodeType":"YulTypedName","src":"3143:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3154:4:21","nodeType":"YulTypedName","src":"3154:4:21","type":""}],"src":"3062:177:21"},{"body":{"nativeSrc":"3331:213:21","nodeType":"YulBlock","src":"3331:213:21","statements":[{"body":{"nativeSrc":"3377:16:21","nodeType":"YulBlock","src":"3377:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3386:1:21","nodeType":"YulLiteral","src":"3386:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3389:1:21","nodeType":"YulLiteral","src":"3389:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3379:6:21","nodeType":"YulIdentifier","src":"3379:6:21"},"nativeSrc":"3379:12:21","nodeType":"YulFunctionCall","src":"3379:12:21"},"nativeSrc":"3379:12:21","nodeType":"YulExpressionStatement","src":"3379:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3352:7:21","nodeType":"YulIdentifier","src":"3352:7:21"},{"name":"headStart","nativeSrc":"3361:9:21","nodeType":"YulIdentifier","src":"3361:9:21"}],"functionName":{"name":"sub","nativeSrc":"3348:3:21","nodeType":"YulIdentifier","src":"3348:3:21"},"nativeSrc":"3348:23:21","nodeType":"YulFunctionCall","src":"3348:23:21"},{"kind":"number","nativeSrc":"3373:2:21","nodeType":"YulLiteral","src":"3373:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3344:3:21","nodeType":"YulIdentifier","src":"3344:3:21"},"nativeSrc":"3344:32:21","nodeType":"YulFunctionCall","src":"3344:32:21"},"nativeSrc":"3341:52:21","nodeType":"YulIf","src":"3341:52:21"},{"nativeSrc":"3402:14:21","nodeType":"YulVariableDeclaration","src":"3402:14:21","value":{"kind":"number","nativeSrc":"3415:1:21","nodeType":"YulLiteral","src":"3415:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3406:5:21","nodeType":"YulTypedName","src":"3406:5:21","type":""}]},{"nativeSrc":"3425:32:21","nodeType":"YulAssignment","src":"3425:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3447:9:21","nodeType":"YulIdentifier","src":"3447:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"3434:12:21","nodeType":"YulIdentifier","src":"3434:12:21"},"nativeSrc":"3434:23:21","nodeType":"YulFunctionCall","src":"3434:23:21"},"variableNames":[{"name":"value","nativeSrc":"3425:5:21","nodeType":"YulIdentifier","src":"3425:5:21"}]},{"nativeSrc":"3466:15:21","nodeType":"YulAssignment","src":"3466:15:21","value":{"name":"value","nativeSrc":"3476:5:21","nodeType":"YulIdentifier","src":"3476:5:21"},"variableNames":[{"name":"value0","nativeSrc":"3466:6:21","nodeType":"YulIdentifier","src":"3466:6:21"}]},{"nativeSrc":"3490:48:21","nodeType":"YulAssignment","src":"3490:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3523:9:21","nodeType":"YulIdentifier","src":"3523:9:21"},{"kind":"number","nativeSrc":"3534:2:21","nodeType":"YulLiteral","src":"3534:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3519:3:21","nodeType":"YulIdentifier","src":"3519:3:21"},"nativeSrc":"3519:18:21","nodeType":"YulFunctionCall","src":"3519:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3500:18:21","nodeType":"YulIdentifier","src":"3500:18:21"},"nativeSrc":"3500:38:21","nodeType":"YulFunctionCall","src":"3500:38:21"},"variableNames":[{"name":"value1","nativeSrc":"3490:6:21","nodeType":"YulIdentifier","src":"3490:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"3244:300:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3289:9:21","nodeType":"YulTypedName","src":"3289:9:21","type":""},{"name":"dataEnd","nativeSrc":"3300:7:21","nodeType":"YulTypedName","src":"3300:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3312:6:21","nodeType":"YulTypedName","src":"3312:6:21","type":""},{"name":"value1","nativeSrc":"3320:6:21","nodeType":"YulTypedName","src":"3320:6:21","type":""}],"src":"3244:300:21"},{"body":{"nativeSrc":"3581:95:21","nodeType":"YulBlock","src":"3581:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3598:1:21","nodeType":"YulLiteral","src":"3598:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3605:3:21","nodeType":"YulLiteral","src":"3605:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"3610:10:21","nodeType":"YulLiteral","src":"3610:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3601:3:21","nodeType":"YulIdentifier","src":"3601:3:21"},"nativeSrc":"3601:20:21","nodeType":"YulFunctionCall","src":"3601:20:21"}],"functionName":{"name":"mstore","nativeSrc":"3591:6:21","nodeType":"YulIdentifier","src":"3591:6:21"},"nativeSrc":"3591:31:21","nodeType":"YulFunctionCall","src":"3591:31:21"},"nativeSrc":"3591:31:21","nodeType":"YulExpressionStatement","src":"3591:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3638:1:21","nodeType":"YulLiteral","src":"3638:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"3641:4:21","nodeType":"YulLiteral","src":"3641:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"3631:6:21","nodeType":"YulIdentifier","src":"3631:6:21"},"nativeSrc":"3631:15:21","nodeType":"YulFunctionCall","src":"3631:15:21"},"nativeSrc":"3631:15:21","nodeType":"YulExpressionStatement","src":"3631:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3662:1:21","nodeType":"YulLiteral","src":"3662:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3665:4:21","nodeType":"YulLiteral","src":"3665:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3655:6:21","nodeType":"YulIdentifier","src":"3655:6:21"},"nativeSrc":"3655:15:21","nodeType":"YulFunctionCall","src":"3655:15:21"},"nativeSrc":"3655:15:21","nodeType":"YulExpressionStatement","src":"3655:15:21"}]},"name":"panic_error_0x41","nativeSrc":"3549:127:21","nodeType":"YulFunctionDefinition","src":"3549:127:21"},{"body":{"nativeSrc":"3756:641:21","nodeType":"YulBlock","src":"3756:641:21","statements":[{"nativeSrc":"3766:13:21","nodeType":"YulVariableDeclaration","src":"3766:13:21","value":{"kind":"number","nativeSrc":"3778:1:21","nodeType":"YulLiteral","src":"3778:1:21","type":"","value":"0"},"variables":[{"name":"size","nativeSrc":"3770:4:21","nodeType":"YulTypedName","src":"3770:4:21","type":""}]},{"body":{"nativeSrc":"3822:22:21","nodeType":"YulBlock","src":"3822:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3824:16:21","nodeType":"YulIdentifier","src":"3824:16:21"},"nativeSrc":"3824:18:21","nodeType":"YulFunctionCall","src":"3824:18:21"},"nativeSrc":"3824:18:21","nodeType":"YulExpressionStatement","src":"3824:18:21"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3794:6:21","nodeType":"YulIdentifier","src":"3794:6:21"},{"kind":"number","nativeSrc":"3802:18:21","nodeType":"YulLiteral","src":"3802:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3791:2:21","nodeType":"YulIdentifier","src":"3791:2:21"},"nativeSrc":"3791:30:21","nodeType":"YulFunctionCall","src":"3791:30:21"},"nativeSrc":"3788:56:21","nodeType":"YulIf","src":"3788:56:21"},{"nativeSrc":"3853:43:21","nodeType":"YulVariableDeclaration","src":"3853:43:21","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3875:6:21","nodeType":"YulIdentifier","src":"3875:6:21"},{"kind":"number","nativeSrc":"3883:2:21","nodeType":"YulLiteral","src":"3883:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3871:3:21","nodeType":"YulIdentifier","src":"3871:3:21"},"nativeSrc":"3871:15:21","nodeType":"YulFunctionCall","src":"3871:15:21"},{"arguments":[{"kind":"number","nativeSrc":"3892:2:21","nodeType":"YulLiteral","src":"3892:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3888:3:21","nodeType":"YulIdentifier","src":"3888:3:21"},"nativeSrc":"3888:7:21","nodeType":"YulFunctionCall","src":"3888:7:21"}],"functionName":{"name":"and","nativeSrc":"3867:3:21","nodeType":"YulIdentifier","src":"3867:3:21"},"nativeSrc":"3867:29:21","nodeType":"YulFunctionCall","src":"3867:29:21"},"variables":[{"name":"result","nativeSrc":"3857:6:21","nodeType":"YulTypedName","src":"3857:6:21","type":""}]},{"nativeSrc":"3905:25:21","nodeType":"YulAssignment","src":"3905:25:21","value":{"arguments":[{"name":"result","nativeSrc":"3917:6:21","nodeType":"YulIdentifier","src":"3917:6:21"},{"kind":"number","nativeSrc":"3925:4:21","nodeType":"YulLiteral","src":"3925:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3913:3:21","nodeType":"YulIdentifier","src":"3913:3:21"},"nativeSrc":"3913:17:21","nodeType":"YulFunctionCall","src":"3913:17:21"},"variableNames":[{"name":"size","nativeSrc":"3905:4:21","nodeType":"YulIdentifier","src":"3905:4:21"}]},{"nativeSrc":"3939:15:21","nodeType":"YulVariableDeclaration","src":"3939:15:21","value":{"kind":"number","nativeSrc":"3953:1:21","nodeType":"YulLiteral","src":"3953:1:21","type":"","value":"0"},"variables":[{"name":"memPtr","nativeSrc":"3943:6:21","nodeType":"YulTypedName","src":"3943:6:21","type":""}]},{"nativeSrc":"3963:19:21","nodeType":"YulAssignment","src":"3963:19:21","value":{"arguments":[{"kind":"number","nativeSrc":"3979:2:21","nodeType":"YulLiteral","src":"3979:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"3973:5:21","nodeType":"YulIdentifier","src":"3973:5:21"},"nativeSrc":"3973:9:21","nodeType":"YulFunctionCall","src":"3973:9:21"},"variableNames":[{"name":"memPtr","nativeSrc":"3963:6:21","nodeType":"YulIdentifier","src":"3963:6:21"}]},{"nativeSrc":"3991:60:21","nodeType":"YulVariableDeclaration","src":"3991:60:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"4013:6:21","nodeType":"YulIdentifier","src":"4013:6:21"},{"arguments":[{"arguments":[{"name":"result","nativeSrc":"4029:6:21","nodeType":"YulIdentifier","src":"4029:6:21"},{"kind":"number","nativeSrc":"4037:2:21","nodeType":"YulLiteral","src":"4037:2:21","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"4025:3:21","nodeType":"YulIdentifier","src":"4025:3:21"},"nativeSrc":"4025:15:21","nodeType":"YulFunctionCall","src":"4025:15:21"},{"arguments":[{"kind":"number","nativeSrc":"4046:2:21","nodeType":"YulLiteral","src":"4046:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4042:3:21","nodeType":"YulIdentifier","src":"4042:3:21"},"nativeSrc":"4042:7:21","nodeType":"YulFunctionCall","src":"4042:7:21"}],"functionName":{"name":"and","nativeSrc":"4021:3:21","nodeType":"YulIdentifier","src":"4021:3:21"},"nativeSrc":"4021:29:21","nodeType":"YulFunctionCall","src":"4021:29:21"}],"functionName":{"name":"add","nativeSrc":"4009:3:21","nodeType":"YulIdentifier","src":"4009:3:21"},"nativeSrc":"4009:42:21","nodeType":"YulFunctionCall","src":"4009:42:21"},"variables":[{"name":"newFreePtr","nativeSrc":"3995:10:21","nodeType":"YulTypedName","src":"3995:10:21","type":""}]},{"body":{"nativeSrc":"4126:22:21","nodeType":"YulBlock","src":"4126:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4128:16:21","nodeType":"YulIdentifier","src":"4128:16:21"},"nativeSrc":"4128:18:21","nodeType":"YulFunctionCall","src":"4128:18:21"},"nativeSrc":"4128:18:21","nodeType":"YulExpressionStatement","src":"4128:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"4069:10:21","nodeType":"YulIdentifier","src":"4069:10:21"},{"kind":"number","nativeSrc":"4081:18:21","nodeType":"YulLiteral","src":"4081:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4066:2:21","nodeType":"YulIdentifier","src":"4066:2:21"},"nativeSrc":"4066:34:21","nodeType":"YulFunctionCall","src":"4066:34:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"4105:10:21","nodeType":"YulIdentifier","src":"4105:10:21"},{"name":"memPtr","nativeSrc":"4117:6:21","nodeType":"YulIdentifier","src":"4117:6:21"}],"functionName":{"name":"lt","nativeSrc":"4102:2:21","nodeType":"YulIdentifier","src":"4102:2:21"},"nativeSrc":"4102:22:21","nodeType":"YulFunctionCall","src":"4102:22:21"}],"functionName":{"name":"or","nativeSrc":"4063:2:21","nodeType":"YulIdentifier","src":"4063:2:21"},"nativeSrc":"4063:62:21","nodeType":"YulFunctionCall","src":"4063:62:21"},"nativeSrc":"4060:88:21","nodeType":"YulIf","src":"4060:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4164:2:21","nodeType":"YulLiteral","src":"4164:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4168:10:21","nodeType":"YulIdentifier","src":"4168:10:21"}],"functionName":{"name":"mstore","nativeSrc":"4157:6:21","nodeType":"YulIdentifier","src":"4157:6:21"},"nativeSrc":"4157:22:21","nodeType":"YulFunctionCall","src":"4157:22:21"},"nativeSrc":"4157:22:21","nodeType":"YulExpressionStatement","src":"4157:22:21"},{"nativeSrc":"4188:15:21","nodeType":"YulAssignment","src":"4188:15:21","value":{"name":"memPtr","nativeSrc":"4197:6:21","nodeType":"YulIdentifier","src":"4197:6:21"},"variableNames":[{"name":"array","nativeSrc":"4188:5:21","nodeType":"YulIdentifier","src":"4188:5:21"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"4219:6:21","nodeType":"YulIdentifier","src":"4219:6:21"},{"name":"length","nativeSrc":"4227:6:21","nodeType":"YulIdentifier","src":"4227:6:21"}],"functionName":{"name":"mstore","nativeSrc":"4212:6:21","nodeType":"YulIdentifier","src":"4212:6:21"},"nativeSrc":"4212:22:21","nodeType":"YulFunctionCall","src":"4212:22:21"},"nativeSrc":"4212:22:21","nodeType":"YulExpressionStatement","src":"4212:22:21"},{"body":{"nativeSrc":"4272:16:21","nodeType":"YulBlock","src":"4272:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4281:1:21","nodeType":"YulLiteral","src":"4281:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4284:1:21","nodeType":"YulLiteral","src":"4284:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4274:6:21","nodeType":"YulIdentifier","src":"4274:6:21"},"nativeSrc":"4274:12:21","nodeType":"YulFunctionCall","src":"4274:12:21"},"nativeSrc":"4274:12:21","nodeType":"YulExpressionStatement","src":"4274:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4253:3:21","nodeType":"YulIdentifier","src":"4253:3:21"},{"name":"length","nativeSrc":"4258:6:21","nodeType":"YulIdentifier","src":"4258:6:21"}],"functionName":{"name":"add","nativeSrc":"4249:3:21","nodeType":"YulIdentifier","src":"4249:3:21"},"nativeSrc":"4249:16:21","nodeType":"YulFunctionCall","src":"4249:16:21"},{"name":"end","nativeSrc":"4267:3:21","nodeType":"YulIdentifier","src":"4267:3:21"}],"functionName":{"name":"gt","nativeSrc":"4246:2:21","nodeType":"YulIdentifier","src":"4246:2:21"},"nativeSrc":"4246:25:21","nodeType":"YulFunctionCall","src":"4246:25:21"},"nativeSrc":"4243:45:21","nodeType":"YulIf","src":"4243:45:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4314:6:21","nodeType":"YulIdentifier","src":"4314:6:21"},{"kind":"number","nativeSrc":"4322:4:21","nodeType":"YulLiteral","src":"4322:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4310:3:21","nodeType":"YulIdentifier","src":"4310:3:21"},"nativeSrc":"4310:17:21","nodeType":"YulFunctionCall","src":"4310:17:21"},{"name":"src","nativeSrc":"4329:3:21","nodeType":"YulIdentifier","src":"4329:3:21"},{"name":"length","nativeSrc":"4334:6:21","nodeType":"YulIdentifier","src":"4334:6:21"}],"functionName":{"name":"calldatacopy","nativeSrc":"4297:12:21","nodeType":"YulIdentifier","src":"4297:12:21"},"nativeSrc":"4297:44:21","nodeType":"YulFunctionCall","src":"4297:44:21"},"nativeSrc":"4297:44:21","nodeType":"YulExpressionStatement","src":"4297:44:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4365:6:21","nodeType":"YulIdentifier","src":"4365:6:21"},{"name":"length","nativeSrc":"4373:6:21","nodeType":"YulIdentifier","src":"4373:6:21"}],"functionName":{"name":"add","nativeSrc":"4361:3:21","nodeType":"YulIdentifier","src":"4361:3:21"},"nativeSrc":"4361:19:21","nodeType":"YulFunctionCall","src":"4361:19:21"},{"kind":"number","nativeSrc":"4382:4:21","nodeType":"YulLiteral","src":"4382:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4357:3:21","nodeType":"YulIdentifier","src":"4357:3:21"},"nativeSrc":"4357:30:21","nodeType":"YulFunctionCall","src":"4357:30:21"},{"kind":"number","nativeSrc":"4389:1:21","nodeType":"YulLiteral","src":"4389:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4350:6:21","nodeType":"YulIdentifier","src":"4350:6:21"},"nativeSrc":"4350:41:21","nodeType":"YulFunctionCall","src":"4350:41:21"},"nativeSrc":"4350:41:21","nodeType":"YulExpressionStatement","src":"4350:41:21"}]},"name":"abi_decode_available_length_string","nativeSrc":"3681:716:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3725:3:21","nodeType":"YulTypedName","src":"3725:3:21","type":""},{"name":"length","nativeSrc":"3730:6:21","nodeType":"YulTypedName","src":"3730:6:21","type":""},{"name":"end","nativeSrc":"3738:3:21","nodeType":"YulTypedName","src":"3738:3:21","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3746:5:21","nodeType":"YulTypedName","src":"3746:5:21","type":""}],"src":"3681:716:21"},{"body":{"nativeSrc":"4455:169:21","nodeType":"YulBlock","src":"4455:169:21","statements":[{"body":{"nativeSrc":"4504:16:21","nodeType":"YulBlock","src":"4504:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4513:1:21","nodeType":"YulLiteral","src":"4513:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4516:1:21","nodeType":"YulLiteral","src":"4516:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4506:6:21","nodeType":"YulIdentifier","src":"4506:6:21"},"nativeSrc":"4506:12:21","nodeType":"YulFunctionCall","src":"4506:12:21"},"nativeSrc":"4506:12:21","nodeType":"YulExpressionStatement","src":"4506:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4483:6:21","nodeType":"YulIdentifier","src":"4483:6:21"},{"kind":"number","nativeSrc":"4491:4:21","nodeType":"YulLiteral","src":"4491:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4479:3:21","nodeType":"YulIdentifier","src":"4479:3:21"},"nativeSrc":"4479:17:21","nodeType":"YulFunctionCall","src":"4479:17:21"},{"name":"end","nativeSrc":"4498:3:21","nodeType":"YulIdentifier","src":"4498:3:21"}],"functionName":{"name":"slt","nativeSrc":"4475:3:21","nodeType":"YulIdentifier","src":"4475:3:21"},"nativeSrc":"4475:27:21","nodeType":"YulFunctionCall","src":"4475:27:21"}],"functionName":{"name":"iszero","nativeSrc":"4468:6:21","nodeType":"YulIdentifier","src":"4468:6:21"},"nativeSrc":"4468:35:21","nodeType":"YulFunctionCall","src":"4468:35:21"},"nativeSrc":"4465:55:21","nodeType":"YulIf","src":"4465:55:21"},{"nativeSrc":"4529:89:21","nodeType":"YulAssignment","src":"4529:89:21","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4577:6:21","nodeType":"YulIdentifier","src":"4577:6:21"},{"kind":"number","nativeSrc":"4585:4:21","nodeType":"YulLiteral","src":"4585:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4573:3:21","nodeType":"YulIdentifier","src":"4573:3:21"},"nativeSrc":"4573:17:21","nodeType":"YulFunctionCall","src":"4573:17:21"},{"arguments":[{"name":"offset","nativeSrc":"4605:6:21","nodeType":"YulIdentifier","src":"4605:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"4592:12:21","nodeType":"YulIdentifier","src":"4592:12:21"},"nativeSrc":"4592:20:21","nodeType":"YulFunctionCall","src":"4592:20:21"},{"name":"end","nativeSrc":"4614:3:21","nodeType":"YulIdentifier","src":"4614:3:21"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"4538:34:21","nodeType":"YulIdentifier","src":"4538:34:21"},"nativeSrc":"4538:80:21","nodeType":"YulFunctionCall","src":"4538:80:21"},"variableNames":[{"name":"array","nativeSrc":"4529:5:21","nodeType":"YulIdentifier","src":"4529:5:21"}]}]},"name":"abi_decode_string","nativeSrc":"4402:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4429:6:21","nodeType":"YulTypedName","src":"4429:6:21","type":""},{"name":"end","nativeSrc":"4437:3:21","nodeType":"YulTypedName","src":"4437:3:21","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4445:5:21","nodeType":"YulTypedName","src":"4445:5:21","type":""}],"src":"4402:222:21"},{"body":{"nativeSrc":"4726:299:21","nodeType":"YulBlock","src":"4726:299:21","statements":[{"body":{"nativeSrc":"4772:16:21","nodeType":"YulBlock","src":"4772:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4781:1:21","nodeType":"YulLiteral","src":"4781:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4784:1:21","nodeType":"YulLiteral","src":"4784:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4774:6:21","nodeType":"YulIdentifier","src":"4774:6:21"},"nativeSrc":"4774:12:21","nodeType":"YulFunctionCall","src":"4774:12:21"},"nativeSrc":"4774:12:21","nodeType":"YulExpressionStatement","src":"4774:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4747:7:21","nodeType":"YulIdentifier","src":"4747:7:21"},{"name":"headStart","nativeSrc":"4756:9:21","nodeType":"YulIdentifier","src":"4756:9:21"}],"functionName":{"name":"sub","nativeSrc":"4743:3:21","nodeType":"YulIdentifier","src":"4743:3:21"},"nativeSrc":"4743:23:21","nodeType":"YulFunctionCall","src":"4743:23:21"},{"kind":"number","nativeSrc":"4768:2:21","nodeType":"YulLiteral","src":"4768:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4739:3:21","nodeType":"YulIdentifier","src":"4739:3:21"},"nativeSrc":"4739:32:21","nodeType":"YulFunctionCall","src":"4739:32:21"},"nativeSrc":"4736:52:21","nodeType":"YulIf","src":"4736:52:21"},{"nativeSrc":"4797:39:21","nodeType":"YulAssignment","src":"4797:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4826:9:21","nodeType":"YulIdentifier","src":"4826:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4807:18:21","nodeType":"YulIdentifier","src":"4807:18:21"},"nativeSrc":"4807:29:21","nodeType":"YulFunctionCall","src":"4807:29:21"},"variableNames":[{"name":"value0","nativeSrc":"4797:6:21","nodeType":"YulIdentifier","src":"4797:6:21"}]},{"nativeSrc":"4845:46:21","nodeType":"YulVariableDeclaration","src":"4845:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4876:9:21","nodeType":"YulIdentifier","src":"4876:9:21"},{"kind":"number","nativeSrc":"4887:2:21","nodeType":"YulLiteral","src":"4887:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4872:3:21","nodeType":"YulIdentifier","src":"4872:3:21"},"nativeSrc":"4872:18:21","nodeType":"YulFunctionCall","src":"4872:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"4859:12:21","nodeType":"YulIdentifier","src":"4859:12:21"},"nativeSrc":"4859:32:21","nodeType":"YulFunctionCall","src":"4859:32:21"},"variables":[{"name":"offset","nativeSrc":"4849:6:21","nodeType":"YulTypedName","src":"4849:6:21","type":""}]},{"body":{"nativeSrc":"4934:16:21","nodeType":"YulBlock","src":"4934:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4943:1:21","nodeType":"YulLiteral","src":"4943:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4946:1:21","nodeType":"YulLiteral","src":"4946:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4936:6:21","nodeType":"YulIdentifier","src":"4936:6:21"},"nativeSrc":"4936:12:21","nodeType":"YulFunctionCall","src":"4936:12:21"},"nativeSrc":"4936:12:21","nodeType":"YulExpressionStatement","src":"4936:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4906:6:21","nodeType":"YulIdentifier","src":"4906:6:21"},{"kind":"number","nativeSrc":"4914:18:21","nodeType":"YulLiteral","src":"4914:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4903:2:21","nodeType":"YulIdentifier","src":"4903:2:21"},"nativeSrc":"4903:30:21","nodeType":"YulFunctionCall","src":"4903:30:21"},"nativeSrc":"4900:50:21","nodeType":"YulIf","src":"4900:50:21"},{"nativeSrc":"4959:60:21","nodeType":"YulAssignment","src":"4959:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4991:9:21","nodeType":"YulIdentifier","src":"4991:9:21"},{"name":"offset","nativeSrc":"5002:6:21","nodeType":"YulIdentifier","src":"5002:6:21"}],"functionName":{"name":"add","nativeSrc":"4987:3:21","nodeType":"YulIdentifier","src":"4987:3:21"},"nativeSrc":"4987:22:21","nodeType":"YulFunctionCall","src":"4987:22:21"},{"name":"dataEnd","nativeSrc":"5011:7:21","nodeType":"YulIdentifier","src":"5011:7:21"}],"functionName":{"name":"abi_decode_string","nativeSrc":"4969:17:21","nodeType":"YulIdentifier","src":"4969:17:21"},"nativeSrc":"4969:50:21","nodeType":"YulFunctionCall","src":"4969:50:21"},"variableNames":[{"name":"value1","nativeSrc":"4959:6:21","nodeType":"YulIdentifier","src":"4959:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nativeSrc":"4629:396:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4684:9:21","nodeType":"YulTypedName","src":"4684:9:21","type":""},{"name":"dataEnd","nativeSrc":"4695:7:21","nodeType":"YulTypedName","src":"4695:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4707:6:21","nodeType":"YulTypedName","src":"4707:6:21","type":""},{"name":"value1","nativeSrc":"4715:6:21","nodeType":"YulTypedName","src":"4715:6:21","type":""}],"src":"4629:396:21"},{"body":{"nativeSrc":"5127:339:21","nodeType":"YulBlock","src":"5127:339:21","statements":[{"body":{"nativeSrc":"5173:16:21","nodeType":"YulBlock","src":"5173:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5182:1:21","nodeType":"YulLiteral","src":"5182:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5185:1:21","nodeType":"YulLiteral","src":"5185:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5175:6:21","nodeType":"YulIdentifier","src":"5175:6:21"},"nativeSrc":"5175:12:21","nodeType":"YulFunctionCall","src":"5175:12:21"},"nativeSrc":"5175:12:21","nodeType":"YulExpressionStatement","src":"5175:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5148:7:21","nodeType":"YulIdentifier","src":"5148:7:21"},{"name":"headStart","nativeSrc":"5157:9:21","nodeType":"YulIdentifier","src":"5157:9:21"}],"functionName":{"name":"sub","nativeSrc":"5144:3:21","nodeType":"YulIdentifier","src":"5144:3:21"},"nativeSrc":"5144:23:21","nodeType":"YulFunctionCall","src":"5144:23:21"},{"kind":"number","nativeSrc":"5169:2:21","nodeType":"YulLiteral","src":"5169:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5140:3:21","nodeType":"YulIdentifier","src":"5140:3:21"},"nativeSrc":"5140:32:21","nodeType":"YulFunctionCall","src":"5140:32:21"},"nativeSrc":"5137:52:21","nodeType":"YulIf","src":"5137:52:21"},{"nativeSrc":"5198:14:21","nodeType":"YulVariableDeclaration","src":"5198:14:21","value":{"kind":"number","nativeSrc":"5211:1:21","nodeType":"YulLiteral","src":"5211:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5202:5:21","nodeType":"YulTypedName","src":"5202:5:21","type":""}]},{"nativeSrc":"5221:32:21","nodeType":"YulAssignment","src":"5221:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5243:9:21","nodeType":"YulIdentifier","src":"5243:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"5230:12:21","nodeType":"YulIdentifier","src":"5230:12:21"},"nativeSrc":"5230:23:21","nodeType":"YulFunctionCall","src":"5230:23:21"},"variableNames":[{"name":"value","nativeSrc":"5221:5:21","nodeType":"YulIdentifier","src":"5221:5:21"}]},{"nativeSrc":"5262:15:21","nodeType":"YulAssignment","src":"5262:15:21","value":{"name":"value","nativeSrc":"5272:5:21","nodeType":"YulIdentifier","src":"5272:5:21"},"variableNames":[{"name":"value0","nativeSrc":"5262:6:21","nodeType":"YulIdentifier","src":"5262:6:21"}]},{"nativeSrc":"5286:46:21","nodeType":"YulVariableDeclaration","src":"5286:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5317:9:21","nodeType":"YulIdentifier","src":"5317:9:21"},{"kind":"number","nativeSrc":"5328:2:21","nodeType":"YulLiteral","src":"5328:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5313:3:21","nodeType":"YulIdentifier","src":"5313:3:21"},"nativeSrc":"5313:18:21","nodeType":"YulFunctionCall","src":"5313:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"5300:12:21","nodeType":"YulIdentifier","src":"5300:12:21"},"nativeSrc":"5300:32:21","nodeType":"YulFunctionCall","src":"5300:32:21"},"variables":[{"name":"offset","nativeSrc":"5290:6:21","nodeType":"YulTypedName","src":"5290:6:21","type":""}]},{"body":{"nativeSrc":"5375:16:21","nodeType":"YulBlock","src":"5375:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5384:1:21","nodeType":"YulLiteral","src":"5384:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5387:1:21","nodeType":"YulLiteral","src":"5387:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5377:6:21","nodeType":"YulIdentifier","src":"5377:6:21"},"nativeSrc":"5377:12:21","nodeType":"YulFunctionCall","src":"5377:12:21"},"nativeSrc":"5377:12:21","nodeType":"YulExpressionStatement","src":"5377:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5347:6:21","nodeType":"YulIdentifier","src":"5347:6:21"},{"kind":"number","nativeSrc":"5355:18:21","nodeType":"YulLiteral","src":"5355:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5344:2:21","nodeType":"YulIdentifier","src":"5344:2:21"},"nativeSrc":"5344:30:21","nodeType":"YulFunctionCall","src":"5344:30:21"},"nativeSrc":"5341:50:21","nodeType":"YulIf","src":"5341:50:21"},{"nativeSrc":"5400:60:21","nodeType":"YulAssignment","src":"5400:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5432:9:21","nodeType":"YulIdentifier","src":"5432:9:21"},{"name":"offset","nativeSrc":"5443:6:21","nodeType":"YulIdentifier","src":"5443:6:21"}],"functionName":{"name":"add","nativeSrc":"5428:3:21","nodeType":"YulIdentifier","src":"5428:3:21"},"nativeSrc":"5428:22:21","nodeType":"YulFunctionCall","src":"5428:22:21"},{"name":"dataEnd","nativeSrc":"5452:7:21","nodeType":"YulIdentifier","src":"5452:7:21"}],"functionName":{"name":"abi_decode_string","nativeSrc":"5410:17:21","nodeType":"YulIdentifier","src":"5410:17:21"},"nativeSrc":"5410:50:21","nodeType":"YulFunctionCall","src":"5410:50:21"},"variableNames":[{"name":"value1","nativeSrc":"5400:6:21","nodeType":"YulIdentifier","src":"5400:6:21"}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nativeSrc":"5030:436:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5085:9:21","nodeType":"YulTypedName","src":"5085:9:21","type":""},{"name":"dataEnd","nativeSrc":"5096:7:21","nodeType":"YulTypedName","src":"5096:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5108:6:21","nodeType":"YulTypedName","src":"5108:6:21","type":""},{"name":"value1","nativeSrc":"5116:6:21","nodeType":"YulTypedName","src":"5116:6:21","type":""}],"src":"5030:436:21"},{"body":{"nativeSrc":"5541:116:21","nodeType":"YulBlock","src":"5541:116:21","statements":[{"body":{"nativeSrc":"5587:16:21","nodeType":"YulBlock","src":"5587:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5596:1:21","nodeType":"YulLiteral","src":"5596:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5599:1:21","nodeType":"YulLiteral","src":"5599:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5589:6:21","nodeType":"YulIdentifier","src":"5589:6:21"},"nativeSrc":"5589:12:21","nodeType":"YulFunctionCall","src":"5589:12:21"},"nativeSrc":"5589:12:21","nodeType":"YulExpressionStatement","src":"5589:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5562:7:21","nodeType":"YulIdentifier","src":"5562:7:21"},{"name":"headStart","nativeSrc":"5571:9:21","nodeType":"YulIdentifier","src":"5571:9:21"}],"functionName":{"name":"sub","nativeSrc":"5558:3:21","nodeType":"YulIdentifier","src":"5558:3:21"},"nativeSrc":"5558:23:21","nodeType":"YulFunctionCall","src":"5558:23:21"},{"kind":"number","nativeSrc":"5583:2:21","nodeType":"YulLiteral","src":"5583:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5554:3:21","nodeType":"YulIdentifier","src":"5554:3:21"},"nativeSrc":"5554:32:21","nodeType":"YulFunctionCall","src":"5554:32:21"},"nativeSrc":"5551:52:21","nodeType":"YulIf","src":"5551:52:21"},{"nativeSrc":"5612:39:21","nodeType":"YulAssignment","src":"5612:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5641:9:21","nodeType":"YulIdentifier","src":"5641:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5622:18:21","nodeType":"YulIdentifier","src":"5622:18:21"},"nativeSrc":"5622:29:21","nodeType":"YulFunctionCall","src":"5622:29:21"},"variableNames":[{"name":"value0","nativeSrc":"5612:6:21","nodeType":"YulIdentifier","src":"5612:6:21"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5471:186:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5507:9:21","nodeType":"YulTypedName","src":"5507:9:21","type":""},{"name":"dataEnd","nativeSrc":"5518:7:21","nodeType":"YulTypedName","src":"5518:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5530:6:21","nodeType":"YulTypedName","src":"5530:6:21","type":""}],"src":"5471:186:21"},{"body":{"nativeSrc":"5746:263:21","nodeType":"YulBlock","src":"5746:263:21","statements":[{"body":{"nativeSrc":"5792:16:21","nodeType":"YulBlock","src":"5792:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5801:1:21","nodeType":"YulLiteral","src":"5801:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5804:1:21","nodeType":"YulLiteral","src":"5804:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5794:6:21","nodeType":"YulIdentifier","src":"5794:6:21"},"nativeSrc":"5794:12:21","nodeType":"YulFunctionCall","src":"5794:12:21"},"nativeSrc":"5794:12:21","nodeType":"YulExpressionStatement","src":"5794:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5767:7:21","nodeType":"YulIdentifier","src":"5767:7:21"},{"name":"headStart","nativeSrc":"5776:9:21","nodeType":"YulIdentifier","src":"5776:9:21"}],"functionName":{"name":"sub","nativeSrc":"5763:3:21","nodeType":"YulIdentifier","src":"5763:3:21"},"nativeSrc":"5763:23:21","nodeType":"YulFunctionCall","src":"5763:23:21"},{"kind":"number","nativeSrc":"5788:2:21","nodeType":"YulLiteral","src":"5788:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5759:3:21","nodeType":"YulIdentifier","src":"5759:3:21"},"nativeSrc":"5759:32:21","nodeType":"YulFunctionCall","src":"5759:32:21"},"nativeSrc":"5756:52:21","nodeType":"YulIf","src":"5756:52:21"},{"nativeSrc":"5817:39:21","nodeType":"YulAssignment","src":"5817:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5846:9:21","nodeType":"YulIdentifier","src":"5846:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5827:18:21","nodeType":"YulIdentifier","src":"5827:18:21"},"nativeSrc":"5827:29:21","nodeType":"YulFunctionCall","src":"5827:29:21"},"variableNames":[{"name":"value0","nativeSrc":"5817:6:21","nodeType":"YulIdentifier","src":"5817:6:21"}]},{"nativeSrc":"5865:45:21","nodeType":"YulVariableDeclaration","src":"5865:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5895:9:21","nodeType":"YulIdentifier","src":"5895:9:21"},{"kind":"number","nativeSrc":"5906:2:21","nodeType":"YulLiteral","src":"5906:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5891:3:21","nodeType":"YulIdentifier","src":"5891:3:21"},"nativeSrc":"5891:18:21","nodeType":"YulFunctionCall","src":"5891:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"5878:12:21","nodeType":"YulIdentifier","src":"5878:12:21"},"nativeSrc":"5878:32:21","nodeType":"YulFunctionCall","src":"5878:32:21"},"variables":[{"name":"value","nativeSrc":"5869:5:21","nodeType":"YulTypedName","src":"5869:5:21","type":""}]},{"body":{"nativeSrc":"5963:16:21","nodeType":"YulBlock","src":"5963:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5972:1:21","nodeType":"YulLiteral","src":"5972:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5975:1:21","nodeType":"YulLiteral","src":"5975:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5965:6:21","nodeType":"YulIdentifier","src":"5965:6:21"},"nativeSrc":"5965:12:21","nodeType":"YulFunctionCall","src":"5965:12:21"},"nativeSrc":"5965:12:21","nodeType":"YulExpressionStatement","src":"5965:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5932:5:21","nodeType":"YulIdentifier","src":"5932:5:21"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5953:5:21","nodeType":"YulIdentifier","src":"5953:5:21"}],"functionName":{"name":"iszero","nativeSrc":"5946:6:21","nodeType":"YulIdentifier","src":"5946:6:21"},"nativeSrc":"5946:13:21","nodeType":"YulFunctionCall","src":"5946:13:21"}],"functionName":{"name":"iszero","nativeSrc":"5939:6:21","nodeType":"YulIdentifier","src":"5939:6:21"},"nativeSrc":"5939:21:21","nodeType":"YulFunctionCall","src":"5939:21:21"}],"functionName":{"name":"eq","nativeSrc":"5929:2:21","nodeType":"YulIdentifier","src":"5929:2:21"},"nativeSrc":"5929:32:21","nodeType":"YulFunctionCall","src":"5929:32:21"}],"functionName":{"name":"iszero","nativeSrc":"5922:6:21","nodeType":"YulIdentifier","src":"5922:6:21"},"nativeSrc":"5922:40:21","nodeType":"YulFunctionCall","src":"5922:40:21"},"nativeSrc":"5919:60:21","nodeType":"YulIf","src":"5919:60:21"},{"nativeSrc":"5988:15:21","nodeType":"YulAssignment","src":"5988:15:21","value":{"name":"value","nativeSrc":"5998:5:21","nodeType":"YulIdentifier","src":"5998:5:21"},"variableNames":[{"name":"value1","nativeSrc":"5988:6:21","nodeType":"YulIdentifier","src":"5988:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"5662:347:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5704:9:21","nodeType":"YulTypedName","src":"5704:9:21","type":""},{"name":"dataEnd","nativeSrc":"5715:7:21","nodeType":"YulTypedName","src":"5715:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5727:6:21","nodeType":"YulTypedName","src":"5727:6:21","type":""},{"name":"value1","nativeSrc":"5735:6:21","nodeType":"YulTypedName","src":"5735:6:21","type":""}],"src":"5662:347:21"},{"body":{"nativeSrc":"6144:583:21","nodeType":"YulBlock","src":"6144:583:21","statements":[{"body":{"nativeSrc":"6191:16:21","nodeType":"YulBlock","src":"6191:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6200:1:21","nodeType":"YulLiteral","src":"6200:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6203:1:21","nodeType":"YulLiteral","src":"6203:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6193:6:21","nodeType":"YulIdentifier","src":"6193:6:21"},"nativeSrc":"6193:12:21","nodeType":"YulFunctionCall","src":"6193:12:21"},"nativeSrc":"6193:12:21","nodeType":"YulExpressionStatement","src":"6193:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6165:7:21","nodeType":"YulIdentifier","src":"6165:7:21"},{"name":"headStart","nativeSrc":"6174:9:21","nodeType":"YulIdentifier","src":"6174:9:21"}],"functionName":{"name":"sub","nativeSrc":"6161:3:21","nodeType":"YulIdentifier","src":"6161:3:21"},"nativeSrc":"6161:23:21","nodeType":"YulFunctionCall","src":"6161:23:21"},{"kind":"number","nativeSrc":"6186:3:21","nodeType":"YulLiteral","src":"6186:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"6157:3:21","nodeType":"YulIdentifier","src":"6157:3:21"},"nativeSrc":"6157:33:21","nodeType":"YulFunctionCall","src":"6157:33:21"},"nativeSrc":"6154:53:21","nodeType":"YulIf","src":"6154:53:21"},{"nativeSrc":"6216:39:21","nodeType":"YulAssignment","src":"6216:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6245:9:21","nodeType":"YulIdentifier","src":"6245:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6226:18:21","nodeType":"YulIdentifier","src":"6226:18:21"},"nativeSrc":"6226:29:21","nodeType":"YulFunctionCall","src":"6226:29:21"},"variableNames":[{"name":"value0","nativeSrc":"6216:6:21","nodeType":"YulIdentifier","src":"6216:6:21"}]},{"nativeSrc":"6264:48:21","nodeType":"YulAssignment","src":"6264:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6297:9:21","nodeType":"YulIdentifier","src":"6297:9:21"},{"kind":"number","nativeSrc":"6308:2:21","nodeType":"YulLiteral","src":"6308:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6293:3:21","nodeType":"YulIdentifier","src":"6293:3:21"},"nativeSrc":"6293:18:21","nodeType":"YulFunctionCall","src":"6293:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6274:18:21","nodeType":"YulIdentifier","src":"6274:18:21"},"nativeSrc":"6274:38:21","nodeType":"YulFunctionCall","src":"6274:38:21"},"variableNames":[{"name":"value1","nativeSrc":"6264:6:21","nodeType":"YulIdentifier","src":"6264:6:21"}]},{"nativeSrc":"6321:14:21","nodeType":"YulVariableDeclaration","src":"6321:14:21","value":{"kind":"number","nativeSrc":"6334:1:21","nodeType":"YulLiteral","src":"6334:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6325:5:21","nodeType":"YulTypedName","src":"6325:5:21","type":""}]},{"nativeSrc":"6344:41:21","nodeType":"YulAssignment","src":"6344:41:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6370:9:21","nodeType":"YulIdentifier","src":"6370:9:21"},{"kind":"number","nativeSrc":"6381:2:21","nodeType":"YulLiteral","src":"6381:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6366:3:21","nodeType":"YulIdentifier","src":"6366:3:21"},"nativeSrc":"6366:18:21","nodeType":"YulFunctionCall","src":"6366:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"6353:12:21","nodeType":"YulIdentifier","src":"6353:12:21"},"nativeSrc":"6353:32:21","nodeType":"YulFunctionCall","src":"6353:32:21"},"variableNames":[{"name":"value","nativeSrc":"6344:5:21","nodeType":"YulIdentifier","src":"6344:5:21"}]},{"nativeSrc":"6394:15:21","nodeType":"YulAssignment","src":"6394:15:21","value":{"name":"value","nativeSrc":"6404:5:21","nodeType":"YulIdentifier","src":"6404:5:21"},"variableNames":[{"name":"value2","nativeSrc":"6394:6:21","nodeType":"YulIdentifier","src":"6394:6:21"}]},{"nativeSrc":"6418:46:21","nodeType":"YulVariableDeclaration","src":"6418:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6449:9:21","nodeType":"YulIdentifier","src":"6449:9:21"},{"kind":"number","nativeSrc":"6460:2:21","nodeType":"YulLiteral","src":"6460:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6445:3:21","nodeType":"YulIdentifier","src":"6445:3:21"},"nativeSrc":"6445:18:21","nodeType":"YulFunctionCall","src":"6445:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"6432:12:21","nodeType":"YulIdentifier","src":"6432:12:21"},"nativeSrc":"6432:32:21","nodeType":"YulFunctionCall","src":"6432:32:21"},"variables":[{"name":"offset","nativeSrc":"6422:6:21","nodeType":"YulTypedName","src":"6422:6:21","type":""}]},{"body":{"nativeSrc":"6507:16:21","nodeType":"YulBlock","src":"6507:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6516:1:21","nodeType":"YulLiteral","src":"6516:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6519:1:21","nodeType":"YulLiteral","src":"6519:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6509:6:21","nodeType":"YulIdentifier","src":"6509:6:21"},"nativeSrc":"6509:12:21","nodeType":"YulFunctionCall","src":"6509:12:21"},"nativeSrc":"6509:12:21","nodeType":"YulExpressionStatement","src":"6509:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6479:6:21","nodeType":"YulIdentifier","src":"6479:6:21"},{"kind":"number","nativeSrc":"6487:18:21","nodeType":"YulLiteral","src":"6487:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6476:2:21","nodeType":"YulIdentifier","src":"6476:2:21"},"nativeSrc":"6476:30:21","nodeType":"YulFunctionCall","src":"6476:30:21"},"nativeSrc":"6473:50:21","nodeType":"YulIf","src":"6473:50:21"},{"nativeSrc":"6532:32:21","nodeType":"YulVariableDeclaration","src":"6532:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6546:9:21","nodeType":"YulIdentifier","src":"6546:9:21"},{"name":"offset","nativeSrc":"6557:6:21","nodeType":"YulIdentifier","src":"6557:6:21"}],"functionName":{"name":"add","nativeSrc":"6542:3:21","nodeType":"YulIdentifier","src":"6542:3:21"},"nativeSrc":"6542:22:21","nodeType":"YulFunctionCall","src":"6542:22:21"},"variables":[{"name":"_1","nativeSrc":"6536:2:21","nodeType":"YulTypedName","src":"6536:2:21","type":""}]},{"body":{"nativeSrc":"6612:16:21","nodeType":"YulBlock","src":"6612:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6621:1:21","nodeType":"YulLiteral","src":"6621:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6624:1:21","nodeType":"YulLiteral","src":"6624:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6614:6:21","nodeType":"YulIdentifier","src":"6614:6:21"},"nativeSrc":"6614:12:21","nodeType":"YulFunctionCall","src":"6614:12:21"},"nativeSrc":"6614:12:21","nodeType":"YulExpressionStatement","src":"6614:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"6591:2:21","nodeType":"YulIdentifier","src":"6591:2:21"},{"kind":"number","nativeSrc":"6595:4:21","nodeType":"YulLiteral","src":"6595:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6587:3:21","nodeType":"YulIdentifier","src":"6587:3:21"},"nativeSrc":"6587:13:21","nodeType":"YulFunctionCall","src":"6587:13:21"},{"name":"dataEnd","nativeSrc":"6602:7:21","nodeType":"YulIdentifier","src":"6602:7:21"}],"functionName":{"name":"slt","nativeSrc":"6583:3:21","nodeType":"YulIdentifier","src":"6583:3:21"},"nativeSrc":"6583:27:21","nodeType":"YulFunctionCall","src":"6583:27:21"}],"functionName":{"name":"iszero","nativeSrc":"6576:6:21","nodeType":"YulIdentifier","src":"6576:6:21"},"nativeSrc":"6576:35:21","nodeType":"YulFunctionCall","src":"6576:35:21"},"nativeSrc":"6573:55:21","nodeType":"YulIf","src":"6573:55:21"},{"nativeSrc":"6637:84:21","nodeType":"YulAssignment","src":"6637:84:21","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"6686:2:21","nodeType":"YulIdentifier","src":"6686:2:21"},{"kind":"number","nativeSrc":"6690:2:21","nodeType":"YulLiteral","src":"6690:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6682:3:21","nodeType":"YulIdentifier","src":"6682:3:21"},"nativeSrc":"6682:11:21","nodeType":"YulFunctionCall","src":"6682:11:21"},{"arguments":[{"name":"_1","nativeSrc":"6708:2:21","nodeType":"YulIdentifier","src":"6708:2:21"}],"functionName":{"name":"calldataload","nativeSrc":"6695:12:21","nodeType":"YulIdentifier","src":"6695:12:21"},"nativeSrc":"6695:16:21","nodeType":"YulFunctionCall","src":"6695:16:21"},{"name":"dataEnd","nativeSrc":"6713:7:21","nodeType":"YulIdentifier","src":"6713:7:21"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"6647:34:21","nodeType":"YulIdentifier","src":"6647:34:21"},"nativeSrc":"6647:74:21","nodeType":"YulFunctionCall","src":"6647:74:21"},"variableNames":[{"name":"value3","nativeSrc":"6637:6:21","nodeType":"YulIdentifier","src":"6637:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"6014:713:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6086:9:21","nodeType":"YulTypedName","src":"6086:9:21","type":""},{"name":"dataEnd","nativeSrc":"6097:7:21","nodeType":"YulTypedName","src":"6097:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6109:6:21","nodeType":"YulTypedName","src":"6109:6:21","type":""},{"name":"value1","nativeSrc":"6117:6:21","nodeType":"YulTypedName","src":"6117:6:21","type":""},{"name":"value2","nativeSrc":"6125:6:21","nodeType":"YulTypedName","src":"6125:6:21","type":""},{"name":"value3","nativeSrc":"6133:6:21","nodeType":"YulTypedName","src":"6133:6:21","type":""}],"src":"6014:713:21"},{"body":{"nativeSrc":"6819:173:21","nodeType":"YulBlock","src":"6819:173:21","statements":[{"body":{"nativeSrc":"6865:16:21","nodeType":"YulBlock","src":"6865:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6874:1:21","nodeType":"YulLiteral","src":"6874:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6877:1:21","nodeType":"YulLiteral","src":"6877:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6867:6:21","nodeType":"YulIdentifier","src":"6867:6:21"},"nativeSrc":"6867:12:21","nodeType":"YulFunctionCall","src":"6867:12:21"},"nativeSrc":"6867:12:21","nodeType":"YulExpressionStatement","src":"6867:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6840:7:21","nodeType":"YulIdentifier","src":"6840:7:21"},{"name":"headStart","nativeSrc":"6849:9:21","nodeType":"YulIdentifier","src":"6849:9:21"}],"functionName":{"name":"sub","nativeSrc":"6836:3:21","nodeType":"YulIdentifier","src":"6836:3:21"},"nativeSrc":"6836:23:21","nodeType":"YulFunctionCall","src":"6836:23:21"},{"kind":"number","nativeSrc":"6861:2:21","nodeType":"YulLiteral","src":"6861:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6832:3:21","nodeType":"YulIdentifier","src":"6832:3:21"},"nativeSrc":"6832:32:21","nodeType":"YulFunctionCall","src":"6832:32:21"},"nativeSrc":"6829:52:21","nodeType":"YulIf","src":"6829:52:21"},{"nativeSrc":"6890:39:21","nodeType":"YulAssignment","src":"6890:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6919:9:21","nodeType":"YulIdentifier","src":"6919:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6900:18:21","nodeType":"YulIdentifier","src":"6900:18:21"},"nativeSrc":"6900:29:21","nodeType":"YulFunctionCall","src":"6900:29:21"},"variableNames":[{"name":"value0","nativeSrc":"6890:6:21","nodeType":"YulIdentifier","src":"6890:6:21"}]},{"nativeSrc":"6938:48:21","nodeType":"YulAssignment","src":"6938:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6971:9:21","nodeType":"YulIdentifier","src":"6971:9:21"},{"kind":"number","nativeSrc":"6982:2:21","nodeType":"YulLiteral","src":"6982:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6967:3:21","nodeType":"YulIdentifier","src":"6967:3:21"},"nativeSrc":"6967:18:21","nodeType":"YulFunctionCall","src":"6967:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6948:18:21","nodeType":"YulIdentifier","src":"6948:18:21"},"nativeSrc":"6948:38:21","nodeType":"YulFunctionCall","src":"6948:38:21"},"variableNames":[{"name":"value1","nativeSrc":"6938:6:21","nodeType":"YulIdentifier","src":"6938:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"6732:260:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6777:9:21","nodeType":"YulTypedName","src":"6777:9:21","type":""},{"name":"dataEnd","nativeSrc":"6788:7:21","nodeType":"YulTypedName","src":"6788:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6800:6:21","nodeType":"YulTypedName","src":"6800:6:21","type":""},{"name":"value1","nativeSrc":"6808:6:21","nodeType":"YulTypedName","src":"6808:6:21","type":""}],"src":"6732:260:21"},{"body":{"nativeSrc":"7052:325:21","nodeType":"YulBlock","src":"7052:325:21","statements":[{"nativeSrc":"7062:22:21","nodeType":"YulAssignment","src":"7062:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"7076:1:21","nodeType":"YulLiteral","src":"7076:1:21","type":"","value":"1"},{"name":"data","nativeSrc":"7079:4:21","nodeType":"YulIdentifier","src":"7079:4:21"}],"functionName":{"name":"shr","nativeSrc":"7072:3:21","nodeType":"YulIdentifier","src":"7072:3:21"},"nativeSrc":"7072:12:21","nodeType":"YulFunctionCall","src":"7072:12:21"},"variableNames":[{"name":"length","nativeSrc":"7062:6:21","nodeType":"YulIdentifier","src":"7062:6:21"}]},{"nativeSrc":"7093:38:21","nodeType":"YulVariableDeclaration","src":"7093:38:21","value":{"arguments":[{"name":"data","nativeSrc":"7123:4:21","nodeType":"YulIdentifier","src":"7123:4:21"},{"kind":"number","nativeSrc":"7129:1:21","nodeType":"YulLiteral","src":"7129:1:21","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"7119:3:21","nodeType":"YulIdentifier","src":"7119:3:21"},"nativeSrc":"7119:12:21","nodeType":"YulFunctionCall","src":"7119:12:21"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"7097:18:21","nodeType":"YulTypedName","src":"7097:18:21","type":""}]},{"body":{"nativeSrc":"7170:31:21","nodeType":"YulBlock","src":"7170:31:21","statements":[{"nativeSrc":"7172:27:21","nodeType":"YulAssignment","src":"7172:27:21","value":{"arguments":[{"name":"length","nativeSrc":"7186:6:21","nodeType":"YulIdentifier","src":"7186:6:21"},{"kind":"number","nativeSrc":"7194:4:21","nodeType":"YulLiteral","src":"7194:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"7182:3:21","nodeType":"YulIdentifier","src":"7182:3:21"},"nativeSrc":"7182:17:21","nodeType":"YulFunctionCall","src":"7182:17:21"},"variableNames":[{"name":"length","nativeSrc":"7172:6:21","nodeType":"YulIdentifier","src":"7172:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"7150:18:21","nodeType":"YulIdentifier","src":"7150:18:21"}],"functionName":{"name":"iszero","nativeSrc":"7143:6:21","nodeType":"YulIdentifier","src":"7143:6:21"},"nativeSrc":"7143:26:21","nodeType":"YulFunctionCall","src":"7143:26:21"},"nativeSrc":"7140:61:21","nodeType":"YulIf","src":"7140:61:21"},{"body":{"nativeSrc":"7260:111:21","nodeType":"YulBlock","src":"7260:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7281:1:21","nodeType":"YulLiteral","src":"7281:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"7288:3:21","nodeType":"YulLiteral","src":"7288:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"7293:10:21","nodeType":"YulLiteral","src":"7293:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"7284:3:21","nodeType":"YulIdentifier","src":"7284:3:21"},"nativeSrc":"7284:20:21","nodeType":"YulFunctionCall","src":"7284:20:21"}],"functionName":{"name":"mstore","nativeSrc":"7274:6:21","nodeType":"YulIdentifier","src":"7274:6:21"},"nativeSrc":"7274:31:21","nodeType":"YulFunctionCall","src":"7274:31:21"},"nativeSrc":"7274:31:21","nodeType":"YulExpressionStatement","src":"7274:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7325:1:21","nodeType":"YulLiteral","src":"7325:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"7328:4:21","nodeType":"YulLiteral","src":"7328:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"7318:6:21","nodeType":"YulIdentifier","src":"7318:6:21"},"nativeSrc":"7318:15:21","nodeType":"YulFunctionCall","src":"7318:15:21"},"nativeSrc":"7318:15:21","nodeType":"YulExpressionStatement","src":"7318:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7353:1:21","nodeType":"YulLiteral","src":"7353:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7356:4:21","nodeType":"YulLiteral","src":"7356:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7346:6:21","nodeType":"YulIdentifier","src":"7346:6:21"},"nativeSrc":"7346:15:21","nodeType":"YulFunctionCall","src":"7346:15:21"},"nativeSrc":"7346:15:21","nodeType":"YulExpressionStatement","src":"7346:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"7216:18:21","nodeType":"YulIdentifier","src":"7216:18:21"},{"arguments":[{"name":"length","nativeSrc":"7239:6:21","nodeType":"YulIdentifier","src":"7239:6:21"},{"kind":"number","nativeSrc":"7247:2:21","nodeType":"YulLiteral","src":"7247:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7236:2:21","nodeType":"YulIdentifier","src":"7236:2:21"},"nativeSrc":"7236:14:21","nodeType":"YulFunctionCall","src":"7236:14:21"}],"functionName":{"name":"eq","nativeSrc":"7213:2:21","nodeType":"YulIdentifier","src":"7213:2:21"},"nativeSrc":"7213:38:21","nodeType":"YulFunctionCall","src":"7213:38:21"},"nativeSrc":"7210:161:21","nodeType":"YulIf","src":"7210:161:21"}]},"name":"extract_byte_array_length","nativeSrc":"6997:380:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7032:4:21","nodeType":"YulTypedName","src":"7032:4:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7041:6:21","nodeType":"YulTypedName","src":"7041:6:21","type":""}],"src":"6997:380:21"},{"body":{"nativeSrc":"7414:95:21","nodeType":"YulBlock","src":"7414:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7431:1:21","nodeType":"YulLiteral","src":"7431:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"7438:3:21","nodeType":"YulLiteral","src":"7438:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"7443:10:21","nodeType":"YulLiteral","src":"7443:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"7434:3:21","nodeType":"YulIdentifier","src":"7434:3:21"},"nativeSrc":"7434:20:21","nodeType":"YulFunctionCall","src":"7434:20:21"}],"functionName":{"name":"mstore","nativeSrc":"7424:6:21","nodeType":"YulIdentifier","src":"7424:6:21"},"nativeSrc":"7424:31:21","nodeType":"YulFunctionCall","src":"7424:31:21"},"nativeSrc":"7424:31:21","nodeType":"YulExpressionStatement","src":"7424:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7471:1:21","nodeType":"YulLiteral","src":"7471:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"7474:4:21","nodeType":"YulLiteral","src":"7474:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7464:6:21","nodeType":"YulIdentifier","src":"7464:6:21"},"nativeSrc":"7464:15:21","nodeType":"YulFunctionCall","src":"7464:15:21"},"nativeSrc":"7464:15:21","nodeType":"YulExpressionStatement","src":"7464:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7495:1:21","nodeType":"YulLiteral","src":"7495:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7498:4:21","nodeType":"YulLiteral","src":"7498:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7488:6:21","nodeType":"YulIdentifier","src":"7488:6:21"},"nativeSrc":"7488:15:21","nodeType":"YulFunctionCall","src":"7488:15:21"},"nativeSrc":"7488:15:21","nodeType":"YulExpressionStatement","src":"7488:15:21"}]},"name":"panic_error_0x11","nativeSrc":"7382:127:21","nodeType":"YulFunctionDefinition","src":"7382:127:21"},{"body":{"nativeSrc":"7563:79:21","nodeType":"YulBlock","src":"7563:79:21","statements":[{"nativeSrc":"7573:17:21","nodeType":"YulAssignment","src":"7573:17:21","value":{"arguments":[{"name":"x","nativeSrc":"7585:1:21","nodeType":"YulIdentifier","src":"7585:1:21"},{"name":"y","nativeSrc":"7588:1:21","nodeType":"YulIdentifier","src":"7588:1:21"}],"functionName":{"name":"sub","nativeSrc":"7581:3:21","nodeType":"YulIdentifier","src":"7581:3:21"},"nativeSrc":"7581:9:21","nodeType":"YulFunctionCall","src":"7581:9:21"},"variableNames":[{"name":"diff","nativeSrc":"7573:4:21","nodeType":"YulIdentifier","src":"7573:4:21"}]},{"body":{"nativeSrc":"7614:22:21","nodeType":"YulBlock","src":"7614:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7616:16:21","nodeType":"YulIdentifier","src":"7616:16:21"},"nativeSrc":"7616:18:21","nodeType":"YulFunctionCall","src":"7616:18:21"},"nativeSrc":"7616:18:21","nodeType":"YulExpressionStatement","src":"7616:18:21"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"7605:4:21","nodeType":"YulIdentifier","src":"7605:4:21"},{"name":"x","nativeSrc":"7611:1:21","nodeType":"YulIdentifier","src":"7611:1:21"}],"functionName":{"name":"gt","nativeSrc":"7602:2:21","nodeType":"YulIdentifier","src":"7602:2:21"},"nativeSrc":"7602:11:21","nodeType":"YulFunctionCall","src":"7602:11:21"},"nativeSrc":"7599:37:21","nodeType":"YulIf","src":"7599:37:21"}]},"name":"checked_sub_t_uint256","nativeSrc":"7514:128:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7545:1:21","nodeType":"YulTypedName","src":"7545:1:21","type":""},{"name":"y","nativeSrc":"7548:1:21","nodeType":"YulTypedName","src":"7548:1:21","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"7554:4:21","nodeType":"YulTypedName","src":"7554:4:21","type":""}],"src":"7514:128:21"},{"body":{"nativeSrc":"7804:214:21","nodeType":"YulBlock","src":"7804:214:21","statements":[{"nativeSrc":"7814:26:21","nodeType":"YulAssignment","src":"7814:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7826:9:21","nodeType":"YulIdentifier","src":"7826:9:21"},{"kind":"number","nativeSrc":"7837:2:21","nodeType":"YulLiteral","src":"7837:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7822:3:21","nodeType":"YulIdentifier","src":"7822:3:21"},"nativeSrc":"7822:18:21","nodeType":"YulFunctionCall","src":"7822:18:21"},"variableNames":[{"name":"tail","nativeSrc":"7814:4:21","nodeType":"YulIdentifier","src":"7814:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7856:9:21","nodeType":"YulIdentifier","src":"7856:9:21"},{"arguments":[{"name":"value0","nativeSrc":"7871:6:21","nodeType":"YulIdentifier","src":"7871:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7887:3:21","nodeType":"YulLiteral","src":"7887:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"7892:1:21","nodeType":"YulLiteral","src":"7892:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7883:3:21","nodeType":"YulIdentifier","src":"7883:3:21"},"nativeSrc":"7883:11:21","nodeType":"YulFunctionCall","src":"7883:11:21"},{"kind":"number","nativeSrc":"7896:1:21","nodeType":"YulLiteral","src":"7896:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7879:3:21","nodeType":"YulIdentifier","src":"7879:3:21"},"nativeSrc":"7879:19:21","nodeType":"YulFunctionCall","src":"7879:19:21"}],"functionName":{"name":"and","nativeSrc":"7867:3:21","nodeType":"YulIdentifier","src":"7867:3:21"},"nativeSrc":"7867:32:21","nodeType":"YulFunctionCall","src":"7867:32:21"}],"functionName":{"name":"mstore","nativeSrc":"7849:6:21","nodeType":"YulIdentifier","src":"7849:6:21"},"nativeSrc":"7849:51:21","nodeType":"YulFunctionCall","src":"7849:51:21"},"nativeSrc":"7849:51:21","nodeType":"YulExpressionStatement","src":"7849:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7920:9:21","nodeType":"YulIdentifier","src":"7920:9:21"},{"kind":"number","nativeSrc":"7931:2:21","nodeType":"YulLiteral","src":"7931:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7916:3:21","nodeType":"YulIdentifier","src":"7916:3:21"},"nativeSrc":"7916:18:21","nodeType":"YulFunctionCall","src":"7916:18:21"},{"name":"value1","nativeSrc":"7936:6:21","nodeType":"YulIdentifier","src":"7936:6:21"}],"functionName":{"name":"mstore","nativeSrc":"7909:6:21","nodeType":"YulIdentifier","src":"7909:6:21"},"nativeSrc":"7909:34:21","nodeType":"YulFunctionCall","src":"7909:34:21"},"nativeSrc":"7909:34:21","nodeType":"YulExpressionStatement","src":"7909:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7963:9:21","nodeType":"YulIdentifier","src":"7963:9:21"},{"kind":"number","nativeSrc":"7974:2:21","nodeType":"YulLiteral","src":"7974:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7959:3:21","nodeType":"YulIdentifier","src":"7959:3:21"},"nativeSrc":"7959:18:21","nodeType":"YulFunctionCall","src":"7959:18:21"},{"arguments":[{"name":"value2","nativeSrc":"7983:6:21","nodeType":"YulIdentifier","src":"7983:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7999:3:21","nodeType":"YulLiteral","src":"7999:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"8004:1:21","nodeType":"YulLiteral","src":"8004:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7995:3:21","nodeType":"YulIdentifier","src":"7995:3:21"},"nativeSrc":"7995:11:21","nodeType":"YulFunctionCall","src":"7995:11:21"},{"kind":"number","nativeSrc":"8008:1:21","nodeType":"YulLiteral","src":"8008:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7991:3:21","nodeType":"YulIdentifier","src":"7991:3:21"},"nativeSrc":"7991:19:21","nodeType":"YulFunctionCall","src":"7991:19:21"}],"functionName":{"name":"and","nativeSrc":"7979:3:21","nodeType":"YulIdentifier","src":"7979:3:21"},"nativeSrc":"7979:32:21","nodeType":"YulFunctionCall","src":"7979:32:21"}],"functionName":{"name":"mstore","nativeSrc":"7952:6:21","nodeType":"YulIdentifier","src":"7952:6:21"},"nativeSrc":"7952:60:21","nodeType":"YulFunctionCall","src":"7952:60:21"},"nativeSrc":"7952:60:21","nodeType":"YulExpressionStatement","src":"7952:60:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"7647:371:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7757:9:21","nodeType":"YulTypedName","src":"7757:9:21","type":""},{"name":"value2","nativeSrc":"7768:6:21","nodeType":"YulTypedName","src":"7768:6:21","type":""},{"name":"value1","nativeSrc":"7776:6:21","nodeType":"YulTypedName","src":"7776:6:21","type":""},{"name":"value0","nativeSrc":"7784:6:21","nodeType":"YulTypedName","src":"7784:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7795:4:21","nodeType":"YulTypedName","src":"7795:4:21","type":""}],"src":"7647:371:21"},{"body":{"nativeSrc":"8070:88:21","nodeType":"YulBlock","src":"8070:88:21","statements":[{"body":{"nativeSrc":"8101:22:21","nodeType":"YulBlock","src":"8101:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8103:16:21","nodeType":"YulIdentifier","src":"8103:16:21"},"nativeSrc":"8103:18:21","nodeType":"YulFunctionCall","src":"8103:18:21"},"nativeSrc":"8103:18:21","nodeType":"YulExpressionStatement","src":"8103:18:21"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"8086:5:21","nodeType":"YulIdentifier","src":"8086:5:21"},{"arguments":[{"kind":"number","nativeSrc":"8097:1:21","nodeType":"YulLiteral","src":"8097:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"8093:3:21","nodeType":"YulIdentifier","src":"8093:3:21"},"nativeSrc":"8093:6:21","nodeType":"YulFunctionCall","src":"8093:6:21"}],"functionName":{"name":"eq","nativeSrc":"8083:2:21","nodeType":"YulIdentifier","src":"8083:2:21"},"nativeSrc":"8083:17:21","nodeType":"YulFunctionCall","src":"8083:17:21"},"nativeSrc":"8080:43:21","nodeType":"YulIf","src":"8080:43:21"},{"nativeSrc":"8132:20:21","nodeType":"YulAssignment","src":"8132:20:21","value":{"arguments":[{"name":"value","nativeSrc":"8143:5:21","nodeType":"YulIdentifier","src":"8143:5:21"},{"kind":"number","nativeSrc":"8150:1:21","nodeType":"YulLiteral","src":"8150:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8139:3:21","nodeType":"YulIdentifier","src":"8139:3:21"},"nativeSrc":"8139:13:21","nodeType":"YulFunctionCall","src":"8139:13:21"},"variableNames":[{"name":"ret","nativeSrc":"8132:3:21","nodeType":"YulIdentifier","src":"8132:3:21"}]}]},"name":"increment_t_uint256","nativeSrc":"8023:135:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8052:5:21","nodeType":"YulTypedName","src":"8052:5:21","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"8062:3:21","nodeType":"YulTypedName","src":"8062:3:21","type":""}],"src":"8023:135:21"},{"body":{"nativeSrc":"8337:110:21","nodeType":"YulBlock","src":"8337:110:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8354:9:21","nodeType":"YulIdentifier","src":"8354:9:21"},{"kind":"number","nativeSrc":"8365:2:21","nodeType":"YulLiteral","src":"8365:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8347:6:21","nodeType":"YulIdentifier","src":"8347:6:21"},"nativeSrc":"8347:21:21","nodeType":"YulFunctionCall","src":"8347:21:21"},"nativeSrc":"8347:21:21","nodeType":"YulExpressionStatement","src":"8347:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8388:9:21","nodeType":"YulIdentifier","src":"8388:9:21"},{"kind":"number","nativeSrc":"8399:2:21","nodeType":"YulLiteral","src":"8399:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8384:3:21","nodeType":"YulIdentifier","src":"8384:3:21"},"nativeSrc":"8384:18:21","nodeType":"YulFunctionCall","src":"8384:18:21"},{"kind":"number","nativeSrc":"8404:1:21","nodeType":"YulLiteral","src":"8404:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"8377:6:21","nodeType":"YulIdentifier","src":"8377:6:21"},"nativeSrc":"8377:29:21","nodeType":"YulFunctionCall","src":"8377:29:21"},"nativeSrc":"8377:29:21","nodeType":"YulExpressionStatement","src":"8377:29:21"},{"nativeSrc":"8415:26:21","nodeType":"YulAssignment","src":"8415:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8427:9:21","nodeType":"YulIdentifier","src":"8427:9:21"},{"kind":"number","nativeSrc":"8438:2:21","nodeType":"YulLiteral","src":"8438:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8423:3:21","nodeType":"YulIdentifier","src":"8423:3:21"},"nativeSrc":"8423:18:21","nodeType":"YulFunctionCall","src":"8423:18:21"},"variableNames":[{"name":"tail","nativeSrc":"8415:4:21","nodeType":"YulIdentifier","src":"8415:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8163:284:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8314:9:21","nodeType":"YulTypedName","src":"8314:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8328:4:21","nodeType":"YulTypedName","src":"8328:4:21","type":""}],"src":"8163:284:21"},{"body":{"nativeSrc":"8639:309:21","nodeType":"YulBlock","src":"8639:309:21","statements":[{"nativeSrc":"8649:27:21","nodeType":"YulVariableDeclaration","src":"8649:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"8669:6:21","nodeType":"YulIdentifier","src":"8669:6:21"}],"functionName":{"name":"mload","nativeSrc":"8663:5:21","nodeType":"YulIdentifier","src":"8663:5:21"},"nativeSrc":"8663:13:21","nodeType":"YulFunctionCall","src":"8663:13:21"},"variables":[{"name":"length","nativeSrc":"8653:6:21","nodeType":"YulTypedName","src":"8653:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"8724:6:21","nodeType":"YulIdentifier","src":"8724:6:21"},{"kind":"number","nativeSrc":"8732:4:21","nodeType":"YulLiteral","src":"8732:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8720:3:21","nodeType":"YulIdentifier","src":"8720:3:21"},"nativeSrc":"8720:17:21","nodeType":"YulFunctionCall","src":"8720:17:21"},{"name":"pos","nativeSrc":"8739:3:21","nodeType":"YulIdentifier","src":"8739:3:21"},{"name":"length","nativeSrc":"8744:6:21","nodeType":"YulIdentifier","src":"8744:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"8685:34:21","nodeType":"YulIdentifier","src":"8685:34:21"},"nativeSrc":"8685:66:21","nodeType":"YulFunctionCall","src":"8685:66:21"},"nativeSrc":"8685:66:21","nodeType":"YulExpressionStatement","src":"8685:66:21"},{"nativeSrc":"8760:29:21","nodeType":"YulVariableDeclaration","src":"8760:29:21","value":{"arguments":[{"name":"pos","nativeSrc":"8777:3:21","nodeType":"YulIdentifier","src":"8777:3:21"},{"name":"length","nativeSrc":"8782:6:21","nodeType":"YulIdentifier","src":"8782:6:21"}],"functionName":{"name":"add","nativeSrc":"8773:3:21","nodeType":"YulIdentifier","src":"8773:3:21"},"nativeSrc":"8773:16:21","nodeType":"YulFunctionCall","src":"8773:16:21"},"variables":[{"name":"end_1","nativeSrc":"8764:5:21","nodeType":"YulTypedName","src":"8764:5:21","type":""}]},{"nativeSrc":"8798:29:21","nodeType":"YulVariableDeclaration","src":"8798:29:21","value":{"arguments":[{"name":"value1","nativeSrc":"8820:6:21","nodeType":"YulIdentifier","src":"8820:6:21"}],"functionName":{"name":"mload","nativeSrc":"8814:5:21","nodeType":"YulIdentifier","src":"8814:5:21"},"nativeSrc":"8814:13:21","nodeType":"YulFunctionCall","src":"8814:13:21"},"variables":[{"name":"length_1","nativeSrc":"8802:8:21","nodeType":"YulTypedName","src":"8802:8:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nativeSrc":"8875:6:21","nodeType":"YulIdentifier","src":"8875:6:21"},{"kind":"number","nativeSrc":"8883:4:21","nodeType":"YulLiteral","src":"8883:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8871:3:21","nodeType":"YulIdentifier","src":"8871:3:21"},"nativeSrc":"8871:17:21","nodeType":"YulFunctionCall","src":"8871:17:21"},{"name":"end_1","nativeSrc":"8890:5:21","nodeType":"YulIdentifier","src":"8890:5:21"},{"name":"length_1","nativeSrc":"8897:8:21","nodeType":"YulIdentifier","src":"8897:8:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"8836:34:21","nodeType":"YulIdentifier","src":"8836:34:21"},"nativeSrc":"8836:70:21","nodeType":"YulFunctionCall","src":"8836:70:21"},"nativeSrc":"8836:70:21","nodeType":"YulExpressionStatement","src":"8836:70:21"},{"nativeSrc":"8915:27:21","nodeType":"YulAssignment","src":"8915:27:21","value":{"arguments":[{"name":"end_1","nativeSrc":"8926:5:21","nodeType":"YulIdentifier","src":"8926:5:21"},{"name":"length_1","nativeSrc":"8933:8:21","nodeType":"YulIdentifier","src":"8933:8:21"}],"functionName":{"name":"add","nativeSrc":"8922:3:21","nodeType":"YulIdentifier","src":"8922:3:21"},"nativeSrc":"8922:20:21","nodeType":"YulFunctionCall","src":"8922:20:21"},"variableNames":[{"name":"end","nativeSrc":"8915:3:21","nodeType":"YulIdentifier","src":"8915:3:21"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"8452:496:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8607:3:21","nodeType":"YulTypedName","src":"8607:3:21","type":""},{"name":"value1","nativeSrc":"8612:6:21","nodeType":"YulTypedName","src":"8612:6:21","type":""},{"name":"value0","nativeSrc":"8620:6:21","nodeType":"YulTypedName","src":"8620:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8631:3:21","nodeType":"YulTypedName","src":"8631:3:21","type":""}],"src":"8452:496:21"},{"body":{"nativeSrc":"9009:65:21","nodeType":"YulBlock","src":"9009:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9026:1:21","nodeType":"YulLiteral","src":"9026:1:21","type":"","value":"0"},{"name":"ptr","nativeSrc":"9029:3:21","nodeType":"YulIdentifier","src":"9029:3:21"}],"functionName":{"name":"mstore","nativeSrc":"9019:6:21","nodeType":"YulIdentifier","src":"9019:6:21"},"nativeSrc":"9019:14:21","nodeType":"YulFunctionCall","src":"9019:14:21"},"nativeSrc":"9019:14:21","nodeType":"YulExpressionStatement","src":"9019:14:21"},{"nativeSrc":"9042:26:21","nodeType":"YulAssignment","src":"9042:26:21","value":{"arguments":[{"kind":"number","nativeSrc":"9060:1:21","nodeType":"YulLiteral","src":"9060:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9063:4:21","nodeType":"YulLiteral","src":"9063:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"9050:9:21","nodeType":"YulIdentifier","src":"9050:9:21"},"nativeSrc":"9050:18:21","nodeType":"YulFunctionCall","src":"9050:18:21"},"variableNames":[{"name":"data","nativeSrc":"9042:4:21","nodeType":"YulIdentifier","src":"9042:4:21"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"8953:121:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"8992:3:21","nodeType":"YulTypedName","src":"8992:3:21","type":""}],"returnVariables":[{"name":"data","nativeSrc":"9000:4:21","nodeType":"YulTypedName","src":"9000:4:21","type":""}],"src":"8953:121:21"},{"body":{"nativeSrc":"9160:437:21","nodeType":"YulBlock","src":"9160:437:21","statements":[{"body":{"nativeSrc":"9193:398:21","nodeType":"YulBlock","src":"9193:398:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9214:1:21","nodeType":"YulLiteral","src":"9214:1:21","type":"","value":"0"},{"name":"array","nativeSrc":"9217:5:21","nodeType":"YulIdentifier","src":"9217:5:21"}],"functionName":{"name":"mstore","nativeSrc":"9207:6:21","nodeType":"YulIdentifier","src":"9207:6:21"},"nativeSrc":"9207:16:21","nodeType":"YulFunctionCall","src":"9207:16:21"},"nativeSrc":"9207:16:21","nodeType":"YulExpressionStatement","src":"9207:16:21"},{"nativeSrc":"9236:30:21","nodeType":"YulVariableDeclaration","src":"9236:30:21","value":{"arguments":[{"kind":"number","nativeSrc":"9258:1:21","nodeType":"YulLiteral","src":"9258:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9261:4:21","nodeType":"YulLiteral","src":"9261:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"9248:9:21","nodeType":"YulIdentifier","src":"9248:9:21"},"nativeSrc":"9248:18:21","nodeType":"YulFunctionCall","src":"9248:18:21"},"variables":[{"name":"data","nativeSrc":"9240:4:21","nodeType":"YulTypedName","src":"9240:4:21","type":""}]},{"nativeSrc":"9279:57:21","nodeType":"YulVariableDeclaration","src":"9279:57:21","value":{"arguments":[{"name":"data","nativeSrc":"9302:4:21","nodeType":"YulIdentifier","src":"9302:4:21"},{"arguments":[{"kind":"number","nativeSrc":"9312:1:21","nodeType":"YulLiteral","src":"9312:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"9319:10:21","nodeType":"YulIdentifier","src":"9319:10:21"},{"kind":"number","nativeSrc":"9331:2:21","nodeType":"YulLiteral","src":"9331:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"9315:3:21","nodeType":"YulIdentifier","src":"9315:3:21"},"nativeSrc":"9315:19:21","nodeType":"YulFunctionCall","src":"9315:19:21"}],"functionName":{"name":"shr","nativeSrc":"9308:3:21","nodeType":"YulIdentifier","src":"9308:3:21"},"nativeSrc":"9308:27:21","nodeType":"YulFunctionCall","src":"9308:27:21"}],"functionName":{"name":"add","nativeSrc":"9298:3:21","nodeType":"YulIdentifier","src":"9298:3:21"},"nativeSrc":"9298:38:21","nodeType":"YulFunctionCall","src":"9298:38:21"},"variables":[{"name":"deleteStart","nativeSrc":"9283:11:21","nodeType":"YulTypedName","src":"9283:11:21","type":""}]},{"body":{"nativeSrc":"9373:23:21","nodeType":"YulBlock","src":"9373:23:21","statements":[{"nativeSrc":"9375:19:21","nodeType":"YulAssignment","src":"9375:19:21","value":{"name":"data","nativeSrc":"9390:4:21","nodeType":"YulIdentifier","src":"9390:4:21"},"variableNames":[{"name":"deleteStart","nativeSrc":"9375:11:21","nodeType":"YulIdentifier","src":"9375:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"9355:10:21","nodeType":"YulIdentifier","src":"9355:10:21"},{"kind":"number","nativeSrc":"9367:4:21","nodeType":"YulLiteral","src":"9367:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"9352:2:21","nodeType":"YulIdentifier","src":"9352:2:21"},"nativeSrc":"9352:20:21","nodeType":"YulFunctionCall","src":"9352:20:21"},"nativeSrc":"9349:47:21","nodeType":"YulIf","src":"9349:47:21"},{"nativeSrc":"9409:41:21","nodeType":"YulVariableDeclaration","src":"9409:41:21","value":{"arguments":[{"name":"data","nativeSrc":"9423:4:21","nodeType":"YulIdentifier","src":"9423:4:21"},{"arguments":[{"kind":"number","nativeSrc":"9433:1:21","nodeType":"YulLiteral","src":"9433:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"9440:3:21","nodeType":"YulIdentifier","src":"9440:3:21"},{"kind":"number","nativeSrc":"9445:2:21","nodeType":"YulLiteral","src":"9445:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"9436:3:21","nodeType":"YulIdentifier","src":"9436:3:21"},"nativeSrc":"9436:12:21","nodeType":"YulFunctionCall","src":"9436:12:21"}],"functionName":{"name":"shr","nativeSrc":"9429:3:21","nodeType":"YulIdentifier","src":"9429:3:21"},"nativeSrc":"9429:20:21","nodeType":"YulFunctionCall","src":"9429:20:21"}],"functionName":{"name":"add","nativeSrc":"9419:3:21","nodeType":"YulIdentifier","src":"9419:3:21"},"nativeSrc":"9419:31:21","nodeType":"YulFunctionCall","src":"9419:31:21"},"variables":[{"name":"_1","nativeSrc":"9413:2:21","nodeType":"YulTypedName","src":"9413:2:21","type":""}]},{"nativeSrc":"9463:24:21","nodeType":"YulVariableDeclaration","src":"9463:24:21","value":{"name":"deleteStart","nativeSrc":"9476:11:21","nodeType":"YulIdentifier","src":"9476:11:21"},"variables":[{"name":"start","nativeSrc":"9467:5:21","nodeType":"YulTypedName","src":"9467:5:21","type":""}]},{"body":{"nativeSrc":"9561:20:21","nodeType":"YulBlock","src":"9561:20:21","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"9570:5:21","nodeType":"YulIdentifier","src":"9570:5:21"},{"kind":"number","nativeSrc":"9577:1:21","nodeType":"YulLiteral","src":"9577:1:21","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"9563:6:21","nodeType":"YulIdentifier","src":"9563:6:21"},"nativeSrc":"9563:16:21","nodeType":"YulFunctionCall","src":"9563:16:21"},"nativeSrc":"9563:16:21","nodeType":"YulExpressionStatement","src":"9563:16:21"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"9511:5:21","nodeType":"YulIdentifier","src":"9511:5:21"},{"name":"_1","nativeSrc":"9518:2:21","nodeType":"YulIdentifier","src":"9518:2:21"}],"functionName":{"name":"lt","nativeSrc":"9508:2:21","nodeType":"YulIdentifier","src":"9508:2:21"},"nativeSrc":"9508:13:21","nodeType":"YulFunctionCall","src":"9508:13:21"},"nativeSrc":"9500:81:21","nodeType":"YulForLoop","post":{"nativeSrc":"9522:26:21","nodeType":"YulBlock","src":"9522:26:21","statements":[{"nativeSrc":"9524:22:21","nodeType":"YulAssignment","src":"9524:22:21","value":{"arguments":[{"name":"start","nativeSrc":"9537:5:21","nodeType":"YulIdentifier","src":"9537:5:21"},{"kind":"number","nativeSrc":"9544:1:21","nodeType":"YulLiteral","src":"9544:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9533:3:21","nodeType":"YulIdentifier","src":"9533:3:21"},"nativeSrc":"9533:13:21","nodeType":"YulFunctionCall","src":"9533:13:21"},"variableNames":[{"name":"start","nativeSrc":"9524:5:21","nodeType":"YulIdentifier","src":"9524:5:21"}]}]},"pre":{"nativeSrc":"9504:3:21","nodeType":"YulBlock","src":"9504:3:21","statements":[]},"src":"9500:81:21"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"9176:3:21","nodeType":"YulIdentifier","src":"9176:3:21"},{"kind":"number","nativeSrc":"9181:2:21","nodeType":"YulLiteral","src":"9181:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"9173:2:21","nodeType":"YulIdentifier","src":"9173:2:21"},"nativeSrc":"9173:11:21","nodeType":"YulFunctionCall","src":"9173:11:21"},"nativeSrc":"9170:421:21","nodeType":"YulIf","src":"9170:421:21"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"9079:518:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"9132:5:21","nodeType":"YulTypedName","src":"9132:5:21","type":""},{"name":"len","nativeSrc":"9139:3:21","nodeType":"YulTypedName","src":"9139:3:21","type":""},{"name":"startIndex","nativeSrc":"9144:10:21","nodeType":"YulTypedName","src":"9144:10:21","type":""}],"src":"9079:518:21"},{"body":{"nativeSrc":"9687:81:21","nodeType":"YulBlock","src":"9687:81:21","statements":[{"nativeSrc":"9697:65:21","nodeType":"YulAssignment","src":"9697:65:21","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"9712:4:21","nodeType":"YulIdentifier","src":"9712:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9730:1:21","nodeType":"YulLiteral","src":"9730:1:21","type":"","value":"3"},{"name":"len","nativeSrc":"9733:3:21","nodeType":"YulIdentifier","src":"9733:3:21"}],"functionName":{"name":"shl","nativeSrc":"9726:3:21","nodeType":"YulIdentifier","src":"9726:3:21"},"nativeSrc":"9726:11:21","nodeType":"YulFunctionCall","src":"9726:11:21"},{"arguments":[{"kind":"number","nativeSrc":"9743:1:21","nodeType":"YulLiteral","src":"9743:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"9739:3:21","nodeType":"YulIdentifier","src":"9739:3:21"},"nativeSrc":"9739:6:21","nodeType":"YulFunctionCall","src":"9739:6:21"}],"functionName":{"name":"shr","nativeSrc":"9722:3:21","nodeType":"YulIdentifier","src":"9722:3:21"},"nativeSrc":"9722:24:21","nodeType":"YulFunctionCall","src":"9722:24:21"}],"functionName":{"name":"not","nativeSrc":"9718:3:21","nodeType":"YulIdentifier","src":"9718:3:21"},"nativeSrc":"9718:29:21","nodeType":"YulFunctionCall","src":"9718:29:21"}],"functionName":{"name":"and","nativeSrc":"9708:3:21","nodeType":"YulIdentifier","src":"9708:3:21"},"nativeSrc":"9708:40:21","nodeType":"YulFunctionCall","src":"9708:40:21"},{"arguments":[{"kind":"number","nativeSrc":"9754:1:21","nodeType":"YulLiteral","src":"9754:1:21","type":"","value":"1"},{"name":"len","nativeSrc":"9757:3:21","nodeType":"YulIdentifier","src":"9757:3:21"}],"functionName":{"name":"shl","nativeSrc":"9750:3:21","nodeType":"YulIdentifier","src":"9750:3:21"},"nativeSrc":"9750:11:21","nodeType":"YulFunctionCall","src":"9750:11:21"}],"functionName":{"name":"or","nativeSrc":"9705:2:21","nodeType":"YulIdentifier","src":"9705:2:21"},"nativeSrc":"9705:57:21","nodeType":"YulFunctionCall","src":"9705:57:21"},"variableNames":[{"name":"used","nativeSrc":"9697:4:21","nodeType":"YulIdentifier","src":"9697:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"9602:166:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"9664:4:21","nodeType":"YulTypedName","src":"9664:4:21","type":""},{"name":"len","nativeSrc":"9670:3:21","nodeType":"YulTypedName","src":"9670:3:21","type":""}],"returnVariables":[{"name":"used","nativeSrc":"9678:4:21","nodeType":"YulTypedName","src":"9678:4:21","type":""}],"src":"9602:166:21"},{"body":{"nativeSrc":"9869:1203:21","nodeType":"YulBlock","src":"9869:1203:21","statements":[{"nativeSrc":"9879:24:21","nodeType":"YulVariableDeclaration","src":"9879:24:21","value":{"arguments":[{"name":"src","nativeSrc":"9899:3:21","nodeType":"YulIdentifier","src":"9899:3:21"}],"functionName":{"name":"mload","nativeSrc":"9893:5:21","nodeType":"YulIdentifier","src":"9893:5:21"},"nativeSrc":"9893:10:21","nodeType":"YulFunctionCall","src":"9893:10:21"},"variables":[{"name":"newLen","nativeSrc":"9883:6:21","nodeType":"YulTypedName","src":"9883:6:21","type":""}]},{"body":{"nativeSrc":"9946:22:21","nodeType":"YulBlock","src":"9946:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"9948:16:21","nodeType":"YulIdentifier","src":"9948:16:21"},"nativeSrc":"9948:18:21","nodeType":"YulFunctionCall","src":"9948:18:21"},"nativeSrc":"9948:18:21","nodeType":"YulExpressionStatement","src":"9948:18:21"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"9918:6:21","nodeType":"YulIdentifier","src":"9918:6:21"},{"kind":"number","nativeSrc":"9926:18:21","nodeType":"YulLiteral","src":"9926:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9915:2:21","nodeType":"YulIdentifier","src":"9915:2:21"},"nativeSrc":"9915:30:21","nodeType":"YulFunctionCall","src":"9915:30:21"},"nativeSrc":"9912:56:21","nodeType":"YulIf","src":"9912:56:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"10021:4:21","nodeType":"YulIdentifier","src":"10021:4:21"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"10059:4:21","nodeType":"YulIdentifier","src":"10059:4:21"}],"functionName":{"name":"sload","nativeSrc":"10053:5:21","nodeType":"YulIdentifier","src":"10053:5:21"},"nativeSrc":"10053:11:21","nodeType":"YulFunctionCall","src":"10053:11:21"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"10027:25:21","nodeType":"YulIdentifier","src":"10027:25:21"},"nativeSrc":"10027:38:21","nodeType":"YulFunctionCall","src":"10027:38:21"},{"name":"newLen","nativeSrc":"10067:6:21","nodeType":"YulIdentifier","src":"10067:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"9977:43:21","nodeType":"YulIdentifier","src":"9977:43:21"},"nativeSrc":"9977:97:21","nodeType":"YulFunctionCall","src":"9977:97:21"},"nativeSrc":"9977:97:21","nodeType":"YulExpressionStatement","src":"9977:97:21"},{"nativeSrc":"10083:18:21","nodeType":"YulVariableDeclaration","src":"10083:18:21","value":{"kind":"number","nativeSrc":"10100:1:21","nodeType":"YulLiteral","src":"10100:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"10087:9:21","nodeType":"YulTypedName","src":"10087:9:21","type":""}]},{"nativeSrc":"10110:17:21","nodeType":"YulAssignment","src":"10110:17:21","value":{"kind":"number","nativeSrc":"10123:4:21","nodeType":"YulLiteral","src":"10123:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"10110:9:21","nodeType":"YulIdentifier","src":"10110:9:21"}]},{"cases":[{"body":{"nativeSrc":"10173:642:21","nodeType":"YulBlock","src":"10173:642:21","statements":[{"nativeSrc":"10187:35:21","nodeType":"YulVariableDeclaration","src":"10187:35:21","value":{"arguments":[{"name":"newLen","nativeSrc":"10206:6:21","nodeType":"YulIdentifier","src":"10206:6:21"},{"arguments":[{"kind":"number","nativeSrc":"10218:2:21","nodeType":"YulLiteral","src":"10218:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"10214:3:21","nodeType":"YulIdentifier","src":"10214:3:21"},"nativeSrc":"10214:7:21","nodeType":"YulFunctionCall","src":"10214:7:21"}],"functionName":{"name":"and","nativeSrc":"10202:3:21","nodeType":"YulIdentifier","src":"10202:3:21"},"nativeSrc":"10202:20:21","nodeType":"YulFunctionCall","src":"10202:20:21"},"variables":[{"name":"loopEnd","nativeSrc":"10191:7:21","nodeType":"YulTypedName","src":"10191:7:21","type":""}]},{"nativeSrc":"10235:49:21","nodeType":"YulVariableDeclaration","src":"10235:49:21","value":{"arguments":[{"name":"slot","nativeSrc":"10279:4:21","nodeType":"YulIdentifier","src":"10279:4:21"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"10249:29:21","nodeType":"YulIdentifier","src":"10249:29:21"},"nativeSrc":"10249:35:21","nodeType":"YulFunctionCall","src":"10249:35:21"},"variables":[{"name":"dstPtr","nativeSrc":"10239:6:21","nodeType":"YulTypedName","src":"10239:6:21","type":""}]},{"nativeSrc":"10297:10:21","nodeType":"YulVariableDeclaration","src":"10297:10:21","value":{"kind":"number","nativeSrc":"10306:1:21","nodeType":"YulLiteral","src":"10306:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"10301:1:21","nodeType":"YulTypedName","src":"10301:1:21","type":""}]},{"body":{"nativeSrc":"10377:165:21","nodeType":"YulBlock","src":"10377:165:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"10402:6:21","nodeType":"YulIdentifier","src":"10402:6:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"10420:3:21","nodeType":"YulIdentifier","src":"10420:3:21"},{"name":"srcOffset","nativeSrc":"10425:9:21","nodeType":"YulIdentifier","src":"10425:9:21"}],"functionName":{"name":"add","nativeSrc":"10416:3:21","nodeType":"YulIdentifier","src":"10416:3:21"},"nativeSrc":"10416:19:21","nodeType":"YulFunctionCall","src":"10416:19:21"}],"functionName":{"name":"mload","nativeSrc":"10410:5:21","nodeType":"YulIdentifier","src":"10410:5:21"},"nativeSrc":"10410:26:21","nodeType":"YulFunctionCall","src":"10410:26:21"}],"functionName":{"name":"sstore","nativeSrc":"10395:6:21","nodeType":"YulIdentifier","src":"10395:6:21"},"nativeSrc":"10395:42:21","nodeType":"YulFunctionCall","src":"10395:42:21"},"nativeSrc":"10395:42:21","nodeType":"YulExpressionStatement","src":"10395:42:21"},{"nativeSrc":"10454:24:21","nodeType":"YulAssignment","src":"10454:24:21","value":{"arguments":[{"name":"dstPtr","nativeSrc":"10468:6:21","nodeType":"YulIdentifier","src":"10468:6:21"},{"kind":"number","nativeSrc":"10476:1:21","nodeType":"YulLiteral","src":"10476:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"10464:3:21","nodeType":"YulIdentifier","src":"10464:3:21"},"nativeSrc":"10464:14:21","nodeType":"YulFunctionCall","src":"10464:14:21"},"variableNames":[{"name":"dstPtr","nativeSrc":"10454:6:21","nodeType":"YulIdentifier","src":"10454:6:21"}]},{"nativeSrc":"10495:33:21","nodeType":"YulAssignment","src":"10495:33:21","value":{"arguments":[{"name":"srcOffset","nativeSrc":"10512:9:21","nodeType":"YulIdentifier","src":"10512:9:21"},{"kind":"number","nativeSrc":"10523:4:21","nodeType":"YulLiteral","src":"10523:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10508:3:21","nodeType":"YulIdentifier","src":"10508:3:21"},"nativeSrc":"10508:20:21","nodeType":"YulFunctionCall","src":"10508:20:21"},"variableNames":[{"name":"srcOffset","nativeSrc":"10495:9:21","nodeType":"YulIdentifier","src":"10495:9:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"10331:1:21","nodeType":"YulIdentifier","src":"10331:1:21"},{"name":"loopEnd","nativeSrc":"10334:7:21","nodeType":"YulIdentifier","src":"10334:7:21"}],"functionName":{"name":"lt","nativeSrc":"10328:2:21","nodeType":"YulIdentifier","src":"10328:2:21"},"nativeSrc":"10328:14:21","nodeType":"YulFunctionCall","src":"10328:14:21"},"nativeSrc":"10320:222:21","nodeType":"YulForLoop","post":{"nativeSrc":"10343:21:21","nodeType":"YulBlock","src":"10343:21:21","statements":[{"nativeSrc":"10345:17:21","nodeType":"YulAssignment","src":"10345:17:21","value":{"arguments":[{"name":"i","nativeSrc":"10354:1:21","nodeType":"YulIdentifier","src":"10354:1:21"},{"kind":"number","nativeSrc":"10357:4:21","nodeType":"YulLiteral","src":"10357:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10350:3:21","nodeType":"YulIdentifier","src":"10350:3:21"},"nativeSrc":"10350:12:21","nodeType":"YulFunctionCall","src":"10350:12:21"},"variableNames":[{"name":"i","nativeSrc":"10345:1:21","nodeType":"YulIdentifier","src":"10345:1:21"}]}]},"pre":{"nativeSrc":"10324:3:21","nodeType":"YulBlock","src":"10324:3:21","statements":[]},"src":"10320:222:21"},{"body":{"nativeSrc":"10590:166:21","nodeType":"YulBlock","src":"10590:166:21","statements":[{"nativeSrc":"10608:43:21","nodeType":"YulVariableDeclaration","src":"10608:43:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"10635:3:21","nodeType":"YulIdentifier","src":"10635:3:21"},{"name":"srcOffset","nativeSrc":"10640:9:21","nodeType":"YulIdentifier","src":"10640:9:21"}],"functionName":{"name":"add","nativeSrc":"10631:3:21","nodeType":"YulIdentifier","src":"10631:3:21"},"nativeSrc":"10631:19:21","nodeType":"YulFunctionCall","src":"10631:19:21"}],"functionName":{"name":"mload","nativeSrc":"10625:5:21","nodeType":"YulIdentifier","src":"10625:5:21"},"nativeSrc":"10625:26:21","nodeType":"YulFunctionCall","src":"10625:26:21"},"variables":[{"name":"lastValue","nativeSrc":"10612:9:21","nodeType":"YulTypedName","src":"10612:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"10675:6:21","nodeType":"YulIdentifier","src":"10675:6:21"},{"arguments":[{"name":"lastValue","nativeSrc":"10687:9:21","nodeType":"YulIdentifier","src":"10687:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10714:1:21","nodeType":"YulLiteral","src":"10714:1:21","type":"","value":"3"},{"name":"newLen","nativeSrc":"10717:6:21","nodeType":"YulIdentifier","src":"10717:6:21"}],"functionName":{"name":"shl","nativeSrc":"10710:3:21","nodeType":"YulIdentifier","src":"10710:3:21"},"nativeSrc":"10710:14:21","nodeType":"YulFunctionCall","src":"10710:14:21"},{"kind":"number","nativeSrc":"10726:3:21","nodeType":"YulLiteral","src":"10726:3:21","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"10706:3:21","nodeType":"YulIdentifier","src":"10706:3:21"},"nativeSrc":"10706:24:21","nodeType":"YulFunctionCall","src":"10706:24:21"},{"arguments":[{"kind":"number","nativeSrc":"10736:1:21","nodeType":"YulLiteral","src":"10736:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"10732:3:21","nodeType":"YulIdentifier","src":"10732:3:21"},"nativeSrc":"10732:6:21","nodeType":"YulFunctionCall","src":"10732:6:21"}],"functionName":{"name":"shr","nativeSrc":"10702:3:21","nodeType":"YulIdentifier","src":"10702:3:21"},"nativeSrc":"10702:37:21","nodeType":"YulFunctionCall","src":"10702:37:21"}],"functionName":{"name":"not","nativeSrc":"10698:3:21","nodeType":"YulIdentifier","src":"10698:3:21"},"nativeSrc":"10698:42:21","nodeType":"YulFunctionCall","src":"10698:42:21"}],"functionName":{"name":"and","nativeSrc":"10683:3:21","nodeType":"YulIdentifier","src":"10683:3:21"},"nativeSrc":"10683:58:21","nodeType":"YulFunctionCall","src":"10683:58:21"}],"functionName":{"name":"sstore","nativeSrc":"10668:6:21","nodeType":"YulIdentifier","src":"10668:6:21"},"nativeSrc":"10668:74:21","nodeType":"YulFunctionCall","src":"10668:74:21"},"nativeSrc":"10668:74:21","nodeType":"YulExpressionStatement","src":"10668:74:21"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"10561:7:21","nodeType":"YulIdentifier","src":"10561:7:21"},{"name":"newLen","nativeSrc":"10570:6:21","nodeType":"YulIdentifier","src":"10570:6:21"}],"functionName":{"name":"lt","nativeSrc":"10558:2:21","nodeType":"YulIdentifier","src":"10558:2:21"},"nativeSrc":"10558:19:21","nodeType":"YulFunctionCall","src":"10558:19:21"},"nativeSrc":"10555:201:21","nodeType":"YulIf","src":"10555:201:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"10776:4:21","nodeType":"YulIdentifier","src":"10776:4:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10790:1:21","nodeType":"YulLiteral","src":"10790:1:21","type":"","value":"1"},{"name":"newLen","nativeSrc":"10793:6:21","nodeType":"YulIdentifier","src":"10793:6:21"}],"functionName":{"name":"shl","nativeSrc":"10786:3:21","nodeType":"YulIdentifier","src":"10786:3:21"},"nativeSrc":"10786:14:21","nodeType":"YulFunctionCall","src":"10786:14:21"},{"kind":"number","nativeSrc":"10802:1:21","nodeType":"YulLiteral","src":"10802:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"10782:3:21","nodeType":"YulIdentifier","src":"10782:3:21"},"nativeSrc":"10782:22:21","nodeType":"YulFunctionCall","src":"10782:22:21"}],"functionName":{"name":"sstore","nativeSrc":"10769:6:21","nodeType":"YulIdentifier","src":"10769:6:21"},"nativeSrc":"10769:36:21","nodeType":"YulFunctionCall","src":"10769:36:21"},"nativeSrc":"10769:36:21","nodeType":"YulExpressionStatement","src":"10769:36:21"}]},"nativeSrc":"10166:649:21","nodeType":"YulCase","src":"10166:649:21","value":{"kind":"number","nativeSrc":"10171:1:21","nodeType":"YulLiteral","src":"10171:1:21","type":"","value":"1"}},{"body":{"nativeSrc":"10832:234:21","nodeType":"YulBlock","src":"10832:234:21","statements":[{"nativeSrc":"10846:14:21","nodeType":"YulVariableDeclaration","src":"10846:14:21","value":{"kind":"number","nativeSrc":"10859:1:21","nodeType":"YulLiteral","src":"10859:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"10850:5:21","nodeType":"YulTypedName","src":"10850:5:21","type":""}]},{"body":{"nativeSrc":"10895:67:21","nodeType":"YulBlock","src":"10895:67:21","statements":[{"nativeSrc":"10913:35:21","nodeType":"YulAssignment","src":"10913:35:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"10932:3:21","nodeType":"YulIdentifier","src":"10932:3:21"},{"name":"srcOffset","nativeSrc":"10937:9:21","nodeType":"YulIdentifier","src":"10937:9:21"}],"functionName":{"name":"add","nativeSrc":"10928:3:21","nodeType":"YulIdentifier","src":"10928:3:21"},"nativeSrc":"10928:19:21","nodeType":"YulFunctionCall","src":"10928:19:21"}],"functionName":{"name":"mload","nativeSrc":"10922:5:21","nodeType":"YulIdentifier","src":"10922:5:21"},"nativeSrc":"10922:26:21","nodeType":"YulFunctionCall","src":"10922:26:21"},"variableNames":[{"name":"value","nativeSrc":"10913:5:21","nodeType":"YulIdentifier","src":"10913:5:21"}]}]},"condition":{"name":"newLen","nativeSrc":"10876:6:21","nodeType":"YulIdentifier","src":"10876:6:21"},"nativeSrc":"10873:89:21","nodeType":"YulIf","src":"10873:89:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"10982:4:21","nodeType":"YulIdentifier","src":"10982:4:21"},{"arguments":[{"name":"value","nativeSrc":"11041:5:21","nodeType":"YulIdentifier","src":"11041:5:21"},{"name":"newLen","nativeSrc":"11048:6:21","nodeType":"YulIdentifier","src":"11048:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"10988:52:21","nodeType":"YulIdentifier","src":"10988:52:21"},"nativeSrc":"10988:67:21","nodeType":"YulFunctionCall","src":"10988:67:21"}],"functionName":{"name":"sstore","nativeSrc":"10975:6:21","nodeType":"YulIdentifier","src":"10975:6:21"},"nativeSrc":"10975:81:21","nodeType":"YulFunctionCall","src":"10975:81:21"},"nativeSrc":"10975:81:21","nodeType":"YulExpressionStatement","src":"10975:81:21"}]},"nativeSrc":"10824:242:21","nodeType":"YulCase","src":"10824:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"10146:6:21","nodeType":"YulIdentifier","src":"10146:6:21"},{"kind":"number","nativeSrc":"10154:2:21","nodeType":"YulLiteral","src":"10154:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"10143:2:21","nodeType":"YulIdentifier","src":"10143:2:21"},"nativeSrc":"10143:14:21","nodeType":"YulFunctionCall","src":"10143:14:21"},"nativeSrc":"10136:930:21","nodeType":"YulSwitch","src":"10136:930:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"9773:1299:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"9854:4:21","nodeType":"YulTypedName","src":"9854:4:21","type":""},{"name":"src","nativeSrc":"9860:3:21","nodeType":"YulTypedName","src":"9860:3:21","type":""}],"src":"9773:1299:21"},{"body":{"nativeSrc":"11280:282:21","nodeType":"YulBlock","src":"11280:282:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11297:9:21","nodeType":"YulIdentifier","src":"11297:9:21"},{"arguments":[{"name":"value0","nativeSrc":"11312:6:21","nodeType":"YulIdentifier","src":"11312:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11328:3:21","nodeType":"YulLiteral","src":"11328:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"11333:1:21","nodeType":"YulLiteral","src":"11333:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11324:3:21","nodeType":"YulIdentifier","src":"11324:3:21"},"nativeSrc":"11324:11:21","nodeType":"YulFunctionCall","src":"11324:11:21"},{"kind":"number","nativeSrc":"11337:1:21","nodeType":"YulLiteral","src":"11337:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11320:3:21","nodeType":"YulIdentifier","src":"11320:3:21"},"nativeSrc":"11320:19:21","nodeType":"YulFunctionCall","src":"11320:19:21"}],"functionName":{"name":"and","nativeSrc":"11308:3:21","nodeType":"YulIdentifier","src":"11308:3:21"},"nativeSrc":"11308:32:21","nodeType":"YulFunctionCall","src":"11308:32:21"}],"functionName":{"name":"mstore","nativeSrc":"11290:6:21","nodeType":"YulIdentifier","src":"11290:6:21"},"nativeSrc":"11290:51:21","nodeType":"YulFunctionCall","src":"11290:51:21"},"nativeSrc":"11290:51:21","nodeType":"YulExpressionStatement","src":"11290:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11361:9:21","nodeType":"YulIdentifier","src":"11361:9:21"},{"kind":"number","nativeSrc":"11372:2:21","nodeType":"YulLiteral","src":"11372:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11357:3:21","nodeType":"YulIdentifier","src":"11357:3:21"},"nativeSrc":"11357:18:21","nodeType":"YulFunctionCall","src":"11357:18:21"},{"arguments":[{"name":"value1","nativeSrc":"11381:6:21","nodeType":"YulIdentifier","src":"11381:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11397:3:21","nodeType":"YulLiteral","src":"11397:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"11402:1:21","nodeType":"YulLiteral","src":"11402:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11393:3:21","nodeType":"YulIdentifier","src":"11393:3:21"},"nativeSrc":"11393:11:21","nodeType":"YulFunctionCall","src":"11393:11:21"},{"kind":"number","nativeSrc":"11406:1:21","nodeType":"YulLiteral","src":"11406:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11389:3:21","nodeType":"YulIdentifier","src":"11389:3:21"},"nativeSrc":"11389:19:21","nodeType":"YulFunctionCall","src":"11389:19:21"}],"functionName":{"name":"and","nativeSrc":"11377:3:21","nodeType":"YulIdentifier","src":"11377:3:21"},"nativeSrc":"11377:32:21","nodeType":"YulFunctionCall","src":"11377:32:21"}],"functionName":{"name":"mstore","nativeSrc":"11350:6:21","nodeType":"YulIdentifier","src":"11350:6:21"},"nativeSrc":"11350:60:21","nodeType":"YulFunctionCall","src":"11350:60:21"},"nativeSrc":"11350:60:21","nodeType":"YulExpressionStatement","src":"11350:60:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11430:9:21","nodeType":"YulIdentifier","src":"11430:9:21"},{"kind":"number","nativeSrc":"11441:2:21","nodeType":"YulLiteral","src":"11441:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11426:3:21","nodeType":"YulIdentifier","src":"11426:3:21"},"nativeSrc":"11426:18:21","nodeType":"YulFunctionCall","src":"11426:18:21"},{"name":"value2","nativeSrc":"11446:6:21","nodeType":"YulIdentifier","src":"11446:6:21"}],"functionName":{"name":"mstore","nativeSrc":"11419:6:21","nodeType":"YulIdentifier","src":"11419:6:21"},"nativeSrc":"11419:34:21","nodeType":"YulFunctionCall","src":"11419:34:21"},"nativeSrc":"11419:34:21","nodeType":"YulExpressionStatement","src":"11419:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11473:9:21","nodeType":"YulIdentifier","src":"11473:9:21"},{"kind":"number","nativeSrc":"11484:2:21","nodeType":"YulLiteral","src":"11484:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11469:3:21","nodeType":"YulIdentifier","src":"11469:3:21"},"nativeSrc":"11469:18:21","nodeType":"YulFunctionCall","src":"11469:18:21"},{"kind":"number","nativeSrc":"11489:3:21","nodeType":"YulLiteral","src":"11489:3:21","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"11462:6:21","nodeType":"YulIdentifier","src":"11462:6:21"},"nativeSrc":"11462:31:21","nodeType":"YulFunctionCall","src":"11462:31:21"},"nativeSrc":"11462:31:21","nodeType":"YulExpressionStatement","src":"11462:31:21"},{"nativeSrc":"11502:54:21","nodeType":"YulAssignment","src":"11502:54:21","value":{"arguments":[{"name":"value3","nativeSrc":"11528:6:21","nodeType":"YulIdentifier","src":"11528:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"11540:9:21","nodeType":"YulIdentifier","src":"11540:9:21"},{"kind":"number","nativeSrc":"11551:3:21","nodeType":"YulLiteral","src":"11551:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11536:3:21","nodeType":"YulIdentifier","src":"11536:3:21"},"nativeSrc":"11536:19:21","nodeType":"YulFunctionCall","src":"11536:19:21"}],"functionName":{"name":"abi_encode_string","nativeSrc":"11510:17:21","nodeType":"YulIdentifier","src":"11510:17:21"},"nativeSrc":"11510:46:21","nodeType":"YulFunctionCall","src":"11510:46:21"},"variableNames":[{"name":"tail","nativeSrc":"11502:4:21","nodeType":"YulIdentifier","src":"11502:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"11077:485:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11225:9:21","nodeType":"YulTypedName","src":"11225:9:21","type":""},{"name":"value3","nativeSrc":"11236:6:21","nodeType":"YulTypedName","src":"11236:6:21","type":""},{"name":"value2","nativeSrc":"11244:6:21","nodeType":"YulTypedName","src":"11244:6:21","type":""},{"name":"value1","nativeSrc":"11252:6:21","nodeType":"YulTypedName","src":"11252:6:21","type":""},{"name":"value0","nativeSrc":"11260:6:21","nodeType":"YulTypedName","src":"11260:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11271:4:21","nodeType":"YulTypedName","src":"11271:4:21","type":""}],"src":"11077:485:21"},{"body":{"nativeSrc":"11647:169:21","nodeType":"YulBlock","src":"11647:169:21","statements":[{"body":{"nativeSrc":"11693:16:21","nodeType":"YulBlock","src":"11693:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11702:1:21","nodeType":"YulLiteral","src":"11702:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11705:1:21","nodeType":"YulLiteral","src":"11705:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11695:6:21","nodeType":"YulIdentifier","src":"11695:6:21"},"nativeSrc":"11695:12:21","nodeType":"YulFunctionCall","src":"11695:12:21"},"nativeSrc":"11695:12:21","nodeType":"YulExpressionStatement","src":"11695:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11668:7:21","nodeType":"YulIdentifier","src":"11668:7:21"},{"name":"headStart","nativeSrc":"11677:9:21","nodeType":"YulIdentifier","src":"11677:9:21"}],"functionName":{"name":"sub","nativeSrc":"11664:3:21","nodeType":"YulIdentifier","src":"11664:3:21"},"nativeSrc":"11664:23:21","nodeType":"YulFunctionCall","src":"11664:23:21"},{"kind":"number","nativeSrc":"11689:2:21","nodeType":"YulLiteral","src":"11689:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11660:3:21","nodeType":"YulIdentifier","src":"11660:3:21"},"nativeSrc":"11660:32:21","nodeType":"YulFunctionCall","src":"11660:32:21"},"nativeSrc":"11657:52:21","nodeType":"YulIf","src":"11657:52:21"},{"nativeSrc":"11718:29:21","nodeType":"YulVariableDeclaration","src":"11718:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11737:9:21","nodeType":"YulIdentifier","src":"11737:9:21"}],"functionName":{"name":"mload","nativeSrc":"11731:5:21","nodeType":"YulIdentifier","src":"11731:5:21"},"nativeSrc":"11731:16:21","nodeType":"YulFunctionCall","src":"11731:16:21"},"variables":[{"name":"value","nativeSrc":"11722:5:21","nodeType":"YulTypedName","src":"11722:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"11780:5:21","nodeType":"YulIdentifier","src":"11780:5:21"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"11756:23:21","nodeType":"YulIdentifier","src":"11756:23:21"},"nativeSrc":"11756:30:21","nodeType":"YulFunctionCall","src":"11756:30:21"},"nativeSrc":"11756:30:21","nodeType":"YulExpressionStatement","src":"11756:30:21"},{"nativeSrc":"11795:15:21","nodeType":"YulAssignment","src":"11795:15:21","value":{"name":"value","nativeSrc":"11805:5:21","nodeType":"YulIdentifier","src":"11805:5:21"},"variableNames":[{"name":"value0","nativeSrc":"11795:6:21","nodeType":"YulIdentifier","src":"11795:6:21"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"11567:249:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11613:9:21","nodeType":"YulTypedName","src":"11613:9:21","type":""},{"name":"dataEnd","nativeSrc":"11624:7:21","nodeType":"YulTypedName","src":"11624:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11636:6:21","nodeType":"YulTypedName","src":"11636:6:21","type":""}],"src":"11567:249:21"},{"body":{"nativeSrc":"11950:145:21","nodeType":"YulBlock","src":"11950:145:21","statements":[{"nativeSrc":"11960:26:21","nodeType":"YulAssignment","src":"11960:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11972:9:21","nodeType":"YulIdentifier","src":"11972:9:21"},{"kind":"number","nativeSrc":"11983:2:21","nodeType":"YulLiteral","src":"11983:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11968:3:21","nodeType":"YulIdentifier","src":"11968:3:21"},"nativeSrc":"11968:18:21","nodeType":"YulFunctionCall","src":"11968:18:21"},"variableNames":[{"name":"tail","nativeSrc":"11960:4:21","nodeType":"YulIdentifier","src":"11960:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12002:9:21","nodeType":"YulIdentifier","src":"12002:9:21"},{"arguments":[{"name":"value0","nativeSrc":"12017:6:21","nodeType":"YulIdentifier","src":"12017:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12033:3:21","nodeType":"YulLiteral","src":"12033:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"12038:1:21","nodeType":"YulLiteral","src":"12038:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12029:3:21","nodeType":"YulIdentifier","src":"12029:3:21"},"nativeSrc":"12029:11:21","nodeType":"YulFunctionCall","src":"12029:11:21"},{"kind":"number","nativeSrc":"12042:1:21","nodeType":"YulLiteral","src":"12042:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12025:3:21","nodeType":"YulIdentifier","src":"12025:3:21"},"nativeSrc":"12025:19:21","nodeType":"YulFunctionCall","src":"12025:19:21"}],"functionName":{"name":"and","nativeSrc":"12013:3:21","nodeType":"YulIdentifier","src":"12013:3:21"},"nativeSrc":"12013:32:21","nodeType":"YulFunctionCall","src":"12013:32:21"}],"functionName":{"name":"mstore","nativeSrc":"11995:6:21","nodeType":"YulIdentifier","src":"11995:6:21"},"nativeSrc":"11995:51:21","nodeType":"YulFunctionCall","src":"11995:51:21"},"nativeSrc":"11995:51:21","nodeType":"YulExpressionStatement","src":"11995:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12066:9:21","nodeType":"YulIdentifier","src":"12066:9:21"},{"kind":"number","nativeSrc":"12077:2:21","nodeType":"YulLiteral","src":"12077:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12062:3:21","nodeType":"YulIdentifier","src":"12062:3:21"},"nativeSrc":"12062:18:21","nodeType":"YulFunctionCall","src":"12062:18:21"},{"name":"value1","nativeSrc":"12082:6:21","nodeType":"YulIdentifier","src":"12082:6:21"}],"functionName":{"name":"mstore","nativeSrc":"12055:6:21","nodeType":"YulIdentifier","src":"12055:6:21"},"nativeSrc":"12055:34:21","nodeType":"YulFunctionCall","src":"12055:34:21"},"nativeSrc":"12055:34:21","nodeType":"YulExpressionStatement","src":"12055:34:21"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"11821:274:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11911:9:21","nodeType":"YulTypedName","src":"11911:9:21","type":""},{"name":"value1","nativeSrc":"11922:6:21","nodeType":"YulTypedName","src":"11922:6:21","type":""},{"name":"value0","nativeSrc":"11930:6:21","nodeType":"YulTypedName","src":"11930:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11941:4:21","nodeType":"YulTypedName","src":"11941:4:21","type":""}],"src":"11821:274:21"},{"body":{"nativeSrc":"12132:95:21","nodeType":"YulBlock","src":"12132:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12149:1:21","nodeType":"YulLiteral","src":"12149:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"12156:3:21","nodeType":"YulLiteral","src":"12156:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"12161:10:21","nodeType":"YulLiteral","src":"12161:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"12152:3:21","nodeType":"YulIdentifier","src":"12152:3:21"},"nativeSrc":"12152:20:21","nodeType":"YulFunctionCall","src":"12152:20:21"}],"functionName":{"name":"mstore","nativeSrc":"12142:6:21","nodeType":"YulIdentifier","src":"12142:6:21"},"nativeSrc":"12142:31:21","nodeType":"YulFunctionCall","src":"12142:31:21"},"nativeSrc":"12142:31:21","nodeType":"YulExpressionStatement","src":"12142:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12189:1:21","nodeType":"YulLiteral","src":"12189:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"12192:4:21","nodeType":"YulLiteral","src":"12192:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"12182:6:21","nodeType":"YulIdentifier","src":"12182:6:21"},"nativeSrc":"12182:15:21","nodeType":"YulFunctionCall","src":"12182:15:21"},"nativeSrc":"12182:15:21","nodeType":"YulExpressionStatement","src":"12182:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12213:1:21","nodeType":"YulLiteral","src":"12213:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"12216:4:21","nodeType":"YulLiteral","src":"12216:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12206:6:21","nodeType":"YulIdentifier","src":"12206:6:21"},"nativeSrc":"12206:15:21","nodeType":"YulFunctionCall","src":"12206:15:21"},"nativeSrc":"12206:15:21","nodeType":"YulExpressionStatement","src":"12206:15:21"}]},"name":"panic_error_0x12","nativeSrc":"12100:127:21","nodeType":"YulFunctionDefinition","src":"12100:127:21"},{"body":{"nativeSrc":"12361:145:21","nodeType":"YulBlock","src":"12361:145:21","statements":[{"nativeSrc":"12371:26:21","nodeType":"YulAssignment","src":"12371:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"12383:9:21","nodeType":"YulIdentifier","src":"12383:9:21"},{"kind":"number","nativeSrc":"12394:2:21","nodeType":"YulLiteral","src":"12394:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12379:3:21","nodeType":"YulIdentifier","src":"12379:3:21"},"nativeSrc":"12379:18:21","nodeType":"YulFunctionCall","src":"12379:18:21"},"variableNames":[{"name":"tail","nativeSrc":"12371:4:21","nodeType":"YulIdentifier","src":"12371:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12413:9:21","nodeType":"YulIdentifier","src":"12413:9:21"},{"arguments":[{"name":"value0","nativeSrc":"12428:6:21","nodeType":"YulIdentifier","src":"12428:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12444:3:21","nodeType":"YulLiteral","src":"12444:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"12449:1:21","nodeType":"YulLiteral","src":"12449:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12440:3:21","nodeType":"YulIdentifier","src":"12440:3:21"},"nativeSrc":"12440:11:21","nodeType":"YulFunctionCall","src":"12440:11:21"},{"kind":"number","nativeSrc":"12453:1:21","nodeType":"YulLiteral","src":"12453:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12436:3:21","nodeType":"YulIdentifier","src":"12436:3:21"},"nativeSrc":"12436:19:21","nodeType":"YulFunctionCall","src":"12436:19:21"}],"functionName":{"name":"and","nativeSrc":"12424:3:21","nodeType":"YulIdentifier","src":"12424:3:21"},"nativeSrc":"12424:32:21","nodeType":"YulFunctionCall","src":"12424:32:21"}],"functionName":{"name":"mstore","nativeSrc":"12406:6:21","nodeType":"YulIdentifier","src":"12406:6:21"},"nativeSrc":"12406:51:21","nodeType":"YulFunctionCall","src":"12406:51:21"},"nativeSrc":"12406:51:21","nodeType":"YulExpressionStatement","src":"12406:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12477:9:21","nodeType":"YulIdentifier","src":"12477:9:21"},{"kind":"number","nativeSrc":"12488:2:21","nodeType":"YulLiteral","src":"12488:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12473:3:21","nodeType":"YulIdentifier","src":"12473:3:21"},"nativeSrc":"12473:18:21","nodeType":"YulFunctionCall","src":"12473:18:21"},{"name":"value1","nativeSrc":"12493:6:21","nodeType":"YulIdentifier","src":"12493:6:21"}],"functionName":{"name":"mstore","nativeSrc":"12466:6:21","nodeType":"YulIdentifier","src":"12466:6:21"},"nativeSrc":"12466:34:21","nodeType":"YulFunctionCall","src":"12466:34:21"},"nativeSrc":"12466:34:21","nodeType":"YulExpressionStatement","src":"12466:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"12232:274:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12322:9:21","nodeType":"YulTypedName","src":"12322:9:21","type":""},{"name":"value1","nativeSrc":"12333:6:21","nodeType":"YulTypedName","src":"12333:6:21","type":""},{"name":"value0","nativeSrc":"12341:6:21","nodeType":"YulTypedName","src":"12341:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12352:4:21","nodeType":"YulTypedName","src":"12352:4:21","type":""}],"src":"12232:274:21"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let size := 0\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let result := and(add(length, 31), not(31))\n        size := add(result, 0x20)\n        let memPtr := 0\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(result, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 0)\n        tail := add(headStart, 64)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061018e5760003560e01c80636352211e116100de578063a22cb46511610097578063d539139311610071578063d539139314610358578063d547741f1461037f578063e328400c14610392578063e985e9c5146103b957600080fd5b8063a22cb4651461031f578063b88d4fde14610332578063c87b56dd1461034557600080fd5b80636352211e146102c35780636a627842146102d657806370a08231146102e957806391d14854146102fc57806395d89b411461030f578063a217fddf1461031757600080fd5b8063248a9ca31161014b57806342842e0e1161012557806342842e0e14610282578063471d06f41461029557806353c8388e146102a857806356189236146102bb57600080fd5b8063248a9ca3146102395780632f2ff15d1461025c57806336568abe1461026f57600080fd5b806301ffc9a71461019357806306fdde03146101bb578063081812fc146101d0578063095ea7b3146101fb57806318160ddd1461021057806323b872dd14610226575b600080fd5b6101a66101a13660046113b4565b6103cc565b60405190151581526020015b60405180910390f35b6101c36103dd565b6040516101b29190611421565b6101e36101de366004611434565b61046f565b6040516001600160a01b0390911681526020016101b2565b61020e610209366004611469565b610498565b005b6102186104a7565b6040519081526020016101b2565b61020e610234366004611493565b6104bd565b610218610247366004611434565b60009081526007602052604090206001015490565b61020e61026a3660046114d0565b61054d565b61020e61027d3660046114d0565b610572565b61020e610290366004611493565b6105aa565b6102186102a33660046115ac565b6105c5565b61020e6102b63660046115fa565b61068d565b600854610218565b6101e36102d1366004611434565b610714565b6102186102e436600461162b565b61071f565b6102186102f736600461162b565b6107e8565b6101a661030a3660046114d0565b610830565b6101c361085b565b610218600081565b61020e61032d366004611646565b61086a565b61020e610340366004611682565b610875565b6101c3610353366004611434565b61088d565b6102187f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61020e61038d3660046114d0565b61099e565b6102187fa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab81565b6101a66103c73660046116fe565b6109c3565b60006103d7826109f1565b92915050565b6060600080546103ec90611728565b80601f016020809104026020016040519081016040528092919081815260200182805461041890611728565b80156104655780601f1061043a57610100808354040283529160200191610465565b820191906000526020600020905b81548152906001019060200180831161044857829003601f168201915b5050505050905090565b600061047a82610a16565b506000828152600460205260409020546001600160a01b03166103d7565b6104a3828233610a4f565b5050565b600060016008546104b89190611772565b905090565b6001600160a01b0382166104ec57604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006104f9838333610a5c565b9050836001600160a01b0316816001600160a01b031614610547576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016104e3565b50505050565b60008281526007602052604090206001015461056881610abd565b6105478383610aca565b6001600160a01b038116331461059b5760405163334bd91960e11b815260040160405180910390fd5b6105a58282610b5e565b505050565b6105a583838360405180602001604052806000815250610875565b60007f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66105f181610abd565b6001600160a01b0384166106185760405163d92e233d60e01b815260040160405180910390fd5b60088054908190600061062a83611785565b91905055506106398582610bcb565b6106438185610c30565b80856001600160a01b03167fc003d77b1510ac4ae95db12dd6b9f37869ddc183c76c2f6fda6dc5124f5bd2188660405161067d9190611421565b60405180910390a3949350505050565b600061069881610abd565b6000838152600260205260409020546001600160a01b03166106cd576040516307ed98ed60e31b815260040160405180910390fd5b6106d78383610c30565b827f78d07928bd1d46a549dbf60e803372a8dc0bd1dcceb19beeef02777394fd6b74836040516107079190611421565b60405180910390a2505050565b60006103d782610a16565b60007f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661074b81610abd565b6001600160a01b0383166107725760405163d92e233d60e01b815260040160405180910390fd5b60088054908190600061078483611785565b91905055506107938482610bcb565b80846001600160a01b03167fc003d77b1510ac4ae95db12dd6b9f37869ddc183c76c2f6fda6dc5124f5bd2186040516107d790602080825260009082015260400190565b60405180910390a391505b50919050565b60006001600160a01b038216610814576040516322718ad960e21b8152600060048201526024016104e3565b506001600160a01b031660009081526003602052604090205490565b60009182526007602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600180546103ec90611728565b6104a3338383610c80565b6108808484846104bd565b6105473385858585610d1f565b606061089882610a16565b50600082815260066020526040812080546108b290611728565b80601f01602080910402602001604051908101604052809291908181526020018280546108de90611728565b801561092b5780601f106109005761010080835404028352916020019161092b565b820191906000526020600020905b81548152906001019060200180831161090e57829003601f168201915b50505050509050600061094960408051602081019091526000815290565b9050805160000361095b575092915050565b81511561098d57808260405160200161097592919061179e565b60405160208183030381529060405292505050919050565b61099684610e4a565b949350505050565b6000828152600760205260409020600101546109b981610abd565b6105478383610b5e565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b03198216637965db0b60e01b14806103d757506103d782610ebf565b6000818152600260205260408120546001600160a01b0316806103d757604051637e27328960e01b8152600481018490526024016104e3565b6105a58383836001610ee4565b6000828152600260205260408120546001600160a01b03168015801590610a8b57506001600160a01b03851615155b15610aa957604051630d18115360e11b815260040160405180910390fd5b610ab4858585610fea565b95945050505050565b610ac781336110e3565b50565b6000610ad68383610830565b610b565760008381526007602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610b0e3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016103d7565b5060006103d7565b6000610b6a8383610830565b15610b565760008381526007602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016103d7565b6001600160a01b038216610bf557604051633250574960e11b8152600060048201526024016104e3565b6000610c0383836000610a5c565b90506001600160a01b038116156105a5576040516339e3563760e11b8152600060048201526024016104e3565b6000828152600660205260409020610c488282611814565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6001600160a01b038216610cb257604051630b61174360e31b81526001600160a01b03831660048201526024016104e3565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610e4357604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610d619088908890879087906004016118d3565b6020604051808303816000875af1925050508015610d9c575060408051601f3d908101601f19168201909252610d9991810190611910565b60015b610e05573d808015610dca576040519150601f19603f3d011682016040523d82523d6000602084013e610dcf565b606091505b508051600003610dfd57604051633250574960e11b81526001600160a01b03851660048201526024016104e3565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610e4157604051633250574960e11b81526001600160a01b03851660048201526024016104e3565b505b5050505050565b6060610e5582610a16565b506000610e6d60408051602081019091526000815290565b90506000815111610e8d5760405180602001604052806000815250610eb8565b80610e978461111c565b604051602001610ea892919061179e565b6040516020818303038152906040525b9392505050565b60006001600160e01b03198216632483248360e11b14806103d757506103d7826111af565b8080610ef857506001600160a01b03821615155b15610fba576000610f0884610a16565b90506001600160a01b03831615801590610f345750826001600160a01b0316816001600160a01b031614155b8015610f475750610f4581846109c3565b155b15610f705760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016104e3565b8115610fb85783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152600260205260408120546001600160a01b0390811690831615611017576110178184866111ff565b6001600160a01b0381161561105557611034600085600080610ee4565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615611084576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6110ed8282610830565b6104a35760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016104e3565b6060600061112983611263565b600101905060008167ffffffffffffffff811115611149576111496114fc565b6040519080825280601f01601f191660200182016040528015611173576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461117d57509392505050565b60006001600160e01b031982166380ac58cd60e01b14806111e057506001600160e01b03198216635b5e139f60e01b145b806103d757506301ffc9a760e01b6001600160e01b03198316146103d7565b61120a83838361133b565b6105a5576001600160a01b03831661123857604051637e27328960e01b8152600481018290526024016104e3565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016104e3565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112a25772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106112ce576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106112ec57662386f26fc10000830492506010015b6305f5e1008310611304576305f5e100830492506008015b612710831061131857612710830492506004015b6064831061132a576064830492506002015b600a83106103d75760010192915050565b60006001600160a01b038316158015906109965750826001600160a01b0316846001600160a01b03161480611375575061137584846109c3565b806109965750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b031981168114610ac757600080fd5b6000602082840312156113c657600080fd5b8135610eb88161139e565b60005b838110156113ec5781810151838201526020016113d4565b50506000910152565b6000815180845261140d8160208601602086016113d1565b601f01601f19169290920160200192915050565b602081526000610eb860208301846113f5565b60006020828403121561144657600080fd5b5035919050565b80356001600160a01b038116811461146457600080fd5b919050565b6000806040838503121561147c57600080fd5b6114858361144d565b946020939093013593505050565b6000806000606084860312156114a857600080fd5b6114b18461144d565b92506114bf6020850161144d565b929592945050506040919091013590565b600080604083850312156114e357600080fd5b823591506114f36020840161144d565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561152d5761152d6114fc565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff8211171561155c5761155c6114fc565b60405283815290508082840185101561157457600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261159d57600080fd5b610eb883833560208501611512565b600080604083850312156115bf57600080fd5b6115c88361144d565b9150602083013567ffffffffffffffff8111156115e457600080fd5b6115f08582860161158c565b9150509250929050565b6000806040838503121561160d57600080fd5b82359150602083013567ffffffffffffffff8111156115e457600080fd5b60006020828403121561163d57600080fd5b610eb88261144d565b6000806040838503121561165957600080fd5b6116628361144d565b91506020830135801515811461167757600080fd5b809150509250929050565b6000806000806080858703121561169857600080fd5b6116a18561144d565b93506116af6020860161144d565b925060408501359150606085013567ffffffffffffffff8111156116d257600080fd5b8501601f810187136116e357600080fd5b6116f287823560208401611512565b91505092959194509250565b6000806040838503121561171157600080fd5b61171a8361144d565b91506114f36020840161144d565b600181811c9082168061173c57607f821691505b6020821081036107e257634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156103d7576103d761175c565b6000600182016117975761179761175c565b5060010190565b600083516117b08184602088016113d1565b8351908301906117c48183602088016113d1565b01949350505050565b601f8211156105a557806000526020600020601f840160051c810160208510156117f45750805b601f840160051c820191505b81811015610e435760008155600101611800565b815167ffffffffffffffff81111561182e5761182e6114fc565b6118428161183c8454611728565b846117cd565b6020601f821160018114611876576000831561185e5750848201515b600019600385901b1c1916600184901b178455610e43565b600084815260208120601f198516915b828110156118a65787850151825560209485019460019092019101611886565b50848210156118c45786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611906908301846113f5565b9695505050505050565b60006020828403121561192257600080fd5b8151610eb88161139e56fea264697066735822122040feed207f3358b155ae69680f0579bd826e939a50ff86c920c58aa807056ce364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xE328400C EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x471D06F4 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x53C8388E EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x56189236 EQ PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x226 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x218 PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x218 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x1434 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH2 0x20E PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x218 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AC JUMP JUMPDEST PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x218 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST PUSH2 0x218 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x162B JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH2 0x218 PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x162B JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x218 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x1646 JUMP JUMPDEST PUSH2 0x86A JUMP JUMPDEST PUSH2 0x20E PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x1682 JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x88D JUMP JUMPDEST PUSH2 0x218 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x99E JUMP JUMPDEST PUSH2 0x218 PUSH32 0xA5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB DUP2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D7 DUP3 PUSH2 0x9F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3EC SWAP1 PUSH2 0x1728 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x418 SWAP1 PUSH2 0x1728 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x465 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x465 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x448 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47A DUP3 PUSH2 0xA16 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3D7 JUMP JUMPDEST PUSH2 0x4A3 DUP3 DUP3 CALLER PUSH2 0xA4F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 SLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1772 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4F9 DUP4 DUP4 CALLER PUSH2 0xA5C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x568 DUP2 PUSH2 0xABD JUMP JUMPDEST PUSH2 0x547 DUP4 DUP4 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A5 DUP3 DUP3 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5A5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x875 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x5F1 DUP2 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0x62A DUP4 PUSH2 0x1785 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x639 DUP6 DUP3 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x643 DUP2 DUP6 PUSH2 0xC30 JUMP JUMPDEST DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC003D77B1510AC4AE95DB12DD6B9F37869DDC183C76C2F6FDA6DC5124F5BD218 DUP7 PUSH1 0x40 MLOAD PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x698 DUP2 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6CD JUMPI PUSH1 0x40 MLOAD PUSH4 0x7ED98ED PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D7 DUP4 DUP4 PUSH2 0xC30 JUMP JUMPDEST DUP3 PUSH32 0x78D07928BD1D46A549DBF60E803372A8DC0BD1DCCEB19BEEEF02777394FD6B74 DUP4 PUSH1 0x40 MLOAD PUSH2 0x707 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D7 DUP3 PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x74B DUP2 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0x784 DUP4 PUSH2 0x1785 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x793 DUP5 DUP3 PUSH2 0xBCB JUMP JUMPDEST DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC003D77B1510AC4AE95DB12DD6B9F37869DDC183C76C2F6FDA6DC5124F5BD218 PUSH1 0x40 MLOAD PUSH2 0x7D7 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x3EC SWAP1 PUSH2 0x1728 JUMP JUMPDEST PUSH2 0x4A3 CALLER DUP4 DUP4 PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x880 DUP5 DUP5 DUP5 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x547 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0xD1F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x898 DUP3 PUSH2 0xA16 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x8B2 SWAP1 PUSH2 0x1728 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8DE SWAP1 PUSH2 0x1728 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x92B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x900 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x949 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x95B JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x98D JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x975 SWAP3 SWAP2 SWAP1 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x996 DUP5 PUSH2 0xE4A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x9B9 DUP2 PUSH2 0xABD JUMP JUMPDEST PUSH2 0x547 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3D7 JUMPI POP PUSH2 0x3D7 DUP3 PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x5A5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xA8B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD181153 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB4 DUP6 DUP6 DUP6 PUSH2 0xFEA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAC7 DUP2 CALLER PUSH2 0x10E3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD6 DUP4 DUP4 PUSH2 0x830 JUMP JUMPDEST PUSH2 0xB56 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xB0E CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3D7 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6A DUP4 DUP4 PUSH2 0x830 JUMP JUMPDEST ISZERO PUSH2 0xB56 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC03 DUP4 DUP4 PUSH1 0x0 PUSH2 0xA5C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xC48 DUP3 DUP3 PUSH2 0x1814 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xE43 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xD61 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD9C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD99 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1910 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE05 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xDCA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xE41 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE55 DUP3 PUSH2 0xA16 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xE6D PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xE8D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xEB8 JUMP JUMPDEST DUP1 PUSH2 0xE97 DUP5 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEA8 SWAP3 SWAP2 SWAP1 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3D7 JUMPI POP PUSH2 0x3D7 DUP3 PUSH2 0x11AF JUMP JUMPDEST DUP1 DUP1 PUSH2 0xEF8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xFBA JUMPI PUSH1 0x0 PUSH2 0xF08 DUP5 PUSH2 0xA16 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF34 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xF47 JUMPI POP PUSH2 0xF45 DUP2 DUP5 PUSH2 0x9C3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xF70 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xFB8 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x1017 JUMPI PUSH2 0x1017 DUP2 DUP5 DUP7 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1055 JUMPI PUSH2 0x1034 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x1084 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x10ED DUP3 DUP3 PUSH2 0x830 JUMP JUMPDEST PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1129 DUP4 PUSH2 0x1263 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1149 JUMPI PUSH2 0x1149 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1173 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x117D JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x11E0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3D7 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3D7 JUMP JUMPDEST PUSH2 0x120A DUP4 DUP4 DUP4 PUSH2 0x133B JUMP JUMPDEST PUSH2 0x5A5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1238 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x12A2 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x12CE JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x12EC JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1304 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1318 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x132A JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3D7 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x996 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1375 JUMPI POP PUSH2 0x1375 DUP5 DUP5 PUSH2 0x9C3 JUMP JUMPDEST DUP1 PUSH2 0x996 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xAC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEB8 DUP2 PUSH2 0x139E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13EC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13D4 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x140D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xEB8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x147C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1485 DUP4 PUSH2 0x144D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B1 DUP5 PUSH2 0x144D JUMP JUMPDEST SWAP3 POP PUSH2 0x14BF PUSH1 0x20 DUP6 ADD PUSH2 0x144D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x14F3 PUSH1 0x20 DUP5 ADD PUSH2 0x144D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x152D JUMPI PUSH2 0x152D PUSH2 0x14FC JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x155C JUMPI PUSH2 0x155C PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x1574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x159D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB8 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15C8 DUP4 PUSH2 0x144D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F0 DUP6 DUP3 DUP7 ADD PUSH2 0x158C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x160D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x163D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB8 DUP3 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1662 DUP4 PUSH2 0x144D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A1 DUP6 PUSH2 0x144D JUMP JUMPDEST SWAP4 POP PUSH2 0x16AF PUSH1 0x20 DUP7 ADD PUSH2 0x144D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x16E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16F2 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1512 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171A DUP4 PUSH2 0x144D JUMP JUMPDEST SWAP2 POP PUSH2 0x14F3 PUSH1 0x20 DUP5 ADD PUSH2 0x144D JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x173C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3D7 JUMPI PUSH2 0x3D7 PUSH2 0x175C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1797 JUMPI PUSH2 0x1797 PUSH2 0x175C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x17B0 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x13D1 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x17C4 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x13D1 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5A5 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x17F4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1800 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x182E JUMPI PUSH2 0x182E PUSH2 0x14FC JUMP JUMPDEST PUSH2 0x1842 DUP2 PUSH2 0x183C DUP5 SLOAD PUSH2 0x1728 JUMP JUMPDEST DUP5 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1876 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x185E JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x18A6 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1886 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x18C4 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1906 SWAP1 DUP4 ADD DUP5 PUSH2 0x13F5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xEB8 DUP2 PUSH2 0x139E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH INVALID 0xED KECCAK256 PUSH32 0x3358B155AE69680F0579BD826E939A50FF86C920C58AA807056CE364736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"384:4221:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2272:194;;;;;;:::i;:::-;;:::i;:::-;;;565:14:21;;558:22;540:41;;528:2;513:18;2272:194:20;;;;;;;;2263:89:6;;;:::i;:::-;;;;;;;:::i;3299:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1743:32:21;;;1725:51;;1713:2;1698:18;3299:154:6;1579:203:21;3152:113:6;;;;;;:::i;:::-;;:::i;:::-;;4502:100:20;;;:::i;:::-;;;2416:25:21;;;2404:2;2389:18;4502:100:20;2270:177:21;3852:578:6;;;;;;:::i;:::-;;:::i;3786:120:0:-;;;;;;:::i;:::-;3851:7;3877:12;;;:6;:12;;;;;:22;;;;3786:120;4202:136;;;;;;:::i;:::-;;:::i;5304:245::-;;;;;;:::i;:::-;;:::i;4464:132:6:-;;;;;;:::i;:::-;;:::i;3227:433:20:-;;;;;;:::i;:::-;;:::i;3827:318::-;;;;;;:::i;:::-;;:::i;4288:102::-;4367:15;;4288:102;;2103:118:6;;;;;;:::i;:::-;;:::i;2665:315:20:-;;;;;;:::i;:::-;;:::i;1861:208:6:-;;;;;;:::i;:::-;;:::i;2830:136:0:-;;;;;;:::i;:::-;;:::i;2394:93:6:-;;;:::i;2196:49:0:-;;2241:4;2196:49;;3487:144:6;;;;;;:::i;:::-;;:::i;4630:233::-;;;;;;:::i;:::-;;:::i;1210:593:9:-;;;;;;:::i;:::-;;:::i;472:62:20:-;;510:24;472:62;;4618:138:0;;;;;;:::i;:::-;;:::i;541:66:20:-;;581:26;541:66;;3665:153:6;;;;;;:::i;:::-;;:::i;2272:194:20:-;2398:4;2422:36;2446:11;2422:23;:36::i;:::-;2415:43;2272:194;-1:-1:-1;;2272:194:20:o;2263:89:6:-;2308:13;2340:5;2333:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2263:89;:::o;3299:154::-;3366:7;3385:22;3399:7;3385:13;:22::i;:::-;-1:-1:-1;5679:7:6;5705:24;;;:15;:24;;;;;;-1:-1:-1;;;;;5705:24:6;3425:21;5609:127;3152:113;3223:35;3232:2;3236:7;735:10:12;3223:8:6;:35::i;:::-;3152:113;;:::o;4502:100:20:-;4548:7;4593:1;4575:15;;:19;;;;:::i;:::-;4568:26;;4502:100;:::o;3852:578:6:-;-1:-1:-1;;;;;3946:16:6;;3942:87;;3985:33;;-1:-1:-1;;;3985:33:6;;4015:1;3985:33;;;1725:51:21;1698:18;;3985:33:6;;;;;;;;3942:87;4247:21;4271:34;4279:2;4283:7;735:10:12;4271:7:6;:34::i;:::-;4247:58;;4336:4;-1:-1:-1;;;;;4319:21:6;:13;-1:-1:-1;;;;;4319:21:6;;4315:109;;4363:50;;-1:-1:-1;;;4363:50:6;;-1:-1:-1;;;;;7867:32:21;;;4363:50:6;;;7849:51:21;7916:18;;;7909:34;;;7979:32;;7959:18;;;7952:60;7822:18;;4363:50:6;7647:371:21;4315:109:6;3932:498;3852:578;;;:::o;4202:136:0:-;3851:7;3877:12;;;:6;:12;;;;;:22;;;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;5304:245::-:0;-1:-1:-1;;;;;5397:34:0;;735:10:12;5397:34:0;5393:102;;5454:30;;-1:-1:-1;;;5454:30:0;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;4464:132:6:-;4550:39;4567:4;4573:2;4577:7;4550:39;;;;;;;;;;;;:16;:39::i;3227:433:20:-;3357:7;510:24;2473:16:0;2484:4;2473:10;:16::i;:::-;-1:-1:-1;;;;;3381:16:20;::::1;3377:42;;3406:13;;-1:-1:-1::0;;;3406:13:20::1;;;;;;;;;;;3377:42;3450:15;::::0;;;;;3432::::1;3476:17;3450:15:::0;3476:17:::1;:::i;:::-;;;;;;3506:18;3512:2;3516:7;3506:5;:18::i;:::-;3535:34;3548:7;3557:11;3535:12;:34::i;:::-;3606:7;3602:2;-1:-1:-1::0;;;;;3587:40:20::1;;3615:11;3587:40;;;;;;:::i;:::-;;;;;;;;3645:7:::0;3227:433;-1:-1:-1;;;;3227:433:20:o;3827:318::-;2241:4:0;2473:16;2241:4;2473:10;:16::i;:::-;4002:1:20::1;5470:16:6::0;;;:7;:16;;;;;;-1:-1:-1;;;;;5470:16:6;3969:60:20::1;;4013:16;;-1:-1:-1::0;;;4013:16:20::1;;;;;;;;;;;3969:60;4042:34;4055:7;4064:11;4042:12;:34::i;:::-;4116:7;4092:45;4125:11;4092:45;;;;;;:::i;:::-;;;;;;;;3827:318:::0;;;:::o;2103:118:6:-;2166:7;2192:22;2206:7;2192:13;:22::i;2665:315:20:-;2731:7;510:24;2473:16:0;2484:4;2473:10;:16::i;:::-;-1:-1:-1;;;;;2755:16:20;::::1;2751:42;;2780:13;;-1:-1:-1::0;;;2780:13:20::1;;;;;;;;;;;2751:42;2824:15;::::0;;;;;2806::::1;2850:17;2824:15:::0;2850:17:::1;:::i;:::-;;;;;;2880:18;2886:2;2890:7;2880:5;:18::i;:::-;2935:7;2931:2;-1:-1:-1::0;;;;;2916:31:20::1;;;;;;8365:2:21::0;8347:21;;;8404:1;8384:18;;;8377:29;8438:2;8423:18;;8163:284;2916:31:20::1;;;;;;;;2965:7:::0;-1:-1:-1;2499:1:0::1;2665:315:20::0;;;;:::o;1861:208:6:-;1924:7;-1:-1:-1;;;;;1947:19:6;;1943:87;;1989:30;;-1:-1:-1;;;1989:30:6;;2016:1;1989:30;;;1725:51:21;1698:18;;1989:30:6;1579:203:21;1943:87:6;-1:-1:-1;;;;;;2046:16:6;;;;;:9;:16;;;;;;;1861:208::o;2830:136:0:-;2907:4;2930:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2930:29:0;;;;;;;;;;;;;;;2830:136::o;2394:93:6:-;2441:13;2473:7;2466:14;;;;;:::i;3487:144::-;3572:52;735:10:12;3605:8:6;3615;3572:18;:52::i;4630:233::-;4743:31;4756:4;4762:2;4766:7;4743:12;:31::i;:::-;4784:72;735:10:12;4832:4:6;4838:2;4842:7;4851:4;4784:33;:72::i;1210:593:9:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;-1:-1:-1;1341:23:9;1367:19;;;:10;:19;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;3102:9:6;;;;;;;;;-1:-1:-1;3102:9:6;;;3026:92;1417:10:9;1396:31;;1506:4;1500:18;1522:1;1500:23;1496:70;;-1:-1:-1;1546:9:9;1210:593;-1:-1:-1;;1210:593:9:o;1496:70::-;1665:23;;:27;1661:95;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;1210:593;;;:::o;1661:95::-;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;1210:593;-1:-1:-1;;;;1210:593:9:o;4618:138:0:-;3851:7;3877:12;;;:6;:12;;;;;:22;;;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;3665:153:6:-:0;-1:-1:-1;;;;;3776:25:6;;;3753:4;3776:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3665:153::o;2541:202:0:-;2626:4;-1:-1:-1;;;;;;2649:47:0;;-1:-1:-1;;;2649:47:0;;:87;;;2700:36;2724:11;2700:23;:36::i;15858:241:6:-;15921:7;5470:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5470:16:6;;15983:88;;16029:31;;-1:-1:-1;;;16029:31:6;;;;;2416:25:21;;;2389:18;;16029:31:6;2270:177:21;14138:120:6;14218:33;14227:2;14231:7;14240:4;14246;14218:8;:33::i;1778:423:20:-;1899:7;5470:16:6;;;:7;:16;;;;;;-1:-1:-1;;;;;5470:16:6;2039:18:20;;;;;:38;;-1:-1:-1;;;;;;2061:16:20;;;;2039:38;2035:107;;;2101:29;;-1:-1:-1;;;2101:29:20;;;;;;;;;;;2035:107;2161:32;2175:2;2179:7;2188:4;2161:13;:32::i;:::-;2154:39;1778:423;-1:-1:-1;;;;;1778:423:20:o;3175:103:0:-;3241:30;3252:4;735:10:12;3241::0;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6291:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6291:29:0;;;;;;;;;:36;;-1:-1:-1;;6291:36:0;6323:4;6291:36;;;6373:12;735:10:12;;656:96;6373:12:0;-1:-1:-1;;;;;6346:40:0;6364:7;-1:-1:-1;;;;;6346:40:0;6358:4;6346:40;;;;;;;;;;-1:-1:-1;6407:4:0;6400:11;;6248:217;-1:-1:-1;6449:5:0;6442:12;;6708:317;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6844:29:0;;;;;;;;;;:37;;-1:-1:-1;;6844:37:0;;;6900:40;735:10:12;;6844:12:0;;6900:40;;6876:5;6900:40;-1:-1:-1;6961:4:0;6954:11;;9624:327:6;-1:-1:-1;;;;;9691:16:6;;9687:87;;9730:33;;-1:-1:-1;;;9730:33:6;;9760:1;9730:33;;;1725:51:21;1698:18;;9730:33:6;1579:203:21;9687:87:6;9783:21;9807:32;9815:2;9819:7;9836:1;9807:7;:32::i;:::-;9783:56;-1:-1:-1;;;;;;9853:27:6;;;9849:96;;9903:31;;-1:-1:-1;;;9903:31:6;;9931:1;9903:31;;;1725:51:21;1698:18;;9903:31:6;1579:203:21;1931:167:9;2022:19;;;;:10;:19;;;;;:31;2044:9;2022:19;:31;:::i;:::-;-1:-1:-1;2068:23:9;;2416:25:21;;;2068:23:9;;2404:2:21;2389:18;2068:23:9;;;;;;;1931:167;;:::o;15311:312:6:-;-1:-1:-1;;;;;15418:22:6;;15414:91;;15463:31;;-1:-1:-1;;;15463:31:6;;-1:-1:-1;;;;;1743:32:21;;15463:31:6;;;1725:51:21;1698:18;;15463:31:6;1579:203:21;15414:91:6;-1:-1:-1;;;;;15514:25:6;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15514:46:6;;;;;;;;;;15575:41;;540::21;;;15575::6;;513:18:21;15575:41:6;;;;;;;15311:312;;;:::o;993:926:11:-;-1:-1:-1;;;;;1173:14:11;;;:18;1169:744;;1211:67;;-1:-1:-1;;;1211:67:11;;-1:-1:-1;;;;;1211:36:11;;;;;:67;;1248:8;;1258:4;;1264:7;;1273:4;;1211:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1211:67:11;;;;;;;;-1:-1:-1;;1211:67:11;;;;;;;;;;;;:::i;:::-;;;1207:696;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:6;:13;1585:1;1568:18;1564:325;;1672:39;;-1:-1:-1;;;1672:39:11;;-1:-1:-1;;;;;1743:32:21;;1672:39:11;;;1725:51:21;1698:18;;1672:39:11;1579:203:21;1564:325:11;1841:6;1835:13;1828:4;1820:6;1816:17;1809:40;1207:696;-1:-1:-1;;;;;;1325:51:11;;-1:-1:-1;;;1325:51:11;1321:182;;1445:39;;-1:-1:-1;;;1445:39:11;;-1:-1:-1;;;;;1743:32:21;;1445:39:11;;;1725:51:21;1698:18;;1445:39:11;1579:203:21;1321:182:11;1279:238;1207:696;993:926;;;;;:::o;2529:255:6:-;2593:13;2618:22;2632:7;2618:13;:22::i;:::-;;2651:21;2675:10;3102:9;;;;;;;;;-1:-1:-1;3102:9:6;;;3026:92;2675:10;2651:34;;2726:1;2708:7;2702:21;:25;:75;;;;;;;;;;;;;;;;;2744:7;2753:18;:7;:16;:18::i;:::-;2730:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2702:75;2695:82;2529:255;-1:-1:-1;;;2529:255:6:o;961:207:9:-;1063:4;-1:-1:-1;;;;;;1086:35:9;;-1:-1:-1;;;1086:35:9;;:75;;;1125:36;1149:11;1125:23;:36::i;14440:662:6:-;14600:9;:31;;;-1:-1:-1;;;;;;14613:18:6;;;;14600:31;14596:460;;;14647:13;14663:22;14677:7;14663:13;:22::i;:::-;14647:38;-1:-1:-1;;;;;;14813:18:6;;;;;;:35;;;14844:4;-1:-1:-1;;;;;14835:13:6;:5;-1:-1:-1;;;;;14835:13:6;;;14813:35;:69;;;;;14853:29;14870:5;14877:4;14853:16;:29::i;:::-;14852:30;14813:69;14809:142;;;14909:27;;-1:-1:-1;;;14909:27:6;;-1:-1:-1;;;;;1743:32:21;;14909:27:6;;;1725:51:21;1698:18;;14909:27:6;1579:203:21;14809:142:6;14969:9;14965:81;;;15023:7;15019:2;-1:-1:-1;;;;;15003:28:6;15012:5;-1:-1:-1;;;;;15003:28:6;;;;;;;;;;;14965:81;14633:423;14596:460;-1:-1:-1;;15066:24:6;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15066:29:6;-1:-1:-1;;;;;15066:29:6;;;;;;;;;;14440:662::o;8507:795::-;8593:7;5470:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5470:16:6;;;;8704:18;;;8700:86;;8738:37;8755:4;8761;8767:7;8738:16;:37::i;:::-;-1:-1:-1;;;;;8830:18:6;;;8826:256;;8946:48;8963:1;8967:7;8984:1;8988:5;8946:8;:48::i;:::-;-1:-1:-1;;;;;9037:15:6;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9037:20:6;;;8826:256;-1:-1:-1;;;;;9096:16:6;;;9092:107;;-1:-1:-1;;;;;9156:13:6;;;;;;:9;:13;;;;;:18;;9173:1;9156:18;;;9092:107;9209:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9209:21:6;-1:-1:-1;;;;;9209:21:6;;;;;;;;;9246:27;;9209:16;;9246:27;;;;;;;9291:4;8507:795;-1:-1:-1;;;;8507:795:6:o;3408:197:0:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3541:47;;-1:-1:-1;;;3541:47:0;;-1:-1:-1;;;;;12013:32:21;;3541:47:0;;;11995:51:21;12062:18;;;12055:34;;;11968:18;;3541:47:0;11821:274:21;1308:634:14;1364:13;1413:14;1430:17;1441:5;1430:10;:17::i;:::-;1450:1;1430:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1488:18:14;-1:-1:-1;1465:41:14;-1:-1:-1;1595:30:14;;;1611:4;1595:30;1652:247;-1:-1:-1;;1683:5:14;-1:-1:-1;;;1782:2:14;1771:14;;1766:32;1683:5;1753:46;1843:2;1834:11;;;-1:-1:-1;1863:21:14;1652:247;1863:21;-1:-1:-1;1919:6:14;1308:634;-1:-1:-1;;;1308:634:14:o;1527:300:6:-;1629:4;-1:-1:-1;;;;;;1664:40:6;;-1:-1:-1;;;1664:40:6;;:104;;-1:-1:-1;;;;;;;1720:48:6;;-1:-1:-1;;;1720:48:6;1664:104;:156;;;-1:-1:-1;;;;;;;;;;829:40:15;;;1784:36:6;730:146:15;6751:368:6;6863:38;6877:5;6884:7;6893;6863:13;:38::i;:::-;6858:255;;-1:-1:-1;;;;;6921:19:6;;6917:186;;6967:31;;-1:-1:-1;;;6967:31:6;;;;;2416:25:21;;;2389:18;;6967:31:6;2270:177:21;6917:186:6;7044:44;;-1:-1:-1;;;7044:44:6;;-1:-1:-1;;;;;12013:32:21;;7044:44:6;;;11995:51:21;12062:18;;;12055:34;;;11968:18;;7044:44:6;11821:274:21;29154:916:17;29207:7;;-1:-1:-1;;;29282:17:17;;29278:103;;-1:-1:-1;;;29319:17:17;;;-1:-1:-1;29364:2:17;29354:12;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;-1:-1:-1;29480:2:17;29470:12;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;-1:-1:-1;29596:2:17;29586:12;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;-1:-1:-1;29710:1:17;29700:11;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;-1:-1:-1;29823:1:17;29813:11;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;-1:-1:-1;29936:1:17;29926:11;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;30057:6;29154:916;-1:-1:-1;;29154:916:17:o;6047:272:6:-;6150:4;-1:-1:-1;;;;;6185:21:6;;;;;;:127;;;6232:7;-1:-1:-1;;;;;6223:16:6;:5;-1:-1:-1;;;;;6223:16:6;;:52;;;;6243:32;6260:5;6267:7;6243:16;:32::i;:::-;6223:88;;;-1:-1:-1;;5679:7:6;5705:24;;;:15;:24;;;;;;-1:-1:-1;;;;;5705:24:6;;;6279:32;;;;6166:146;-1:-1:-1;6047:272:6:o;14:131:21:-;-1:-1:-1;;;;;;88:32:21;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:21;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:21;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:21:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:226::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1521:23:21;;1348:226;-1:-1:-1;1348:226:21:o;1787:173::-;1855:20;;-1:-1:-1;;;;;1904:31:21;;1894:42;;1884:70;;1950:1;1947;1940:12;1884:70;1787:173;;;:::o;1965:300::-;2033:6;2041;2094:2;2082:9;2073:7;2069:23;2065:32;2062:52;;;2110:1;2107;2100:12;2062:52;2133:29;2152:9;2133:29;:::i;:::-;2123:39;2231:2;2216:18;;;;2203:32;;-1:-1:-1;;;1965:300:21:o;2452:374::-;2529:6;2537;2545;2598:2;2586:9;2577:7;2573:23;2569:32;2566:52;;;2614:1;2611;2604:12;2566:52;2637:29;2656:9;2637:29;:::i;:::-;2627:39;;2685:38;2719:2;2708:9;2704:18;2685:38;:::i;:::-;2452:374;;2675:48;;-1:-1:-1;;;2792:2:21;2777:18;;;;2764:32;;2452:374::o;3244:300::-;3312:6;3320;3373:2;3361:9;3352:7;3348:23;3344:32;3341:52;;;3389:1;3386;3379:12;3341:52;3434:23;;;-1:-1:-1;3500:38:21;3534:2;3519:18;;3500:38;:::i;:::-;3490:48;;3244:300;;;;;:::o;3549:127::-;3610:10;3605:3;3601:20;3598:1;3591:31;3641:4;3638:1;3631:15;3665:4;3662:1;3655:15;3681:716;3746:5;3778:1;3802:18;3794:6;3791:30;3788:56;;;3824:18;;:::i;:::-;-1:-1:-1;3979:2:21;3973:9;-1:-1:-1;;3892:2:21;3871:15;;3867:29;;4037:2;4025:15;4021:29;4009:42;;4102:22;;;4081:18;4066:34;;4063:62;4060:88;;;4128:18;;:::i;:::-;4164:2;4157:22;4212;;;4197:6;-1:-1:-1;4197:6:21;4249:16;;;4246:25;-1:-1:-1;4243:45:21;;;4284:1;4281;4274:12;4243:45;4334:6;4329:3;4322:4;4314:6;4310:17;4297:44;4389:1;4382:4;4373:6;4365;4361:19;4357:30;4350:41;;3681:716;;;;;:::o;4402:222::-;4445:5;4498:3;4491:4;4483:6;4479:17;4475:27;4465:55;;4516:1;4513;4506:12;4465:55;4538:80;4614:3;4605:6;4592:20;4585:4;4577:6;4573:17;4538:80;:::i;4629:396::-;4707:6;4715;4768:2;4756:9;4747:7;4743:23;4739:32;4736:52;;;4784:1;4781;4774:12;4736:52;4807:29;4826:9;4807:29;:::i;:::-;4797:39;;4887:2;4876:9;4872:18;4859:32;4914:18;4906:6;4903:30;4900:50;;;4946:1;4943;4936:12;4900:50;4969;5011:7;5002:6;4991:9;4987:22;4969:50;:::i;:::-;4959:60;;;4629:396;;;;;:::o;5030:436::-;5108:6;5116;5169:2;5157:9;5148:7;5144:23;5140:32;5137:52;;;5185:1;5182;5175:12;5137:52;5230:23;;;-1:-1:-1;5328:2:21;5313:18;;5300:32;5355:18;5344:30;;5341:50;;;5387:1;5384;5377:12;5471:186;5530:6;5583:2;5571:9;5562:7;5558:23;5554:32;5551:52;;;5599:1;5596;5589:12;5551:52;5622:29;5641:9;5622:29;:::i;5662:347::-;5727:6;5735;5788:2;5776:9;5767:7;5763:23;5759:32;5756:52;;;5804:1;5801;5794:12;5756:52;5827:29;5846:9;5827:29;:::i;:::-;5817:39;;5906:2;5895:9;5891:18;5878:32;5953:5;5946:13;5939:21;5932:5;5929:32;5919:60;;5975:1;5972;5965:12;5919:60;5998:5;5988:15;;;5662:347;;;;;:::o;6014:713::-;6109:6;6117;6125;6133;6186:3;6174:9;6165:7;6161:23;6157:33;6154:53;;;6203:1;6200;6193:12;6154:53;6226:29;6245:9;6226:29;:::i;:::-;6216:39;;6274:38;6308:2;6297:9;6293:18;6274:38;:::i;:::-;6264:48;-1:-1:-1;6381:2:21;6366:18;;6353:32;;-1:-1:-1;6460:2:21;6445:18;;6432:32;6487:18;6476:30;;6473:50;;;6519:1;6516;6509:12;6473:50;6542:22;;6595:4;6587:13;;6583:27;-1:-1:-1;6573:55:21;;6624:1;6621;6614:12;6573:55;6647:74;6713:7;6708:2;6695:16;6690:2;6686;6682:11;6647:74;:::i;:::-;6637:84;;;6014:713;;;;;;;:::o;6732:260::-;6800:6;6808;6861:2;6849:9;6840:7;6836:23;6832:32;6829:52;;;6877:1;6874;6867:12;6829:52;6900:29;6919:9;6900:29;:::i;:::-;6890:39;;6948:38;6982:2;6971:9;6967:18;6948:38;:::i;6997:380::-;7076:1;7072:12;;;;7119;;;7140:61;;7194:4;7186:6;7182:17;7172:27;;7140:61;7247:2;7239:6;7236:14;7216:18;7213:38;7210:161;;7293:10;7288:3;7284:20;7281:1;7274:31;7328:4;7325:1;7318:15;7356:4;7353:1;7346:15;7382:127;7443:10;7438:3;7434:20;7431:1;7424:31;7474:4;7471:1;7464:15;7498:4;7495:1;7488:15;7514:128;7581:9;;;7602:11;;;7599:37;;;7616:18;;:::i;8023:135::-;8062:3;8083:17;;;8080:43;;8103:18;;:::i;:::-;-1:-1:-1;8150:1:21;8139:13;;8023:135::o;8452:496::-;8631:3;8669:6;8663:13;8685:66;8744:6;8739:3;8732:4;8724:6;8720:17;8685:66;:::i;:::-;8814:13;;8773:16;;;;8836:70;8814:13;8773:16;8883:4;8871:17;;8836:70;:::i;:::-;8922:20;;8452:496;-1:-1:-1;;;;8452:496:21:o;9079:518::-;9181:2;9176:3;9173:11;9170:421;;;9217:5;9214:1;9207:16;9261:4;9258:1;9248:18;9331:2;9319:10;9315:19;9312:1;9308:27;9302:4;9298:38;9367:4;9355:10;9352:20;9349:47;;;-1:-1:-1;9390:4:21;9349:47;9445:2;9440:3;9436:12;9433:1;9429:20;9423:4;9419:31;9409:41;;9500:81;9518:2;9511:5;9508:13;9500:81;;;9577:1;9563:16;;9544:1;9533:13;9500:81;;9773:1299;9899:3;9893:10;9926:18;9918:6;9915:30;9912:56;;;9948:18;;:::i;:::-;9977:97;10067:6;10027:38;10059:4;10053:11;10027:38;:::i;:::-;10021:4;9977:97;:::i;:::-;10123:4;10154:2;10143:14;;10171:1;10166:649;;;;10859:1;10876:6;10873:89;;;-1:-1:-1;10928:19:21;;;10922:26;10873:89;-1:-1:-1;;9730:1:21;9726:11;;;9722:24;9718:29;9708:40;9754:1;9750:11;;;9705:57;10975:81;;10136:930;;10166:649;9026:1;9019:14;;;9063:4;9050:18;;-1:-1:-1;;10202:20:21;;;10320:222;10334:7;10331:1;10328:14;10320:222;;;10416:19;;;10410:26;10395:42;;10523:4;10508:20;;;;10476:1;10464:14;;;;10350:12;10320:222;;;10324:3;10570:6;10561:7;10558:19;10555:201;;;10631:19;;;10625:26;-1:-1:-1;;10714:1:21;10710:14;;;10726:3;10706:24;10702:37;10698:42;10683:58;10668:74;;10555:201;-1:-1:-1;;;;10802:1:21;10786:14;;;10782:22;10769:36;;-1:-1:-1;9773:1299:21:o;11077:485::-;-1:-1:-1;;;;;11308:32:21;;;11290:51;;11377:32;;11372:2;11357:18;;11350:60;11441:2;11426:18;;11419:34;;;11489:3;11484:2;11469:18;;11462:31;;;-1:-1:-1;;11510:46:21;;11536:19;;11528:6;11510:46;:::i;:::-;11502:54;11077:485;-1:-1:-1;;;;;;11077:485:21:o;11567:249::-;11636:6;11689:2;11677:9;11668:7;11664:23;11660:32;11657:52;;;11705:1;11702;11695:12;11657:52;11737:9;11731:16;11756:30;11780:5;11756:30;:::i"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","MULTISIG_ROLE()":"e328400c","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getCurrentTokenId()":"56189236","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","mint(address)":"6a627842","mintWithMetadata(address,string)":"471d06f4","name()":"06fdde03","ownerOf(uint256)":"6352211e","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","updateMetadata(uint256,string)":"53c8388e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AdminRequired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SoulboundApprovalNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SoulboundSetApprovalForAllNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SoulboundTransferNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMetadataURI\",\"type\":\"string\"}],\"name\":\"HealthIDMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"HealthIDMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MULTISIG_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"mintWithMetadata\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Soulbound NFT contract for health identity tokens\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Constructor sets up the NFT with name, symbol, and initial roles\",\"params\":{\"admin\":\"Address that will have admin privileges\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getCurrentTokenId()\":{\"details\":\"Get the current token ID counter value\",\"returns\":{\"_0\":\"Current token ID that will be used for next mint\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint(address)\":{\"details\":\"Mint a new HealthID NFT with auto-incrementing token ID\",\"params\":{\"to\":\"Address to mint the token to\"},\"returns\":{\"_0\":\"tokenId The ID of the newly minted token\"}},\"mintWithMetadata(address,string)\":{\"details\":\"Mint a new HealthID NFT with metadata URI\",\"params\":{\"metadataURI\":\"URI pointing to the token metadata\",\"to\":\"Address to mint the token to\"},\"returns\":{\"_0\":\"tokenId The ID of the newly minted token\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Get total number of tokens minted\",\"returns\":{\"_0\":\"Total supply of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"updateMetadata(uint256,string)\":{\"details\":\"Update metadata URI for an existing token\",\"params\":{\"metadataURI\":\"New metadata URI\",\"tokenId\":\"Token ID to update\"}}},\"title\":\"HealthIDNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract creates non-transferable NFTs that represent health identities\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HealthIDNFT.sol\":\"HealthIDNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/HealthIDNFT.sol\":{\"keccak256\":\"0xaa4546c30a9b6a9c39bb14eddcc0fa8a40cb69ea4565a42b243fc22039df81a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b7e73408837d7fc9ce79318ef0b636c76c73eda2fff11a7f6e2555d98b67c97\",\"dweb:/ipfs/Qmcv2orJ9xxgLGm6R6MbQehv1EScYxAn3cvtQQCB6amhHs\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":581,"contract":"contracts/HealthIDNFT.sol:HealthIDNFT","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":583,"contract":"contracts/HealthIDNFT.sol:HealthIDNFT","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":587,"contract":"contracts/HealthIDNFT.sol:HealthIDNFT","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":591,"contract":"contracts/HealthIDNFT.sol:HealthIDNFT","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":595,"contract":"contracts/HealthIDNFT.sol:HealthIDNFT","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":601,"contract":"contracts/HealthIDNFT.sol:HealthIDNFT","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1670,"contract":"contracts/HealthIDNFT.sol:HealthIDNFT","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":27,"contract":"contracts/HealthIDNFT.sol:HealthIDNFT","label":"_roles","offset":0,"slot":"7","type":"t_mapping(t_bytes32,t_struct(RoleData)22_storage)"},{"astId":6944,"contract":"contracts/HealthIDNFT.sol:HealthIDNFT","label":"_tokenIdCounter","offset":0,"slot":"8","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(RoleData)22_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)22_storage"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(RoleData)22_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":19,"contract":"contracts/HealthIDNFT.sol:HealthIDNFT","label":"hasRole","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":21,"contract":"contracts/HealthIDNFT.sol:HealthIDNFT","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}